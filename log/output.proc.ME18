echo auto-generated by afni_proc.py, Thu Apr 18 13:26:04 2024
auto-generated by afni_proc.py, Thu Apr 18 13:26:04 2024
echo (version 7.74, April 8, 2024)
(version 7.74, April 8, 2024)
echo execution started: `date`
date
execution started: 2024å¹´ 04æœˆ 18æ—¥ æ˜ŸæœŸå›› 13:26:04 CST
afni -ver
Precompiled binary linux_ubuntu_16_64: Apr  8 2024 (Version AFNI_24.1.02 'Publius Septimius Geta')
afni_history -check_date 7 Mar 2024
-- is current: afni_history as new as: 07 Mar 2024
               most recent entry is:   08 Apr 2024
if ( 0 ) then
if ( 0 > 0 ) then
set subj = ME18
endif
set output_dir = ME18.results
if ( -d ME18.results ) then
set runs = ( `count -digits 2 1 1` )
count -digits 2 1 1
mkdir -p ME18.results
mkdir ME18.results/stimuli
cp /home/cputest/Stroke/Data/ME18/func_task/unprocessed/Motor_left.txt /home/cputest/Stroke/Data/ME18/func_task/unprocessed/Motor_right.txt ME18.results/stimuli
3dcopy /home/cputest/Stroke/Data/ME18/func_task/unprocessed/T1w_acpc_dc_restore_brain.nii.gz ME18.results/T1w_acpc_dc_restore_brain
++ 3dcopy: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
3dTcat -prefix ME18.results/pb00.ME18.r01.tcat /home/cputest/Stroke/Data/ME18/func_task/unprocessed/bold_task_hand_motor.nii.gz[0..$]
++ 3dTcat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
** AFNI converts NIFTI_datatype=512 (UINT16) in file /home/cputest/Stroke/Data/ME18/func_task/unprocessed/bold_task_hand_motor.nii.gz to FLOAT32
     Warnings of this type will be muted for this session.
     Set AFNI_NIFTI_TYPE_WARN to YES to see them all, NO to see none.
++ elapsed time = 10.0 s
set tr_counts = ( 700 )
cd ME18.results
find_variance_lines.tcsh -polort 5 -nerode 2 -rdir vlines.pb00.tcat pb00.ME18.r01.tcat+orig.HEAD
tee out.vlines.pb00.tcat.txt
++ have nslices : 78
++ copying pb00.ME18.r01.tcat+orig.HEAD[0..$] to ts.0.orig.r01.nii.gz
++ 3dTcat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ elapsed time = 153.0 s
++ creating automask from first dset
++ 3dAutomask: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/ts.0.orig.r01.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/ts.0.orig.r01.nii.gz is 15.813743 degrees from plumb.
++ Loading dataset ts.0.orig.r01.nii.gz
++ Forming automask
 + Fixed clip level = 284.241791
 + Used gradual clip level = 239.208755 .. 330.370850
 + Number voxels above clip level = 101855
 + Clustering voxels ...
 + Largest cluster has 96796 voxels
 + Clustering voxels ...
 + Largest cluster has 96349 voxels
 + Filled   945 voxels in small holes; now have 97294 voxels
 + Filled  1250 voxels in large holes; now have 98544 voxels
 + Clustering voxels ...
 + Largest cluster has 98542 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 620306 voxels
 + Mask now has 98542 voxels
++ 98542 voxels in the mask [out of 718848: 13.71%]
++ first  19 x-planes are zero [from R]
++ last   21 x-planes are zero [from L]
++ first  10 y-planes are zero [from P]
++ last   16 y-planes are zero [from A]
++ first   1 z-planes are zero [from I]
++ last    8 z-planes are zero [from S]
++ Output dataset ./mask.nii.gz
++ CPU time = 0.000000 sec

-- will apply mask mask.nii.gz
++ eroding mask.nii.gz by 2 voxels
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/tmp.mask.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/tmp.mask.nii.gz is 15.813743 degrees from plumb.
++ have 1 volumes of input to combine
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 70069 survived, 648779 were zero
++ writing result mask.nii.gz...
++ Output dataset ./mask.nii.gz

++ requiring 5 voxels in mask columns
++ 3dLocalstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/mask.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/mask.nii.gz is 15.813743 degrees from plumb.
++ Number of voxels in mask = 70069
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/mask.nii.gz is 15.813743 degrees from plumb.
++ Neighborhood comprises 157 voxels
++ Start sub-brick [0]
++ Output dataset ./tmp.mask.col.count.nii.gz
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./mask.nii.gz

-- detrend -polort 5, new eset = ts.1.det.r01.nii.gz
++ 3dTproject: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/ts.0.orig.r01.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/ts.0.orig.r01.nii.gz is 15.813743 degrees from plumb.
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 700 retained time points MINUS 6 regressors ==> 694 D.O.F. left
++ no -mask option ==> processing all 718848 voxels in dataset
++ THD_dset_to_vectim: allocated 2012774400 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 33 vectors are constant

++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/ts.1.det.r01.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/ts.1.det.r01.nii.gz is 15.813743 degrees from plumb.
++ Output dataset ./tmp.stdev.nii.gz
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./var.0.orig.r01.nii.gz
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/mask.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/mask.nii.gz is 15.813743 degrees from plumb.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/var.0.orig.r01.nii.gz is 15.813743 degrees from plumb.
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./var.1.scale.r01.nii.gz
++ 3dLocalstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/mask.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/mask.nii.gz is 15.813743 degrees from plumb.
++ Number of voxels in mask = 69932
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/var.1.scale.r01.nii.gz is 15.813743 degrees from plumb.
++ Neighborhood comprises 157 voxels
++ Start sub-brick [0]
++ Output dataset ./proj.r01.nii.gz
++ Neighborhood definition (NN=3) accepted
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/proj.r01.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/proj.r01.nii.gz is 15.813743 degrees from plumb.
++ User input stat threshold: -1
++ User input stat threshold: 0.95
++ Data volume:      [0] 'MEAN'
++ Threshold volume: [0] 'MEAN'
++ How many sides to this stat? 0
++ Looks like clustering is *not* being performed on a stat value; won't worry about sidedness, then.
++ Opt code: 2sided,-1,0.95,NN3
[7m*+ WARNING:[0m No mask being used? That *could* be OK, but thought I'd let you know...
++ Threshold volume [0] does *not* appear to be a stat!
[7m*+ WARNING:[0m No clusters found!
#** NO CLUSTERS FOUND ***

-- evaluating intersection...
++ 3dMean: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ WARNING: Have only 1 dset.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/proj.r01.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/proj.r01.nii.gz is 15.813743 degrees from plumb.
++ Neighborhood definition (NN=3) accepted
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/proj.min.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vlines.pb00.tcat/proj.min.nii.gz is 15.813743 degrees from plumb.
++ User input stat threshold: -1
++ User input stat threshold: 0.95
++ Data volume:      [0] 'MEAN'
++ Threshold volume: [0] 'MEAN'
++ How many sides to this stat? 0
++ Looks like clustering is *not* being performed on a stat value; won't worry about sidedness, then.
++ Opt code: 2sided,-1,0.95,NN3
[7m*+ WARNING:[0m No mask being used? That *could* be OK, but thought I'd let you know...
++ Threshold volume [0] does *not* appear to be a stat!
[7m*+ WARNING:[0m No clusters found!
#** NO CLUSTERS FOUND ***
++ Check about making images
++ have do_clean, removing time series...


== found questionable regions across inputs: 0
   found questionable intersected regions  : 0

=============== bad_coords.inter.txt ===============

=============== bad_coords.r01.txt ===============

3drefit -Tslices 0 0.47656 0.0625 0.54688 0.13281 0.60938 0.20312 0.67969 0.26562 0.75 0.33594 0.82031 0.40625 0 0.47656 0.0625 0.54688 0.13281 0.60938 0.20312 0.67969 0.26562 0.75 0.33594 0.82031 0.40625 0 0.47656 0.0625 0.54688 0.13281 0.60938 0.20312 0.67969 0.26562 0.75 0.33594 0.82031 0.40625 0 0.47656 0.0625 0.54688 0.13281 0.60938 0.20312 0.67969 0.26562 0.75 0.33594 0.82031 0.40625 0 0.47656 0.0625 0.54688 0.13281 0.60938 0.20312 0.67969 0.26562 0.75 0.33594 0.82031 0.40625 0 0.47656 0.0625 0.54688 0.13281 0.60938 0.20312 0.67969 0.26562 0.75 0.33594 0.82031 0.40625 pb00.ME18.r01.tcat+orig
++ 3drefit: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset pb00.ME18.r01.tcat+orig
 + setting slice time offsets
++ 3drefit processed 1 datasets
touch out.pre_ss_warn.txt
foreach run ( 01 )
3dToutcount -automask -fraction -polort 5 -legendre pb00.ME18.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./pb00.ME18.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.ME18.r01.tcat+orig.BRIK is 15.813743 degrees from plumb.
++ 98542 voxels passed mask/clip
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D
foreach run ( 01 )
3dTto1D -method 4095_warn -input pb00.ME18.r01.tcat+orig
tee -a out.4095_all.txt
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./pb00.ME18.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.ME18.r01.tcat+orig.BRIK is 15.813743 degrees from plumb.
++ computing 4095_warn, nvox = 718848, nmask = 718848, nt = 700
++ global max = 1378.000000, global 4095 count = 0
++ max of 1378 is okay, clearing results...
end
awk /warning/ {print} out.4095_all.txt
tee out.4095_warn.txt
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 700 -index_to_run_tr 15
set minoutrun = 01
set minouttr = 15
echo min outlier: run 01, TR 15
tee out.min_outlier.txt
min outlier: run 01, TR 15
foreach run ( 01 )
3dTshift -tzero 0 -quintic -prefix pb01.ME18.r01.tshift pb00.ME18.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./pb00.ME18.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.ME18.r01.tcat+orig.BRIK is 15.813743 degrees from plumb.
++ updating time offset to 0
end
3dbucket -prefix vr_base_min_outlier pb01.ME18.r01.tshift+orig[15]
++ 3dbucket: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
align_epi_anat.py -anat2epi -anat T1w_acpc_dc_restore_brain+orig -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -anat_has_skull no -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.63
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./T1w_acpc_dc_restore_brain+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_T1w_acpc_dc_restore_brain*
#Script is running (command trimmed):
  3dcopy ./T1w_acpc_dc_restore_brain+orig ./__tt_T1w_acpc_dc_restore_brain+orig
++ 3dcopy: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
#Script is running (command trimmed):
  3dinfo ./__tt_T1w_acpc_dc_restore_brain+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/__tt_T1w_acpc_dc_restore_brain+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/vr_base_min_outlier+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_T1w_acpc_dc_restore_brain+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base_min_outlier+orig -prefix ./__tt_T1w_acpc_dc_restore_brain_ob -newgrid 1.000000 ./__tt_T1w_acpc_dc_restore_brain+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_T1w_acpc_dc_restore_brain_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./__tt_vr_base_min_outlier_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts+orig.BRIK is 15.813743 degrees from plumb.
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 284.474915
 + Used gradual clip level = 239.675705 .. 327.875732
 + Number voxels above clip level = 101915
 + Clustering voxels ...
 + Largest cluster has 96638 voxels
 + Clustering voxels ...
 + Largest cluster has 95920 voxels
 + Filled  1291 voxels in small holes; now have 97211 voxels
 + Filled  1222 voxels in large holes; now have 98433 voxels
 + Clustering voxels ...
 + Largest cluster has 98429 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 620419 voxels
 + Mask now has 98429 voxels
++ 98429 voxels in the mask [out of 718848: 13.69%]
++ first  19 x-planes are zero [from R]
++ last   21 x-planes are zero [from L]
++ first  10 y-planes are zero [from P]
++ last   16 y-planes are zero [from A]
++ first   1 z-planes are zero [from I]
++ last    8 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 753.216370 on /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/__tt_vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_min_outlier_ts_ns_wt -a ./__tt_vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/753.216370))'
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_T1w_acpc_dc_restore_brain_ob_al_junk_wtal -weight ./__tt_vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_T1w_acpc_dc_restore_brain_ob+orig -prefix ./__tt_T1w_acpc_dc_restore_brain_ob_temp_al_junk -base ./__tt_vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./T1w_acpc_dc_restore_brain_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK is 15.813743 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 15.813743 degrees from plumb.
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_T1w_acpc_dc_restore_brain_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 1400081 voxels in -source_automask+2
++ Zero-pad: ybot=2 ytop=0
++ Zero-pad: zbot=11 ztop=4
++ 98429 voxels [11.2%] in weight mask
++ Number of points for matching = 98429
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'TOHD(12.4104)'
++ base center of mass = 46.199 42.755 55.172 (index)
 + source center of mass = 89.439 135.521 108.184 (index)
 + source-target CM = 2.557 -3.939 11.778 (xyz)
 + estimated center of mass shifts = 2.557 -3.939 11.778
++ shift param auto-range: -70.5..75.6 -78.5..70.7 -59.1..82.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -7.443436 .. 12.556564  center = 2.556564
 + Range param#2 [y-shift] = -13.939423 .. 6.060577  center = -3.939423
 + Range param#3 [z-shift] = 1.778030 .. 21.778030  center = 11.778030
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -37.443436 .. 42.556564  center = 2.556564
 + Range param#2 [y-shift] = -43.939423 .. 36.060577  center = -3.939423
 + Range param#3 [z-shift] = -28.221970 .. 51.778030  center = 11.778030
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000083
++ Final parameter search ranges:
 +       x-shift =  -37.443 ..   42.557
 +       y-shift =  -43.939 ..   36.061
 +       z-shift =  -28.222 ..   51.778
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1400081 [out of 11120200] voxels
 + base mask has 121143 [out of 874944] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.40
 + - Smoothing source; radius=2.40
 + !source mask fill: ubot=29.6454 usiz=95.2825
 + - copying weight image
 + - using 98429 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 84618 total points stored in 163 'TOHD(12.6403)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+101)*64 params [top5=*o+-.]:#oo-.++-o*[#18=-0.044225] **[#20=-0.0534324] **[#26=-0.055434] *+o*[#49=-0.0584135] **[#58=-0.0601023] **[#1172=-0.0623029] *+.$.
 + - best 88 costs found:
   o= 0 v=-0.062303:  -4.11 -30.61  18.44   7.50 -30.00   7.50  [grid]
   o= 1 v=-0.060102:  -4.11   2.73  18.44  -7.50  -7.50  -7.50  [grid]
   o= 2 v=-0.058808:  -4.11 -30.61  18.44  -7.50 -30.00   7.50  [grid]
   o= 3 v=-0.058413:   9.22   2.73  18.44   7.50  -7.50  -7.50  [grid]
   o= 4 v=-0.058332:  -7.27 -28.70  23.16  -3.10 -34.36   2.55  [rand]
   o= 5 v=-0.057924:   9.22 -30.61  18.44   7.50 -30.00  -7.50  [grid]
   o= 6 v=-0.055434:  -4.11   2.73  18.44  -7.50  -7.50   7.50  [grid]
   o= 7 v=-0.054294:   9.22   2.73   5.11   7.50   7.50  -7.50  [grid]
   o= 8 v=-0.053432:  -4.11 -10.61  18.44   7.50  -7.50   7.50  [grid]
   o= 9 v=-0.051954:  -4.11 -10.61  18.44  -7.50  -7.50   7.50  [grid]
   o=10 v=-0.046231:   9.22 -10.61   5.11   7.50  -7.50  -7.50  [grid]
   o=11 v=-0.044946: -24.11   2.73  18.44  -7.50  -7.50  30.00  [grid]
   o=12 v=-0.044363:   9.22 -10.61  18.44  30.00  -7.50   7.50  [grid]
   o=13 v=-0.044225:  -4.11   2.73  18.44   7.50  -7.50   7.50  [grid]
   o=14 v=-0.044085:   9.22   2.73  18.44  -7.50  -7.50  -7.50  [grid]
   o=15 v=-0.043618:  -4.11 -10.61  18.44   7.50 -30.00   7.50  [grid]
   o=16 v=-0.042634:  -4.11  22.73   5.11  -7.50   7.50   7.50  [grid]
   o=17 v=-0.042273:   2.56  -3.94  11.78   0.00   0.00   0.00  [grid]
   o=18 v=-0.042110:  -4.11   2.73  18.44 -30.00  -7.50  -7.50  [grid]
   o=19 v=-0.041911: -11.39 -27.81  29.96   5.58 -38.34  17.97  [rand]
   o=20 v=-0.041793:  -4.11 -30.61  18.44 -30.00 -30.00  -7.50  [grid]
   o=21 v=-0.041097:   9.22 -10.61  18.44   7.50  -7.50  -7.50  [grid]
   o=22 v=-0.040679:   9.22 -30.61  18.44  30.00 -30.00   7.50  [grid]
   o=23 v=-0.040660:  -4.11 -30.61  18.44  -7.50 -30.00  -7.50  [grid]
   o=24 v=-0.040297:  -4.11   2.73   5.11  -7.50   7.50  -7.50  [grid]
   o=25 v=-0.039911:  -4.11   2.73   5.11  -7.50   7.50   7.50  [grid]
   o=26 v=-0.039696:  -1.52 -10.17  19.57   4.32 -22.85  18.95  [rand]
   o=27 v=-0.039565: -20.29 -27.51  22.19   5.91 -29.74  29.45  [rand]
   o=28 v=-0.038187: -11.47 -19.66  26.45 -24.25 -37.55   4.41  [rand]
   o=29 v=-0.037897:  -4.11   2.73  18.44   7.50   7.50   7.50  [grid]
   o=30 v=-0.037598:   6.64 -10.17  19.57  -4.32 -22.85 -18.95  [rand]
   o=31 v=-0.037479:   9.22 -10.61  18.44  -7.50 -30.00  -7.50  [grid]
   o=32 v=-0.037147: -13.43  15.55  17.50 -20.53   3.14  10.08  [rand]
   o=33 v=-0.037015:  -4.11  22.73   5.11   7.50  30.00  30.00  [grid]
   o=34 v=-0.036776:   9.22  22.73  18.44   7.50   7.50  -7.50  [grid]
   o=35 v=-0.036733:  -4.11 -10.61  18.44  -7.50 -30.00   7.50  [grid]
   o=36 v=-0.036617:  -4.11 -10.61  18.44 -30.00  -7.50  -7.50  [grid]
   o=37 v=-0.036494:  29.22   2.73  18.44   7.50  -7.50 -30.00  [grid]
   o=38 v=-0.036335:  -4.11  22.73   5.11  -7.50  30.00   7.50  [grid]
   o=39 v=-0.036244:  -7.27 -28.70  23.16   3.10 -34.36   2.55  [rand]
   o=40 v=-0.036153:  -4.11   2.73  18.44 -30.00   7.50  -7.50  [grid]
   o=41 v=-0.036005:   9.22   2.73   5.11  -7.50   7.50 -30.00  [grid]
   o=42 v=-0.035991:   9.22 -30.61  18.44  -7.50 -30.00  -7.50  [grid]
   o=43 v=-0.035985:   9.22   2.73  18.44  30.00   7.50   7.50  [grid]
   o=44 v=-0.035684:  -4.11  22.73   5.11   7.50   7.50   7.50  [grid]
   o=45 v=-0.035600: -25.63 -18.16  25.26 -11.27 -31.24  23.90  [rand]
   o=46 v=-0.035543: -11.65 -13.39  16.62  15.99 -13.53  29.93  [rand]
   o=47 v=-0.035520: -12.40 -15.09  22.23 -35.95 -25.02  -2.65  [rand]
   o=48 v=-0.035459:  -4.11 -10.61  18.44  -7.50  -7.50  -7.50  [grid]
   o=49 v=-0.035219:   9.22  22.73   5.11   7.50  30.00  -7.50  [grid]
   o=50 v=-0.035208:   9.22   2.73  18.44  30.00  -7.50   7.50  [grid]
   o=51 v=-0.035134:  16.59 -19.66  26.45  24.25 -37.55  -4.41  [rand]
   o=52 v=-0.035029: -13.43  15.55   6.05 -20.53   3.14  10.08  [rand]
   o=53 v=-0.034947: -11.47 -19.66  26.45 -24.25 -37.55  -4.41  [rand]
   o=54 v=-0.034938:   9.22 -30.61  18.44 -30.00 -30.00 -30.00  [grid]
   o=55 v=-0.034851: -19.77 -33.57   4.78   8.73 -38.75  33.73  [rand]
   o=56 v=-0.034846:  -4.11 -10.61  18.44  -7.50 -30.00  -7.50  [grid]
   o=57 v=-0.034679:  -4.11  22.73  18.44  -7.50   7.50  -7.50  [grid]
   o=58 v=-0.034379:   9.22   2.73  18.44  -7.50  -7.50 -30.00  [grid]
   o=59 v=-0.034298:   9.22   2.73   5.11   7.50   7.50 -30.00  [grid]
   o=60 v=-0.034162:   9.22  22.73   5.11  -7.50  30.00 -30.00  [grid]
   o=61 v=-0.034103: -11.65   5.51   6.94  15.99 -13.53  29.93  [rand]
   o=62 v=-0.034028:   9.22  22.73 -14.89   7.50  30.00  -7.50  [grid]
   o=63 v=-0.033630:  17.85  16.95 -18.61  14.56  29.40 -15.92  [rand]
   o=64 v=-0.033575: -24.11   2.73  18.44 -30.00  -7.50   7.50  [grid]
   o=65 v=-0.033493:  25.41 -27.51  22.19  -5.91 -29.74 -29.45  [rand]
   o=66 v=-0.033487:  -7.27 -28.70  23.16  -3.10 -34.36  -2.55  [rand]
   o=67 v=-0.033203:  29.22 -10.61  18.44   7.50 -30.00 -30.00  [grid]
   o=68 v=-0.033129:  16.76 -13.39  16.62 -15.99 -13.53 -29.93  [rand]
   o=69 v=-0.033114:  -4.11  22.73   5.11  30.00  30.00  30.00  [grid]
   o=70 v=-0.033021: -12.40 -15.09  22.23 -35.95 -25.02   2.65  [rand]
   o=71 v=-0.032970:  -4.11  22.73  18.44  -7.50   7.50   7.50  [grid]
   o=72 v=-0.032616:   6.64 -10.17  19.57   4.32 -22.85 -18.95  [rand]
   o=73 v=-0.032554:   9.22  22.73   5.11  30.00  30.00 -30.00  [grid]
   o=74 v=-0.032552:  18.54  15.55  17.50  20.53   3.14 -10.08  [rand]
   o=75 v=-0.032437: -24.11 -30.61  18.44 -30.00 -30.00   7.50  [grid]
   o=76 v=-0.032098:  18.54  15.55  17.50  20.53  -3.14 -10.08  [rand]
   o=77 v=-0.032072:  -7.27  20.82   0.40  -3.10  34.36   2.55  [rand]
   o=78 v=-0.032064:   9.22   2.73   5.11  -7.50  -7.50 -30.00  [grid]
   o=79 v=-0.032027: -13.43  15.55  17.50 -20.53  -3.14  10.08  [rand]
   o=80 v=-0.031964:   9.22 -10.61  18.44   7.50 -30.00  -7.50  [grid]
   o=81 v=-0.031961:  -4.11   2.73   5.11   7.50   7.50   7.50  [grid]
   o=82 v=-0.031934:   9.22  22.73   5.11   7.50   7.50  -7.50  [grid]
   o=83 v=-0.031844:  -4.11  22.73  18.44   7.50   7.50   7.50  [grid]
   o=84 v=-0.031844: -24.11   2.73   5.11 -30.00   7.50   7.50  [grid]
   o=85 v=-0.031702:   9.22   2.73  18.44   7.50   7.50  -7.50  [grid]
   o=86 v=-0.031672:   9.22 -10.61  18.44  -7.50  -7.50  -7.50  [grid]
   o=87 v=-0.031490:   9.22   2.73   5.11  -7.50   7.50  -7.50  [grid]
 + - A little optimization:*[#10562=-0.0706479] *[#10563=-0.075272] *[#10571=-0.0836462] *[#10572=-0.0887389] *[#10577=-0.0921328] *[#10578=-0.0948957] *[#10580=-0.095245] *[#10582=-0.0968244] *[#10583=-0.097936] *[#10584=-0.0993656] *[#10585=-0.10163] *[#10588=-0.102113] *[#10590=-0.102724] *[#10591=-0.103046] *[#10592=-0.103754] *[#10595=-0.104127] *[#10596=-0.104551] *[#10599=-0.1056] *[#10602=-0.105825] *[#10603=-0.105849] *[#10606=-0.105895] *[#10609=-0.106194] *[#10610=-0.106761] *[#10611=-0.107931] *[#10612=-0.109729] *[#10613=-0.111356] *[#10615=-0.111823] *[#10618=-0.112368] *[#10620=-0.112576] *[#10621=-0.113107] *[#10623=-0.113276] *[#10624=-0.113616] *[#10625=-0.114915] *[#10626=-0.115186] *[#10632=-0.115593] *[#10633=-0.115696] *[#10634=-0.115853] *[#10635=-0.115972] *[#10638=-0.115976] *[#10639=-0.11603] *[#10640=-0.11608] *[#10643=-0.116169] ...*[#10835=-0.12478] *[#10836=-0.124863] *[#10838=-0.13465] *[#10840=-0.14043] *[#10841=-0.150847] *[#10842=-0.153918] *[#10844=-0.15468] *[#10845=-0.158801] *[#10846=-0.167037] *[#10847=-0.183239] *[#10848=-0.190223] *[#10851=-0.203492] *[#10854=-0.207735] *[#10856=-0.208399] *[#10857=-0.216397] *[#10859=-0.218318] *[#10860=-0.225264] *[#10863=-0.231551] *[#10864=-0.231919] ......*[#11321=-0.232948] *[#11323=-0.235459] *[#11324=-0.237218] *[#11331=-0.238203] *[#11333=-0.23839] *[#11334=-0.238583] *[#11335=-0.238809] *[#11337=-0.238914] *[#11338=-0.239063] *[#11343=-0.239227] ......*[#11817=-0.239284] ...........*[#12731=-0.239289] ..............................*[#14953=-0.239306] ................................
 + - costs of the above after a little optimization:
   o= 0 v=-0.116169:  -0.57 -22.02  19.41   1.06 -25.61   2.67  [grid]  [f=83]
   o= 1 v=-0.080107:  -3.47  -0.32  18.65  -6.92  -6.50  -1.25  [grid]  [f=52]
   o= 2 v=-0.106779:  -2.55 -25.33  17.98  -0.33 -28.02   3.80  [grid]  [f=83]
   o= 3 v=-0.231919:   2.05 -13.49  19.34   0.87 -17.84  -0.51  [grid]  [f=83]
   o= 4 v=-0.113468:   1.08 -23.91  18.90   1.91 -27.19   1.49  [rand]  [f=83]
   o= 5 v=-0.108415:   3.74 -25.54  18.56   2.78 -28.46  -0.96  [grid]  [f=83]
   o= 6 v=-0.083061:  -3.44   0.01  18.22  -0.27  -4.90   7.16  [grid]  [f=59]
   o= 7 v=-0.071024:   8.37   5.14   9.25   4.42   3.50  -7.74  [grid]  [f=83]
   o= 8 v=-0.094613:  -1.44  -5.61  19.49   2.19  -8.14   4.26  [grid]  [f=83]
   o= 9 v=-0.239227:   1.95 -13.59  20.06   1.31 -18.20   0.21  [grid]  [f=83]
   o=10 v=-0.238871:   1.97 -13.41  19.92   1.16 -17.95  -0.03  [grid]  [f=83]
   o=11 v=-0.057568: -17.22   0.57  21.09  -8.03 -12.35  24.93  [grid]  [f=79]
   o=12 v=-0.071441:   6.26  -8.18  19.43  19.79 -13.42   0.83  [grid]  [f=83]
   o=13 v=-0.238874:   1.76 -13.59  19.91   1.14 -18.04   0.13  [grid]  [f=83]
   o=14 v=-0.091664:   1.80  -4.14  18.85   2.65  -8.32   3.17  [grid]  [f=83]
   o=15 v=-0.239284:   1.90 -13.55  19.94   1.21 -18.01   0.14  [grid]  [f=61]
   o=16 v=-0.071069:  -1.58  18.00   5.86  -2.13  16.39   2.43  [grid]  [f=83]
   o=17 v=-0.081344:   4.57   3.30  17.97   2.43  -2.16  -1.35  [grid]  [f=83]
   o=18 v=-0.055842:  -6.99   2.75  17.61 -26.87  -1.90  -5.31  [grid]  [f=80]
   o=19 v=-0.095177:  -4.71 -26.53  16.71  -3.58 -28.92   5.97  [rand]  [f=83]
   o=20 v=-0.102813:   2.17 -24.67  19.39  -2.65 -29.04  -4.01  [grid]  [f=83]
   o=21 v=-0.239214:   1.96 -13.47  19.98   1.28 -17.95   0.13  [grid]  [f=83]
   o=22 v=-0.089815:   4.58 -30.16  16.91  10.50 -31.86   1.71  [grid]  [f=83]
   o=23 v=-0.114459:  -0.41 -22.30  18.87  -0.24 -25.57   1.22  [grid]  [f=83]
   o=24 v=-0.077807:  -1.07   4.34  15.39  -0.51   0.65   1.64  [grid]  [f=83]
   o=25 v=-0.064087:  -7.10   5.52   9.57  -4.53   4.45   6.66  [grid]  [f=75]
   o=26 v=-0.239289:   1.95 -13.59  20.01   1.26 -18.08   0.12  [rand]  [f=82]
   o=27 v=-0.051483: -19.01 -24.21  20.43   6.24 -31.66  29.55  [rand]  [f=58]
   o=28 v=-0.054164:  -9.42 -16.25  25.27 -17.20 -31.22   5.39  [rand]  [f=57]
   o=29 v=-0.107284:   1.53  -9.86  20.93  -1.25 -12.19  -0.53  [grid]  [f=83]
   o=30 v=-0.239278:   1.92 -13.51  19.97   1.21 -18.01   0.05  [rand]  [f=72]
   o=31 v=-0.239270:   1.95 -13.55  20.01   1.29 -18.06   0.18  [grid]  [f=76]
   o=32 v=-0.056778: -13.78   5.60  16.33 -21.02  -1.45   7.67  [rand]  [f=71]
   o=33 v=-0.047631:  -6.20  21.84   4.88  11.80  26.89  29.28  [grid]  [f=78]
   o=34 v=-0.068107:  10.08  10.53  12.24   8.13   7.81  -5.51  [grid]  [f=72]
   o=35 v=-0.090921:  -5.62 -26.76  16.27  -6.38 -28.78   6.48  [grid]  [f=66]
   o=36 v=-0.085436:   3.41  -7.36  20.64  -5.65 -13.57  -3.23  [grid]  [f=83]
   o=37 v=-0.056084:  23.45   4.71  18.47   2.85  -4.69 -29.01  [grid]  [f=71]
   o=38 v=-0.074746:   2.61  18.16   5.58   2.27  17.03  -0.11  [grid]  [f=83]
   o=39 v=-0.112664:   0.78 -23.55  18.94   3.58 -26.54   3.57  [rand]  [f=83]
   o=40 v=-0.055911:  -7.55   1.44  16.78 -27.68   1.23  -8.27  [grid]  [f=55]
   o=41 v=-0.067844:   3.65   0.01  12.59  -3.96  -1.45 -14.18  [grid]  [f=83]
   o=42 v=-0.109367:   1.86 -24.75  18.87   0.56 -28.13  -0.87  [grid]  [f=83]
   o=43 v=-0.050017:   9.28   2.04  16.24  29.04   4.75   5.11  [grid]  [f=53]
   o=44 v=-0.074115:  -0.39  16.80   7.90  -2.04  14.23   3.31  [grid]  [f=83]
   o=45 v=-0.136592:  -3.17 -15.08  18.68  -2.92 -18.66   3.63  [rand]  [f=83]
   o=46 v=-0.053668: -11.93 -12.56  23.50   6.75 -21.88  23.53  [rand]  [f=66]
   o=47 v=-0.063448: -12.04 -19.01  19.43 -20.64 -22.46   3.43  [rand]  [f=83]
   o=48 v=-0.239260:   1.97 -13.53  19.90   1.30 -17.98   0.16  [grid]  [f=83]
   o=49 v=-0.076290:   5.24  17.77   4.07   3.98  17.44  -5.15  [grid]  [f=65]
   o=50 v=-0.052404:   5.67   4.68  18.19  24.73  -3.95   4.58  [grid]  [f=83]
   o=51 v=-0.049930:  17.49 -24.55  22.86  22.38 -35.18  -7.43  [rand]  [f=57]
   o=52 v=-0.058560:  -9.91  15.35   9.44 -14.35   9.90  12.73  [rand]  [f=83]
   o=53 v=-0.051839: -13.11 -29.11  20.71 -23.33 -36.49   1.59  [rand]  [f=69]
   o=54 v=-0.045334:   7.93 -31.35  14.83 -27.87 -30.61 -24.94  [grid]  [f=56]
   o=55 v=-0.050034: -20.28 -31.94   9.51   6.61 -38.23  30.95  [rand]  [f=83]
  *o=56 v=-0.239306:   1.93 -13.64  20.04   1.23 -18.18   0.12  [grid]  [f=69]
   o=57 v=-0.068265:  -0.75  13.19  11.49  -5.59   6.34  -5.49  [grid]  [f=68]
   o=58 v=-0.057667:   7.43  -0.21  10.03  -6.63  -2.41 -24.60  [grid]  [f=71]
   o=59 v=-0.048661:   6.54   4.04   6.13   4.72   6.82 -23.23  [grid]  [f=67]
   o=60 v=-0.038850:  11.07  25.47   5.59  -5.10  29.97 -31.43  [grid]  [f=77]
   o=61 v=-0.047726:  -7.65   1.89   9.82  15.71 -13.37  27.65  [rand]  [f=83]
   o=62 v=-0.058534:   5.27  28.89  -3.83   4.91  27.42  -7.25  [grid]  [f=71]
   o=63 v=-0.042944:  16.29  13.85 -18.78  12.85  26.29 -18.82  [rand]  [f=70]
   o=64 v=-0.049714: -25.91   3.70  19.80 -30.98 -10.25  16.26  [grid]  [f=56]
   o=65 v=-0.046460:  23.33 -25.62  20.67  -5.75 -30.06 -34.84  [rand]  [f=77]
   o=66 v=-0.115323:   1.38 -23.36  19.03   2.81 -26.39   1.77  [rand]  [f=78]
   o=67 v=-0.043719:  26.60  -9.46  20.77   5.26 -22.85 -29.50  [grid]  [f=83]
   o=68 v=-0.048160:  15.13 -10.75  23.16 -16.52 -13.22 -27.54  [rand]  [f=83]
   o=69 v=-0.037959:  -4.47  23.14   6.16  32.42  35.95  29.28  [grid]  [f=56]
   o=70 v=-0.062449: -10.76 -18.78  19.52 -21.91 -22.00   0.24  [rand]  [f=62]
   o=71 v=-0.071829:  -1.59  15.64   8.93  -2.43  11.57   2.51  [grid]  [f=83]
   o=72 v=-0.239287:   1.93 -13.57  19.94   1.25 -18.04   0.14  [rand]  [f=61]
   o=73 v=-0.036431:  11.05  23.45   4.07  30.91  30.74 -30.36  [grid]  [f=40]
   o=74 v=-0.066171:  11.54   6.61  17.51  10.38   0.21  -4.37  [rand]  [f=78]
   o=75 v=-0.071824: -12.40 -22.50  18.18 -15.28 -26.48   6.81  [grid]  [f=83]
   o=76 v=-0.056522:  14.48   6.99  16.94  18.83   1.06  -6.46  [rand]  [f=65]
   o=77 v=-0.066221:  -1.64  22.64   0.38  -2.28  25.18   6.73  [rand]  [f=80]
   o=78 v=-0.057497:   7.26   1.33   8.26  -5.99   0.22 -24.69  [grid]  [f=83]
   o=79 v=-0.057096: -14.21   5.20  16.28 -22.69  -1.69   8.08  [rand]  [f=64]
   o=80 v=-0.239210:   1.94 -13.54  19.87   1.25 -17.90   0.12  [grid]  [f=77]
   o=81 v=-0.068725:   0.11   6.63  14.49   4.31   2.76  11.60  [grid]  [f=72]
   o=82 v=-0.076543:   5.51  16.73   5.88   4.07  14.92  -5.68  [grid]  [f=83]
   o=83 v=-0.034933:  -3.62  19.31  16.51   8.42   5.50   5.06  [grid]  [f=46]
   o=84 v=-0.055492: -18.63   6.38  11.40 -26.12   4.27  13.37  [grid]  [f=83]
   o=85 v=-0.081214:   4.61   3.19  17.75   2.57  -2.04  -1.04  [grid]  [f=83]
   o=86 v=-0.239190:   2.07 -13.56  20.04   1.38 -18.17   0.14  [grid]  [f=64]
   o=87 v=-0.067145:   3.63   2.46  11.07  -2.00   1.23 -13.42  [grid]  [f=64]
 + - saving #56 for use with twobest
 + - skip #26 for twobest: too close to set #56
 + - skip #72 for twobest: too close to set #56
 + - skip #15 for twobest: too close to set #56
 + - skip #30 for twobest: too close to set #56
 + - skip #31 for twobest: too close to set #56
 + - skip #48 for twobest: too close to set #56
 + - skip # 9 for twobest: too close to set #56
 + - skip #21 for twobest: too close to set #56
 + - skip #80 for twobest: too close to set #56
 + - skip #86 for twobest: too close to set #56
 + - skip #13 for twobest: too close to set #56
 + - skip #10 for twobest: too close to set #56
 + - skip # 3 for twobest: too close to set #56
 + - saving #45 for use with twobest
 + - saving # 0 for use with twobest
 + - skip #66 for twobest: too close to set # 0
 + - skip #23 for twobest: too close to set # 0
 + - skip # 4 for twobest: too close to set # 0
 + - skip #39 for twobest: too close to set # 0
 + - skip #42 for twobest: too close to set # 0
 + - skip # 5 for twobest: too close to set #66
 + - saving #29 for use with twobest
 + - skip # 2 for twobest: too close to set # 0
 + - skip #20 for twobest: too close to set #42
 + - skip #19 for twobest: too close to set # 2
 + - saving # 8 for use with twobest
 + - skip #14 for twobest: too close to set # 8
 + - skip #35 for twobest: too close to set #19
 + - saving #22 for use with twobest
 + - skip #36 for twobest: too close to set #29
 + - saving # 6 for use with twobest
 + - saving #17 for use with twobest
 + - skip #85 for twobest: too close to set #17
 + - saving # 1 for use with twobest
 + - saving #24 for use with twobest
 + - saving #82 for use with twobest
 + - skip #49 for twobest: too close to set #82
 + - saving #38 for use with twobest
 + - skip #44 for twobest: too close to set #38
 + - skip #71 for twobest: too close to set #44
 + - saving #75 for use with twobest
 + - saving #12 for use with twobest
 + - skip #16 for twobest: too close to set #44
 + - saving # 7 for use with twobest
 + - saving #81 for use with twobest
 + - saving #57 for use with twobest
 + - saving #34 for use with twobest
 + - saving #41 for use with twobest
 + - skip #87 for twobest: too close to set #41
 + - saving #77 for use with twobest
 + - saving #74 for use with twobest
 + - saving #25 for use with twobest
 + - saving #47 for use with twobest
 + - skip #70 for twobest: too close to set #47
 + - saving #52 for use with twobest
 + - saving #62 for use with twobest
 + - saving #58 for use with twobest
 + - saving #11 for use with twobest
 + - skip #78 for twobest: too close to set #58
 + - saving #79 for use with twobest
 + - skip #32 for twobest: too close to set #79
 + - saving #76 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.87
 + - Smoothing source; radius=1.87
 + !source mask fill: ubot=29.6454 usiz=95.2825
 + - retaining old weight image
 + - using 98429 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 84982 total points stored in 167 'TOHD(12.55)' bloks (0 duplicates)
 + - param set #1 has cost=-0.221679 [o=56 t=0]
 + -- Parameters = 1.9456 -13.6196 19.6883 1.2722 -18.4060 0.0189 1.0015 0.9965 0.9846 -0.0009 0.0019 -0.0011
 + - param set #2 has cost=-0.213494 [o=45 t=1]
 + -- Parameters = 2.0330 -13.5182 19.7321 1.6718 -17.7704 0.3168 0.9858 0.9961 0.9976 0.0139 0.0020 0.0106
 + - param set #3 has cost=-0.188247 [o=0 t=2]
 + -- Parameters = 0.8510 -13.0254 18.9322 1.6554 -18.3495 0.8434 1.0436 1.0177 0.9538 0.0151 -0.0167 0.0144
 + - param set #4 has cost=-0.218862 [o=29 t=3]
 + -- Parameters = 1.6038 -13.4337 19.5953 1.2382 -17.3810 0.4274 1.0069 0.9915 0.9812 0.0005 0.0008 0.0175
 + - param set #5 has cost=-0.092112 [o=8 t=4]
 + -- Parameters = 0.7615 -3.9926 18.6181 0.2528 -7.6487 1.4283 1.0556 0.9823 0.9918 0.0013 0.0013 0.0049
 + - param set #6 has cost=-0.083549 [o=22 t=5]
 + -- Parameters = 4.1075 -28.8049 16.2233 4.1864 -32.7263 -0.9708 0.9613 1.0354 0.9559 -0.0126 -0.0132 -0.0234
 + - param set #7 has cost=-0.078525 [o=6 t=6]
 + -- Parameters = -1.5320 -1.7540 16.7892 0.9570 -5.3490 7.2480 1.0496 0.9894 1.0173 0.0002 -0.0016 0.0017
 + - param set #8 has cost=-0.074606 [o=17 t=7]
 + -- Parameters = 4.2567 1.6966 16.7665 1.8136 -1.7981 -2.3436 1.0459 0.9738 0.9840 -0.0007 -0.0050 0.0050
 + - param set #9 has cost=-0.071066 [o=1 t=8]
 + -- Parameters = -1.9613 -1.2994 18.1079 -5.4388 -6.6820 -0.7565 1.0161 1.0151 1.0051 0.0032 0.0129 0.0018
 + - param set #10 has cost=-0.076939 [o=24 t=9]
 + -- Parameters = 0.5716 0.8516 16.3019 0.3867 -1.9105 2.6132 1.0507 0.9787 0.9981 -0.0029 0.0059 0.0049
 + - param set #11 has cost=-0.064664 [o=82 t=10]
 + -- Parameters = 5.5042 16.5309 6.0789 4.4580 15.4004 -5.0594 1.0115 1.0027 1.0190 0.0016 0.0048 -0.0016
 + - param set #12 has cost=-0.068570 [o=-1 t=-1]
 + -- Parameters = 1.6789 4.0391 15.1415 2.2627 0.8469 3.4049 1.0319 1.0094 0.9981 -0.0009 0.0034 0.0043
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0838 
 + --- dist(#3,#1) = 0.0667 
 + --- dist(#4,#1) = 0.0839 
 + --- dist(#5,#1) = 0.12 
 + --- dist(#6,#1) = 0.19 
 + --- dist(#7,#1) = 0.148 
 + --- dist(#8,#1) = 0.183 
 + --- dist(#9,#1) = 0.191 
 + --- dist(#10,#1) = 0.154 
 + --- dist(#11,#1) = 0.221 
 + --- dist(#12,#1) = 0.377 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.45
 + - Smoothing source; radius=1.45
 + !source mask fill: ubot=29.6454 usiz=95.2825
 + - retaining old weight image
 + - using 98429 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 84843 total points stored in 169 'TOHD(12.495)' bloks (0 duplicates)
 + - param set #1 has cost=-0.203850 [o=56 t=0]
 + -- Parameters = 1.8102 -13.5091 19.1580 1.0458 -18.2915 -0.1076 0.9993 0.9889 0.9682 -0.0067 0.0009 -0.0034
 + - param set #2 has cost=-0.203881 [o=29 t=3]
 + -- Parameters = 1.8712 -13.3912 19.1326 1.2161 -17.5548 0.0592 0.9976 0.9853 0.9666 -0.0006 0.0007 0.0161
 + - param set #3 has cost=-0.203194 [o=45 t=1]
 + -- Parameters = 1.9717 -13.5258 19.0363 1.4205 -17.7872 0.2071 0.9976 0.9825 0.9656 0.0069 0.0022 0.0098
 + - param set #4 has cost=-0.201522 [o=0 t=2]
 + -- Parameters = 1.7736 -13.5063 19.1380 1.6914 -17.8895 1.0105 0.9980 0.9852 0.9663 0.0096 -0.0177 0.0081
 + - param set #5 has cost=-0.080729 [o=8 t=4]
 + -- Parameters = 0.6658 -4.0471 18.5653 0.2701 -6.7731 1.4787 1.0597 0.9699 0.9825 0.0045 0.0017 0.0217
 + - param set #6 has cost=-0.088375 [o=22 t=5]
 + -- Parameters = 0.5183 -25.0928 16.6779 2.4841 -32.5676 2.3978 0.9355 1.0722 0.8920 -0.0101 -0.0216 -0.0278
 + - param set #7 has cost=-0.074345 [o=6 t=6]
 + -- Parameters = 0.2890 -2.8743 18.1460 0.5806 -6.0715 2.5616 1.0432 0.9830 1.0144 0.0081 -0.0008 0.0023
 + - param set #8 has cost=-0.067259 [o=24 t=9]
 + -- Parameters = -0.0835 0.4021 16.2621 0.4718 -1.5891 2.9682 1.0583 0.9682 0.9864 0.0049 0.0058 0.0073
 + - param set #9 has cost=-0.066848 [o=17 t=7]
 + -- Parameters = 2.7035 -0.1560 17.3485 0.2461 -2.5334 -2.0802 1.0629 0.9549 0.9859 0.0057 0.0024 0.0160
 + - param set #10 has cost=-0.078063 [o=1 t=8]
 + -- Parameters = 1.1855 -3.7452 18.1916 0.0557 -7.1213 0.4766 1.0513 0.9956 0.9889 0.0158 0.0236 0.0233
 + - param set #11 has cost=-0.064330 [o=-1 t=-1]
 + -- Parameters = -0.6441 1.6193 15.0143 0.7488 -0.8574 4.7327 1.0606 0.9969 0.9740 0.0017 0.0016 0.0211
 + - param set #12 has cost=-0.055242 [o=82 t=10]
 + -- Parameters = 5.2810 16.3969 6.2991 4.1198 15.5132 -5.1408 1.0071 1.0024 1.0214 -0.0062 0.0118 0.0039
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0879 
 + --- dist(#3,#1) = 0.0342 
 + --- dist(#4,#1) = 0.083 
 + --- dist(#5,#1) = 0.198 
 + --- dist(#6,#1) = 0.12 
 + --- dist(#7,#1) = 0.121 
 + --- dist(#8,#1) = 0.131 
 + --- dist(#9,#1) = 0.177 
 + --- dist(#10,#1) = 0.167 
 + --- dist(#11,#1) = 0.188 
 + --- dist(#12,#1) = 0.372 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.13
 + - Smoothing source; radius=1.13
 + !source mask fill: ubot=29.6454 usiz=95.2825
 + - retaining old weight image
 + - using 98429 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 84743 total points stored in 170 'TOHD(12.4616)' bloks (0 duplicates)
 + - param set #1 has cost=-0.191076 [o=29 t=3]
 + -- Parameters = 1.8454 -13.4532 19.0135 1.2428 -17.6543 0.1329 0.9950 0.9820 0.9627 -0.0007 0.0007 0.0138
 + - param set #2 has cost=-0.191235 [o=56 t=0]
 + -- Parameters = 1.8020 -13.5159 18.9762 1.0691 -18.0215 -0.0564 0.9947 0.9840 0.9650 -0.0065 0.0048 0.0043
 + - param set #3 has cost=-0.191122 [o=45 t=1]
 + -- Parameters = 1.9114 -13.4764 18.9365 1.4122 -17.7958 0.1356 0.9925 0.9811 0.9622 0.0031 0.0035 0.0091
 + - param set #4 has cost=-0.190688 [o=0 t=2]
 + -- Parameters = 1.8712 -13.5040 18.9248 1.4292 -17.9922 0.3550 0.9955 0.9820 0.9647 0.0026 -0.0034 0.0024
 + - param set #5 has cost=-0.079956 [o=22 t=5]
 + -- Parameters = 0.8026 -25.1387 16.7707 2.1110 -32.7896 2.0890 0.9493 1.0717 0.8897 -0.0156 -0.0333 -0.0247
 + - param set #6 has cost=-0.070202 [o=8 t=4]
 + -- Parameters = 0.6428 -4.0157 18.5779 0.2117 -6.6068 1.3217 1.0581 0.9653 0.9829 0.0042 -0.0005 0.0290
 + - param set #7 has cost=-0.071952 [o=1 t=8]
 + -- Parameters = 1.3233 -3.4858 18.1554 -0.2470 -5.1981 0.1746 1.0499 0.9637 0.9637 0.0061 0.0410 0.0791
 + - param set #8 has cost=-0.069642 [o=6 t=6]
 + -- Parameters = 0.9482 -4.1000 18.4268 0.4687 -6.7621 1.3820 1.0484 0.9652 0.9827 0.0097 0.0043 0.0220
 + - param set #9 has cost=-0.059598 [o=24 t=9]
 + -- Parameters = -0.1885 0.4623 16.4746 0.4853 -1.9353 3.4307 1.0572 0.9683 0.9829 0.0081 0.0060 0.0167
 + - param set #10 has cost=-0.070350 [o=17 t=7]
 + -- Parameters = 1.2311 -2.4721 16.8419 -0.2852 -4.4687 0.5105 1.0506 0.9766 0.9258 0.0102 0.0134 0.0642
 + - param set #11 has cost=-0.062897 [o=-1 t=-1]
 + -- Parameters = -0.0969 -0.1473 16.9508 -0.2567 -1.9427 3.1295 1.0633 0.9745 0.9688 0.0246 -0.0160 0.0517
 + - param set #12 has cost=-0.048256 [o=82 t=10]
 + -- Parameters = 5.4293 16.2572 6.0760 4.2358 15.9746 -5.1302 1.0115 0.9991 1.0102 -0.0075 0.0175 0.0057
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0429 
 + --- dist(#3,#1) = 0.0431 
 + --- dist(#4,#1) = 0.041 
 + --- dist(#5,#1) = 0.171 
 + --- dist(#6,#1) = 0.337 
 + --- dist(#7,#1) = 0.27 
 + --- dist(#8,#1) = 0.127 
 + --- dist(#9,#1) = 0.125 
 + --- dist(#10,#1) = 0.214 
 + --- dist(#11,#1) = 0.179 
 + --- dist(#12,#1) = 0.378 
 + - Total coarse refinement net CPU time = 0.0 s; 3960 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=29.6454 usiz=95.2825
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 85329 total points stored in 172 'TOHD(12.4506)' bloks (0 duplicates)
 + - cost(#1)=-0.188878 * [o=56 t=0]
 + -- Parameters = 1.8020 -13.5159 18.9762 1.0691 -18.0215 -0.0564 0.9947 0.9840 0.9650 -0.0065 0.0048 0.0043
 + - cost(#2)=-0.188606   [o=45 t=1]
 + -- Parameters = 1.9114 -13.4764 18.9365 1.4122 -17.7958 0.1356 0.9925 0.9811 0.9622 0.0031 0.0035 0.0091
 + - cost(#3)=-0.188667   [o=29 t=3]
 + -- Parameters = 1.8454 -13.4532 19.0135 1.2428 -17.6543 0.1329 0.9950 0.9820 0.9627 -0.0007 0.0007 0.0138
 + - cost(#4)=-0.188229   [o=0 t=2]
 + -- Parameters = 1.8712 -13.5040 18.9248 1.4292 -17.9922 0.3550 0.9955 0.9820 0.9647 0.0026 -0.0034 0.0024
 + - cost(#5)=-0.079166   [o=22 t=5]
 + -- Parameters = 0.8026 -25.1387 16.7707 2.1110 -32.7896 2.0890 0.9493 1.0717 0.8897 -0.0156 -0.0333 -0.0247
 + - cost(#6)=-0.071560   [o=1 t=8]
 + -- Parameters = 1.3233 -3.4858 18.1554 -0.2470 -5.1981 0.1746 1.0499 0.9637 0.9637 0.0061 0.0410 0.0791
 + - cost(#7)=-0.070057   [o=17 t=7]
 + -- Parameters = 1.2311 -2.4721 16.8419 -0.2852 -4.4687 0.5105 1.0506 0.9766 0.9258 0.0102 0.0134 0.0642
 + - cost(#8)=-0.069863   [o=8 t=4]
 + -- Parameters = 0.6428 -4.0157 18.5779 0.2117 -6.6068 1.3217 1.0581 0.9653 0.9829 0.0042 -0.0005 0.0290
 + - cost(#9)=-0.069296   [o=6 t=6]
 + -- Parameters = 0.9482 -4.1000 18.4268 0.4687 -6.7621 1.3820 1.0484 0.9652 0.9827 0.0097 0.0043 0.0220
 + - cost(#10)=-0.062303   [o=-1 t=-1]
 + -- Parameters = -0.0969 -0.1473 16.9508 -0.2567 -1.9427 3.1295 1.0633 0.9745 0.9688 0.0246 -0.0160 0.0517
 + - cost(#11)=-0.058933   [o=24 t=9]
 + -- Parameters = -0.1885 0.4623 16.4746 0.4853 -1.9353 3.4307 1.0572 0.9683 0.9829 0.0081 0.0060 0.0167
 + - cost(#12)=-0.047792   [o=82 t=10]
 + -- Parameters = 5.4293 16.2572 6.0760 4.2358 15.9746 -5.1302 1.0115 0.9991 1.0102 -0.0075 0.0175 0.0057
 + - cost(#13)=-0.030144   [o=-2 t=-2]
 + -- Parameters = 2.5566 -3.9394 11.7780 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.188934 * [o=56 t=0]
 + -- Parameters = 1.8146 -13.4786 19.0003 1.0456 -18.0494 -0.0764 0.9955 0.9849 0.9646 -0.0065 0.0053 0.0045
 + - cost(#2)=-0.188695   [o=45 t=1]
 + -- Parameters = 1.9330 -13.4739 18.9527 1.3532 -17.7947 0.0851 0.9930 0.9819 0.9637 0.0023 0.0045 0.0091
 + - cost(#3)=-0.188748   [o=29 t=3]
 + -- Parameters = 1.8691 -13.4390 19.0229 1.2194 -17.6644 0.1255 0.9966 0.9827 0.9642 -0.0015 0.0008 0.0128
 + - cost(#4)=-0.188490   [o=0 t=2]
 + -- Parameters = 1.8176 -13.5128 18.9600 1.2931 -17.9723 0.2757 0.9944 0.9835 0.9650 -0.0011 -0.0029 0.0031
 + - cost(#5)=-0.079564   [o=22 t=5]
 + -- Parameters = 0.7013 -25.1980 16.6189 1.7852 -32.6576 1.8129 0.9492 1.0687 0.8878 -0.0244 -0.0341 -0.0252
 + - cost(#6)=-0.072665   [o=1 t=8]
 + -- Parameters = 1.3475 -4.1744 18.8714 -0.0881 -5.6510 0.4803 1.0486 0.9507 0.9642 0.0098 0.0362 0.0922
 + - cost(#7)=-0.071366   [o=17 t=7]
 + -- Parameters = 1.0996 -2.7063 17.5380 -0.3413 -4.7257 0.7662 1.0515 0.9821 0.9355 0.0101 0.0241 0.0754
 + - cost(#8)=-0.070489   [o=8 t=4]
 + -- Parameters = 1.0029 -3.7918 18.5755 0.5660 -6.0515 1.2991 1.0556 0.9681 0.9806 0.0068 -0.0011 0.0429
 + - cost(#9)=-0.070526   [o=6 t=6]
 + -- Parameters = 1.1771 -3.9007 18.6373 0.7674 -5.9482 1.2011 1.0520 0.9661 0.9869 0.0091 0.0008 0.0408
 + - cost(#10)=-0.068067   [o=-1 t=-1]
 + -- Parameters = -0.2364 -2.5644 17.7036 0.4857 -3.4789 3.8209 1.0599 0.9661 0.9425 0.0582 -0.0307 0.0806
 + - cost(#11)=-0.068455   [o=24 t=9]
 + -- Parameters = 0.7423 -3.5220 18.5507 0.5076 -5.4237 1.8865 1.0563 0.9674 0.9995 0.0206 0.0115 0.0411
 + - cost(#12)=-0.047839   [o=82 t=10]
 + -- Parameters = 5.4255 16.2992 6.0119 4.1780 16.0341 -5.0679 1.0121 0.9997 1.0080 -0.0080 0.0164 0.0055
 + - cost(#13)=-0.067566   [o=-2 t=-2]
 + -- Parameters = 1.0685 -4.3441 18.8685 0.0573 -7.2394 0.9137 1.0643 0.9620 0.9973 -0.0058 0.0073 0.0146
 + - case #1 [o=56 t=0] is now the best
 + - Initial  cost = -0.188934
 + - Initial fine Parameters = 1.8146 -13.4786 19.0003 1.0456 -18.0494 -0.0764 0.9955 0.9849 0.9646 -0.0065 0.0053 0.0045
 + - Finalish cost = -0.189013 ; 492 funcs
 + - ini Finalish Parameters = 1.8428 -13.4815 19.0046 1.0908 -17.9639 -0.0790 0.9955 0.9840 0.9634 -0.0051 0.0061 0.0069
 + - Final    cost = -0.189013 ; 267 funcs
 + Final fine fit Parameters:
       x-shift=  1.8428   y-shift=-13.4814   z-shift= 19.0047  ...  enorm= 23.3735 mm
       z-angle=  1.0910   x-angle=-17.9641   y-angle= -0.0789  ...  total= 17.9979 deg
       x-scale=  0.9955   y-scale=  0.9840   z-scale=  0.9634  ...  vol3D=  0.9438=(0.9809)^3 [base bigger than source]
     y/x-shear= -0.0051 z/x-shear=  0.0061 z/y-shear=  0.0069
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 1.8428 -13.4814 19.0047 1.0910 -17.9641 -0.0789 0.9955 0.9840 0.9634 -0.0051 0.0061 0.0069
++ Unloading unneeded data
++ Output dataset ./__tt_T1w_acpc_dc_restore_brain_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./T1w_acpc_dc_restore_brain_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.6
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./T1w_acpc_dc_restore_brain_al_junk_e2a_only_mat.aff12.1D ./__tt_T1w_acpc_dc_restore_brain_obla2e_mat.1D -I > ./T1w_acpc_dc_restore_brain_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_min_outlier_ts_ns+orig -1Dmatrix_apply ./T1w_acpc_dc_restore_brain_al_junk_mat.aff12.1D -prefix ./T1w_acpc_dc_restore_brain_al_junk -input ./__tt_T1w_acpc_dc_restore_brain+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 15.813743 degrees from plumb.
++ Source dataset: ./__tt_T1w_acpc_dc_restore_brain+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ base center of mass = 46.199 40.755 44.172 (index)
 + source center of mass = 89.439 105.110 80.376 (index)
 + source-target CM = 2.557 32.005 35.002 (xyz)
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be TERRIBLY large!
[7m*+ WARNING:[0m   - at least one is more than 50% of search range
 +        -cmass x y z shifts =    2.557   32.005   35.002
 +  shift search range is +/- =   73.061   73.061   59.321
 +                                  3.5%    43.8%    59.0%
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000  center = 0.000000
++ Final parameter search ranges:
 +       x-shift =  -40.000 ..   40.000
 +       y-shift =  -40.000 ..   40.000
 +       z-shift =  -40.000 ..   40.000
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.9953 -0.0194 0.0013 -20.6044 0.0224 0.9831 0.0428 0.3512 0.0052 -0.0371 0.9625 -13.0766
++ Unloading unneeded data
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.9
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat T1w_acpc_dc_restore_brain+orig \
 -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip \
 3dAutomask -anat_has_skull no -giant_move -volreg off -tshift off" \
 ./T1w_acpc_dc_restore_brain_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_T1w_acpc_dc_restore_brain*

# Finished alignment successfully

foreach run ( 01 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.ME18.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 15.813743 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.ME18.r01.tshift+orig.BRIK is 15.813743 degrees from plumb.
++ Reading input dataset ./pb01.ME18.r01.tshift+orig.BRIK
++ Edging: x=5 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 102301 voxels
 + 10359 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 700 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.846  pitch=-1.352  yaw=-0.036  dS=-0.870  dL=-0.940  dP=-0.698
++ Mean: roll=-0.136  pitch=-0.128  yaw=+0.619  dS=-0.235  dL=-0.511  dP=-0.357
++ Max : roll=+0.532  pitch=+1.065  yaw=+1.339  dS=+0.480  dL=+0.231  dP=+0.134
++ Max displacements (mm) for each sub-brick:
 0.51(0.00) 0.10(0.49) 0.07(0.09) 0.10(0.05) 0.14(0.13) 0.13(0.08) 0.13(0.04) 0.11(0.12) 0.06(0.09) 0.13(0.15) 0.13(0.06) 0.11(0.18) 0.03(0.13) 0.12(0.10) 0.06(0.14) 0.00(0.06) 0.10(0.10) 0.11(0.09) 0.07(0.07) 0.18(0.15) 0.26(0.10) 0.14(0.15) 0.19(0.09) 0.22(0.12) 0.20(0.08) 0.17(0.15) 0.71(0.59) 1.23(0.72) 1.41(0.19) 1.38(0.13) 1.48(0.20) 1.33(0.23) 1.35(0.07) 1.59(0.27) 1.27(0.44) 1.18(0.13) 1.28(0.24) 1.23(0.16) 1.02(0.26) 1.12(0.17) 1.08(0.07) 1.01(0.17) 1.07(0.13) 1.05(0.10) 0.91(0.18) 1.08(0.24) 1.14(0.10) 0.93(0.25) 0.94(0.07) 1.03(0.12) 0.86(0.21) 0.80(0.09) 0.92(0.19) 0.78(0.15) 0.74(0.12) 0.86(0.19) 0.82(0.11) 0.75(0.11) 0.81(0.16) 0.83(0.09) 0.71(0.15) 0.71(0.11) 0.84(0.20) 0.74(0.14) 0.65(0.12) 0.74(0.10) 0.66(0.15) 0.64(0.04) 0.75(0.13) 0.67(0.14) 0.62(0.07) 0.69(0.11) 0.80(0.11) 0.99(0.28) 1.04(0.11) 1.01(0.09) 1.13(0.13) 1.09(0.06) 1.06(0.16) 0.96(0.11) 0.98(0.08) 1.71(0.76) 2.16(0.50) 1.94(0.31) 1.99(0.17) 2.05(0.31) 2.33(0.46) 2.34(0.23) 2.33(0.17) 2.27(0.12) 2.27(0.16) 2.07(0.33) 1.77(0.66) 2.37(0.64) 2.26(0.33) 2.37(0.30) 2.43(0.34) 2.80(0.46) 2.49(0.40) 2.08(0.42) 1.58(0.53) 1.22(0.43) 1.45(0.38) 1.67(0.29) 1.56(0.22) 1.46(0.17) 1.47(0.14) 1.57(0.16) 1.36(0.36) 1.24(0.18) 1.47(0.33) 1.40(0.14) 1.13(0.33) 1.35(0.29) 1.48(0.15) 1.32(0.17) 1.25(0.10) 1.30(0.08) 1.24(0.13) 1.19(0.24) 1.30(0.22) 1.46(0.34) 1.68(0.43) 1.97(0.36) 1.86(0.11) 1.95(0.19) 1.88(0.15) 1.72(0.28) 1.78(0.15) 2.03(0.30) 2.29(0.34) 2.23(0.17) 2.19(0.33) 2.13(0.13) 2.38(0.31) 2.63(0.28) 2.40(0.45) 2.29(0.17) 2.11(0.24) 2.40(0.33) 2.48(0.40) 2.35(0.27) 2.25(0.14) 2.24(0.08) 2.42(0.20) 2.32(0.29) 1.98(0.36) 1.71(0.41) 1.73(0.06) 1.62(0.14) 1.65(0.13) 1.62(0.12) 1.52(0.13) 1.50(0.09) 1.54(0.09) 1.42(0.13) 1.38(0.08) 1.41(0.09) 1.32(0.15) 1.28(0.08) 1.36(0.09) 1.33(0.06) 1.28(0.06) 1.31(0.05) 1.30(0.05) 1.17(0.13) 1.22(0.07) 1.27(0.07) 1.18(0.10) 1.16(0.05) 1.22(0.09) 1.15(0.11) 1.11(0.09) 1.22(0.12) 1.19(0.08) 1.12(0.07) 1.15(0.07) 1.13(0.05) 1.10(0.04) 1.10(0.04) 1.16(0.06) 1.12(0.09) 1.08(0.04) 1.15(0.08) 1.06(0.09) 1.01(0.06) 1.13(0.13) 1.09(0.07) 1.01(0.08) 1.15(0.14) 1.14(0.06) 1.02(0.12) 1.10(0.10) 1.13(0.06) 1.04(0.09) 0.89(0.24) 0.95(0.11) 0.78(0.19) 0.72(0.10) 0.87(0.16) 0.80(0.17) 0.69(0.20) 0.68(0.13) 0.69(0.11) 0.68(0.16) 0.72(0.08) 0.73(0.09) 0.71(0.17) 0.72(0.05) 0.75(0.12) 0.74(0.13) 0.74(0.16) 0.77(0.09) 0.76(0.07) 0.77(0.08) 0.78(0.07) 0.79(0.08) 0.83(0.08) 0.85(0.05) 0.82(0.09) 0.85(0.05) 0.87(0.05) 0.86(0.08) 0.85(0.05) 0.86(0.06) 0.86(0.06) 0.85(0.04) 0.85(0.02) 0.87(0.07) 0.87(0.05) 0.87(0.08) 0.88(0.07) 0.88(0.05) 0.86(0.10) 0.88(0.06) 0.91(0.06) 0.90(0.10) 0.90(0.06) 0.94(0.13) 0.93(0.08) 0.91(0.10) 0.91(0.10) 0.90(0.08) 0.90(0.24) 1.01(0.29) 0.99(0.13) 1.05(0.15) 1.08(0.14) 1.04(0.12) 1.09(0.07) 1.15(0.09) 1.05(0.13) 1.05(0.06) 1.15(0.13) 1.10(0.07) 1.10(0.06) 1.16(0.10) 1.09(0.08) 1.13(0.05) 1.15(0.06) 1.06(0.11) 1.15(0.10) 1.16(0.06) 1.13(0.04) 1.18(0.06) 1.13(0.07) 1.14(0.06) 1.18(0.07) 1.15(0.05) 1.18(0.05) 1.21(0.05) 1.18(0.04) 1.15(0.07) 1.23(0.09) 1.24(0.07) 1.17(0.09) 1.16(0.09) 1.27(0.13) 1.24(0.06) 1.17(0.10) 1.24(0.08) 1.27(0.07) 1.18(0.10) 1.18(0.06) 1.28(0.11) 1.26(0.07) 1.23(0.07) 1.31(0.09) 1.29(0.05) 1.23(0.09) 1.29(0.07) 1.37(0.13) 1.40(0.23) 1.95(0.78) 2.07(0.16) 1.91(0.20) 1.81(0.15) 1.75(0.19) 1.69(0.20) 1.52(0.21) 1.58(0.08) 1.63(0.10) 1.58(0.08) 1.53(0.10) 1.62(0.09) 1.63(0.08) 1.54(0.09) 1.50(0.11) 1.63(0.13) 1.61(0.07) 1.58(0.05) 1.67(0.10) 1.41(0.40) 1.14(0.27) 0.90(0.49) 0.89(0.41) 1.05(0.29) 1.03(0.14) 0.98(0.12) 0.98(0.34) 1.26(0.37) 1.18(0.12) 0.99(0.22) 1.07(0.20) 1.40(0.44) 1.46(0.12) 1.51(0.20) 1.65(0.24) 1.86(0.32) 1.89(0.06) 1.90(0.14) 2.20(0.68) 2.07(0.27) 2.11(0.25) 2.33(0.31) 2.07(0.35) 2.18(0.45) 2.53(0.38) 2.55(0.28) 1.93(1.23) 2.12(0.68) 2.15(0.18) 2.06(0.31) 1.99(0.12) 2.00(0.11) 1.94(0.15) 1.88(0.14) 1.94(0.13) 1.97(0.08) 1.94(0.08) 1.91(0.12) 1.92(0.16) 1.91(0.09) 1.89(0.06) 1.93(0.16) 1.95(0.14) 1.94(0.07) 1.97(0.11) 1.96(0.11) 1.92(0.09) 2.02(0.19) 2.19(0.31) 2.08(0.21) 2.35(0.44) 2.39(0.15) 2.36(0.09) 2.29(0.23) 2.28(0.11) 2.50(0.24) 2.57(0.10) 2.53(0.28) 2.60(0.39) 2.66(0.41) 2.64(0.35) 2.73(0.29) 2.87(0.39) 2.85(0.22) 2.89(0.45) 3.05(0.25) 3.02(0.24) 2.95(0.20) 3.16(0.23) 3.25(0.18) 3.24(0.38) 3.47(0.33) 3.37(0.50) 3.22(0.35) 3.09(0.38) 3.01(0.23) 2.90(0.18) 2.92(0.17) 2.92(0.09) 2.88(0.12) 2.90(0.06) 2.86(0.15) 2.82(0.14) 2.77(0.12) 2.75(0.04) 2.69(0.12) 2.67(0.10) 2.71(0.08) 2.69(0.10) 2.65(0.10) 2.65(0.08) 2.68(0.08) 2.63(0.10) 2.64(0.10) 2.63(0.07) 2.72(0.32) 2.72(0.20) 2.79(0.12) 2.79(0.35) 2.95(0.19) 2.98(0.11) 3.00(0.55) 3.12(0.19) 3.09(0.55) 2.97(0.17) 2.95(0.14) 3.08(0.32) 3.23(0.45) 3.08(0.40) 3.00(0.44) 3.17(0.61) 3.16(0.37) 3.17(0.31) 3.11(0.10) 3.16(0.37) 3.21(0.13) 3.19(0.41) 3.18(0.08) 3.18(0.32) 3.41(0.36) 3.31(0.24) 3.50(0.22) 3.37(0.45) 3.34(0.42) 3.29(0.13) 3.27(0.12) 3.21(0.21) 3.10(0.17) 3.03(0.20) 3.06(0.07) 3.04(0.14) 3.00(0.10) 3.01(0.07) 2.96(0.15) 2.90(0.09) 2.96(0.19) 3.00(0.14) 2.96(0.11) 3.01(0.21) 2.99(0.05) 2.88(0.16) 2.89(0.08) 2.95(0.09) 2.87(0.20) 2.64(0.59) 2.40(0.42) 2.64(0.61) 3.11(0.61) 3.01(0.14) 3.09(0.37) 3.30(0.23) 3.32(0.48) 3.24(0.15) 3.27(0.34) 3.45(0.21) 3.49(0.50) 3.47(0.12) 3.66(0.29) 3.95(0.58) 3.82(0.36) 3.58(0.70) 3.53(0.14) 3.87(0.65) 3.95(0.14) 3.72(0.59) 3.63(0.28) 3.69(0.49) 3.85(0.56) 3.62(0.72) 3.50(0.94) 3.40(1.04) 3.85(1.63) 3.49(1.11) 3.33(0.41) 3.21(0.86) 3.29(0.21) 3.21(0.21) 3.20(0.10) 3.28(0.17) 3.19(0.17) 3.14(0.09) 3.29(0.23) 3.22(0.15) 3.13(0.13) 3.21(0.15) 3.17(0.10) 3.13(0.13) 3.11(0.13) 3.13(0.12) 3.10(0.17) 3.10(0.05) 3.08(0.07) 3.08(0.04) 3.12(0.07) 3.12(0.05) 3.12(0.06) 3.14(0.06) 3.12(0.03) 3.10(0.04) 3.20(0.13) 3.29(0.08) 3.25(0.09) 3.19(0.06) 3.20(0.02) 3.28(0.13) 3.30(0.08) 3.23(0.11) 3.22(0.04) 3.29(0.15) 3.30(0.09) 3.24(0.09) 3.23(0.06) 3.30(0.09) 3.26(0.12) 3.24(0.07) 3.28(0.10) 3.27(0.10) 3.20(0.10) 3.25(0.10) 3.28(0.07) 3.23(0.10) 3.22(0.05) 3.28(0.09) 3.27(0.09) 3.20(0.11) 3.24(0.07) 3.28(0.10) 3.23(0.12) 3.20(0.11) 3.24(0.08) 3.21(0.07) 3.13(0.11) 3.15(0.09) 3.18(0.06) 3.14(0.11) 3.12(0.12) 3.16(0.11) 3.16(0.06) 3.11(0.12) 3.11(0.04) 3.15(0.10) 3.14(0.08) 3.11(0.05) 3.18(0.09) 3.18(0.06) 3.12(0.08) 3.11(0.04) 3.18(0.12) 3.18(0.12) 3.13(0.06) 3.11(0.04) 3.16(0.08) 3.24(0.09) 3.21(0.10) 3.16(0.06) 3.21(0.11) 3.21(0.10) 3.16(0.09) 3.17(0.06) 3.22(0.06) 3.18(0.13) 3.15(0.08) 3.23(0.15) 3.20(0.10) 3.16(0.09) 3.21(0.10) 3.22(0.10) 3.21(0.31) 3.35(0.50) 3.26(0.27) 3.15(0.13) 3.15(0.07) 3.20(0.17) 3.20(0.12) 3.19(0.08) 3.20(0.10) 3.17(0.10) 3.16(0.08) 3.19(0.16) 3.12(0.12) 3.04(0.19) 2.91(0.17) 2.90(0.09) 2.91(0.12) 2.89(0.09) 2.87(0.04) 2.85(0.07) 2.83(0.03) 2.83(0.04) 2.83(0.06) 2.83(0.08) 2.84(0.05) 2.84(0.03) 2.84(0.06) 2.82(0.05) 2.85(0.05) 2.89(0.06) 2.87(0.07) 2.85(0.06) 2.87(0.03) 2.90(0.09) 2.93(0.06) 2.87(0.11) 2.85(0.04) 2.89(0.05) 2.88(0.04) 2.84(0.08) 2.84(0.05) 2.86(0.09) 2.84(0.11) 2.79(0.08) 2.80(0.09) 2.83(0.06) 2.82(0.09) 2.82(0.07) 2.86(0.08) 2.84(0.12) 2.82(0.10) 2.84(0.17) 2.86(0.07) 2.81(0.11) 2.81(0.08) 2.83(0.13) 2.80(0.12) 2.79(0.09) 2.82(0.13) 2.79(0.12) 2.77(0.07) 2.81(0.11) 2.79(0.12) 2.78(0.07) 2.81(0.12) 2.81(0.09) 2.80(0.09) 2.81(0.10) 2.80(0.05) 2.79(0.08) 2.82(0.06) 2.83(0.10) 2.82(0.11) 2.82(0.05) 2.83(0.09) 2.85(0.04) 2.83(0.11) 2.85(0.07) 2.85(0.07) 2.82(0.09) 2.81(0.04) 2.83(0.05) 2.86(0.03) 2.83(0.07) 2.81(0.05) 2.84(0.06) 2.87(0.06) 2.85(0.06) 2.84(0.07) 2.86(0.04) 2.89(0.07) 2.84(0.09) 2.81(0.06) 2.84(0.09) 2.86(0.08) 2.90(0.10) 2.88(0.12) 2.87(0.06) 2.90(0.15) 2.89(0.13) 2.91(0.05) 2.78(0.48) 2.58(1.07) 2.59(0.07) 2.65(0.16) 2.59(0.13) 2.55(0.15) 2.61(0.12) 2.61(0.04) 2.54(0.13) 2.58(0.10) 2.64(0.10) 2.55(0.13) 2.52(0.07) 2.59(0.09) 2.57(0.03) 2.53(0.08) 2.59(0.09) 2.60(0.04) 2.54(0.11)
++ Max displacement in automask = 3.95 (mm) at sub-brick 476
++ Max delta displ  in automask = 1.63 (mm) at sub-brick 484
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.ME18.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE T1w_acpc_dc_restore_brain_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base T1w_acpc_dc_restore_brain+orig -input pb01.ME18.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./pb01.ME18.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.ME18.r01.tshift+orig.BRIK is 15.813743 degrees from plumb.
++ Source dataset: ./pb01.ME18.r01.tshift+orig.HEAD
++ Base dataset:   ./T1w_acpc_dc_restore_brain+orig.HEAD
++ Loading datasets into memory
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be TERRIBLY large!
[7m*+ WARNING:[0m   - at least one is more than 50% of search range
 +        -cmass x y z shifts =   -2.013  -33.521  -42.980
 +  shift search range is +/- =   58.101   69.657   58.101
 +                                  3.5%    48.1%    74.0%
++ master dataset for output = base
++ changing output grid spacing to 2.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 700 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699
++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 141.3
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dAllineate -base T1w_acpc_dc_restore_brain+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.813743 degrees from plumb.
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be TERRIBLY large!
[7m*+ WARNING:[0m   - at least one is more than 50% of search range
 +        -cmass x y z shifts =    0.561  -48.164  -48.615
 +  shift search range is +/- =   58.101   69.657   58.101
 +                                  1.0%    69.1%    83.7%
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 156.5
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D
3dcopy rm.epi.min.r01+orig mask_epi_extents
++ 3dcopy: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
foreach run ( 01 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.ME18.r01.volreg
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.ME18.r01.volreg+orig.BRIK
end
cat_matvec -ONELINE T1w_acpc_dc_restore_brain_al_junk_mat.aff12.1D -I
3dAllineate -base T1w_acpc_dc_restore_brain+orig -input vr_base_min_outlier+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 2 -prefix final_epi_vr_base_min_outlier
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 15.813743 degrees from plumb.
++ Source dataset: ./vr_base_min_outlier+orig.HEAD
++ Base dataset:   ./T1w_acpc_dc_restore_brain+orig.HEAD
++ Loading datasets into memory
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be TERRIBLY large!
[7m*+ WARNING:[0m   - at least one is more than 50% of search range
 +        -cmass x y z shifts =   -2.473  -34.090  -43.273
 +  shift search range is +/- =   58.101   69.657   58.101
 +                                  4.3%    48.9%    74.5%
++ master dataset for output = base
++ changing output grid spacing to 2.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./final_epi_vr_base_min_outlier+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dcopy T1w_acpc_dc_restore_brain+orig anat_final.ME18
++ 3dcopy: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
3dAllineate -base final_epi_vr_base_min_outlier+orig -allcostX -input anat_final.ME18+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.ME18+orig.HEAD
++ Base dataset:   ./final_epi_vr_base_min_outlier+orig.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'TOHD(10.354)'
 +        -cmass x y z shifts =    1.011   -0.232   -1.485
 +  shift search range is +/- =   65.484   74.472   66.126
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.235006
   sp   = 0.323146
   mi   = 3.27521
   crM  = 0.0680445
   nmi  = 0.875418
   je   = 3.27521
   hel  = -0.0897226
   crA  = 0.262741
   crU  = 0.294174
   lss  = 0.764994
   lpc  = 0.243859
   lpa  = 0.756141
   lpc+ = 0.456054
   lpa+ = 0.968336
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.0
++ ###########################################################
foreach run ( 01 )
3dmerge -1blur_fwhm 4.0 -doall -prefix pb03.ME18.r01.blur pb02.ME18.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2410.3 MB)

-- Wrote edited dataset: ./pb03.ME18.r01.blur+orig.BRIK

end
foreach run ( 01 )
3dAutomask -prefix rm.mask_r01 pb03.ME18.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.ME18.r01.blur+orig
++ Forming automask
 + Fixed clip level = 279.293274
 + Used gradual clip level = 241.103210 .. 325.625824
 + Number voxels above clip level = 165025
 + Clustering voxels ...
 + Largest cluster has 161254 voxels
 + Clustering voxels ...
 + Largest cluster has 161192 voxels
 + Filled   161 voxels in small holes; now have 161353 voxels
 + Filled   975 voxels in large holes; now have 162328 voxels
 + Clustering voxels ...
 + Largest cluster has 162328 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 740301 voxels
 + Mask now has 162328 voxels
++ 162328 voxels in the mask [out of 902629: 17.98%]
++ first  11 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first  15 y-planes are zero [from P]
++ last   11 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last   18 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD -union -prefix full_mask.ME18
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ have 1 volumes of input to combine
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 162328 survived, 740301 were zero
++ writing result full_mask.ME18...
3dresample -master full_mask.ME18+orig -input T1w_acpc_dc_restore_brain+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.ME18
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ have 1 volumes of input to combine
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 175027 survived, 727602 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.ME18...
3dmask_tool -input full_mask.ME18+orig mask_anat.ME18+orig -inter -prefix mask_epi_anat.ME18
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ have 2 volumes of input to combine
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 23167 clipped, 157094 survived, 722368 were zero
++ writing result mask_epi_anat.ME18...
3dABoverlap -no_automask full_mask.ME18+orig mask_anat.ME18+orig
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
#A=./full_mask.ME18+orig.BRIK  B=./mask_anat.ME18+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
162328       175027       180261       157094       5234         17933         3.2243     10.2458     1.0308     1.0446     1.0537
3ddot -dodice full_mask.ME18+orig mask_anat.ME18+orig
tee out.mask_ae_dice.txt
0.931328	
foreach run ( 01 )
3dTstat -prefix rm.mean_r01 pb03.ME18.r01.blur+orig
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+orig.BRIK
3dcalc -a pb03.ME18.r01.blur+orig -b rm.mean_r01+orig -c mask_epi_extents+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.ME18.r01.scale
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.ME18.r01.scale+orig.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 1 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 1 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile motion_demean.1D -set_nruns 1 -split_into_pad_runs mot_demean
1d_tool.py -infile motion_deriv.1D -set_nruns 1 -split_into_pad_runs mot_deriv
1d_tool.py -infile dfile_rall.1D -set_nruns 1 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_ME18
total number of censored TRs (simple form) = 43
1d_tool.py -infile motion_ME18_censor.1D -show_trs_uncensored space
set ktrs = 1dcat out.keep_trs_rall.txt
3dDeconvolve -input pb04.ME18.r01.scale+orig.HEAD -censor motion_ME18_censor.1D -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_deriv.r01.1D mot_deriv_r01 -polort 5 -float -num_stimts 2 -stim_times 1 stimuli/Motor_left.txt BLOCK(24,1) -stim_label 1 left -stim_times 2 stimuli/Motor_right.txt BLOCK(24,1) -stim_label 2 right -jobs 8 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -errts errts.ME18 -bucket stats.ME18
++ 3dDeconvolve extending num_stimts from 2 to 14 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ loading dataset pb04.ME18.r01.scale+orig.HEAD
++ STAT automask has 772128 voxels (out of 902629 = 85.5%)
++ Skipping check for initial transients
++ Input polort=5; Longest run=639.8 s; Recommended minimum polort=5 ++ OK ++
++ -stim_times using TR=0.914 s for stimulus timing conversion
++ -stim_times using TR=0.914 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ ** -stim_times NOTE ** guessing GLOBAL times if 1 time per line; LOCAL otherwise
++ ** GUESSED ** -stim_times 1 using LOCAL times
++ ** GUESSED ** -stim_times 2 using LOCAL times
++ Number of time points: 700 (before censor) ; 657 (after)
 + Number of parameters:  20 [18 baseline ; 2 signal]
++ total shared memory needed = 2,552,634,812 bytes (about 2.6 billion)
++ mmap() memory allocated: 2,552,634,812 bytes (about 2.6 billion)
++ Memory required for output bricks = 2,552,634,812 bytes (about 2.6 billion)
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D -input pb04.ME18.r01.scale+orig.HEAD \
 -fout -tout -Rbuck stats.ME18_REML -Rvar stats.ME18_REMLvar \
 -Rerrts errts.ME18_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (657x20):  5.27885  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (657x2):  1  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (657x18):  5.21369  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (657x12):  3.55015  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (657x6):  1.04258  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.87216e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.11 s
++ Voxels in dataset: 902629
++ Voxels per job:    112828
++ Job #1: processing voxels 112828 to 225655; elapsed time=8.540
++ Job #2: processing voxels 225656 to 338483; elapsed time=8.576
++ Job #3: processing voxels 338484 to 451311; elapsed time=8.613
++ Job #4: processing voxels 451312 to 564139; elapsed time=8.648
++ Job #5: processing voxels 564140 to 676967; elapsed time=8.683
++ Job #6: processing voxels 676968 to 789795; elapsed time=8.718
++ Job #7: processing voxels 789796 to 902628; elapsed time=8.753
++ Job #0: processing voxels 0 to 112827; elapsed time=8.763
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345++ Job #1 finished; elapsed time=28.546
6++ Job #7 finished; elapsed time=28.699
++ Job #2 finished; elapsed time=28.750
++ Job #6 finished; elapsed time=28.754
++ Job #5 finished; elapsed time=28.912
7++ Job #4 finished; elapsed time=29.064
8++ Job #3 finished; elapsed time=29.570
9.
++ Job #0 waiting for children to finish; elapsed time=29.874
++ Job #0 now finishing up; elapsed time=29.874
++ Smallest FDR q [0 Full_Fstat] = 1.94964e-14
++ Smallest FDR q [2 left#0_Tstat] = 4.70802e-14
++ Smallest FDR q [3 left_Fstat] = 4.70789e-14
++ Smallest FDR q [5 right#0_Tstat] = 6.02456e-14
++ Smallest FDR q [6 right_Fstat] = 6.02487e-14
++ Wrote bucket dataset into ./stats.ME18+orig.BRIK
 + created 5 FDR curves in bucket header
++ Wrote 3D+time dataset into ./errts.ME18+orig.BRIK
++ Program finished; elapsed time=61.380
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  medium:      -0.671      -0.549  ( 6 vs.  9)      left#0  vs.  mot_demean_r01[1]#0
  medium:       0.423       0.380  ( 7 vs.  9)     right#0  vs.  mot_demean_r01[1]#0
  medium:       0.409       0.325  ( 5 vs.  6)  Run#1Pol#5  vs.  left#0

1d_tool.py -show_df_info -infile X.xmat.1D
tee out.df_info.txt

initial DF                   : 700 : 100.0%

DF used for regs of interest :   2 :   0.3%
DF used for censoring        :  43 :   6.1%
DF used for polort           :   6 :   0.9%
DF used for motion           :  12 :   1.7%
total DF used                :  63 :   9.0%

final DF                     : 637 :  91.0%

3dTcat -prefix all_runs.ME18 pb04.ME18.r01.scale+orig.HEAD
++ 3dTcat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ elapsed time = 4.8 s
3dTstat -mean -prefix rm.signal.all all_runs.ME18+orig[1dcat out.keep_trs_rall.txt]
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.ME18+orig[1dcat out.keep_trs_rall.txt]
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -expr a/b -prefix TSNR.ME18
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.ME18+orig.BRIK
compute_ROI_stats.tcsh -out_dir tsnr_stats_regress -stats_file tsnr_stats_regress/stats_auto_brain.txt -dset_ROI mask_epi_anat.ME18+orig -dset_data TSNR.ME18+orig -rset_label brain -rval_list 1
++ writing stats text to tsnr_stats_regress/stats_auto_brain.txt

dset: brain (mask_epi_anat.ME18), Nroi: 1
-----------------------------------------

   ROI   Nvox  Nzer  Dvox   Tmin  T25%  Tmed  T75%  Tmax     X      Y      Z    ROI_name
   ---   ----  ----  ----   ----  ----  ----  ----  ----   -----  -----  -----  --------
     1 157094     0  24.2      9    69    95   120   257     2.5   33.5   20.5  NONE

3dTnorm -norm2 -prefix rm.errts.unit errts.ME18+orig
++ 3dTnorm: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask mask_epi_anat.ME18+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
+++ 157094 voxels survive the mask
3dTstat -sos -prefix - mean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.0609905
3dmaskave -quiet -mask mask_epi_anat.ME18+orig errts.ME18+orig
++ 3dmaskave: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
+++ 157094 voxels survive the mask
3dTcorr1D -prefix corr_brain errts.ME18+orig mean.errts.1D
++ 3dTcorr1D: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
 + reading dataset file errts.ME18+orig
 + reading 1D file mean.errts.1D
 + loading dataset ./errts.ME18+orig.BRIK into memory
++ Start correlations: 902629 voxels X 1 time series(700); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 130499 voxels skipped because were constant in time
++ Wrote dataset: ./corr_brain+orig.BRIK
3dcalc -a all_runs.ME18+orig -b errts.ME18+orig -expr a-b -prefix fitts.ME18
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./fitts.ME18+orig.BRIK
1dcat X.nocensor.xmat.1D[6]
1dcat X.nocensor.xmat.1D[7]
1d_tool.py -infile X.nocensor.xmat.1D -write_xstim X.stim.xmat.1D
3dTstat -sum -prefix sum_ideal.1D X.stim.xmat.1D
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
touch blur_est.ME18.1D
mkdir files_ACF
touch blur.epits.1D
foreach run ( 01 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..24,28..79,82..90,94..291,294..329,332..337,341..412,415..421,424..455,461..469,478,488..680,683..699 ==  ) continue
3dFWHMx -detrend -mask full_mask.ME18+orig -ACF files_ACF/out.3dFWHMx.ACF.epits.r01.1D all_runs.ME18+orig[0..24,28..79,82..90,94..291,294..329,332..337,341..412,415..421,424..455,461..469,478,488..680,683..699]
++ 3dFWHMx: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 162328
++ detrending start: 45 baseline funcs, 657 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 14.55 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r01.1D
++ 1dplot: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r01.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset has 1 sub-brick ==> -tdiff is turned off
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits FWHM blurs: 0 0 0 0
average epits FWHM blurs: 0 0 0 0
echo 0 0 0 0   # epits FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset has 1 sub-brick ==> -tdiff is turned off
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits ACF blurs: 0.911413 2.81971 13.3331 6.89567
average epits ACF blurs: 0.911413 2.81971 13.3331 6.89567
echo 0.911413 2.81971 13.3331 6.89567   # epits ACF blur estimates
touch blur.errts.1D
foreach run ( 01 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..24,28..79,82..90,94..291,294..329,332..337,341..412,415..421,424..455,461..469,478,488..680,683..699 ==  ) continue
3dFWHMx -detrend -mask full_mask.ME18+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.ME18+orig[0..24,28..79,82..90,94..291,294..329,332..337,341..412,415..421,424..455,461..469,478,488..680,683..699]
++ 3dFWHMx: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 162328
++ detrending start: 45 baseline funcs, 657 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 14.45 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset has 1 sub-brick ==> -tdiff is turned off
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 0 0 0 0
average errts FWHM blurs: 0 0 0 0
echo 0 0 0 0   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset has 1 sub-brick ==> -tdiff is turned off
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.922765 2.81257 13.075 6.84131
average errts ACF blurs: 0.922765 2.81257 13.075 6.84131
echo 0.922765 2.81257 13.075 6.84131   # errts ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.ME18.1D
3dClustSim -both -mask full_mask.ME18+orig -acf 0.922765 2.81257 13.075 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 162328 voxels in mask (17.98% of total)
++ Kernel function radius = 17.67 mm
++ ACF(0.92,2.81,13.07) => FWHM=6.84 => 91x109x91 pads to 120x128x120
 + Kernel image dimensions 59 x 63 x 47
++ Startup clock time = 0.2 s
++ Using 15 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.01234567!
++ Clock time now = 562.8 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.ME18+orig
++ 3drefit: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.ME18+orig
 + atrcopy
++ applying attributes
++ 3drefit processed 1 datasets
@radial_correlate -nfirst 0 -polort 5 -do_clean yes -rdir radcor.pb05.regress -mask full_mask.ME18+orig all_runs.ME18+orig.HEAD errts.ME18+orig.HEAD
++ 3dTcat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ elapsed time = 4.8 s
++ 3dTcat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ elapsed time = 4.9 s
++ 3dcopy: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
-- detrend -polort 5, new eset = det.d01
++ 3dTproject: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 700 retained time points MINUS 6 regressors ==> 694 D.O.F. left
++ no -mask option ==> processing all 902629 voxels in dataset
++ THD_dset_to_vectim: allocated 2527361200 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 130499 vectors are constant

-- running correlation on dataset all_runs.ME18+orig.HEAD ...

++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.emasked.d01+orig.BRIK
++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2410.3 MB)

-- Wrote edited dataset: ./sphere.mean.20.d01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Wrote dataset: ./radcor.20.d01.all_runs.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
---- done

-- detrend -polort 5, new eset = det.d02
++ 3dTproject: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 700 retained time points MINUS 6 regressors ==> 694 D.O.F. left
++ no -mask option ==> processing all 902629 voxels in dataset
++ THD_dset_to_vectim: allocated 2527361200 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 130499 vectors are constant
[7m*+ WARNING:[0m 3dTproject input data :: 43 volumes are constant

-- running correlation on dataset errts.ME18+orig.HEAD ...

++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.emasked.d02+orig.BRIK
++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2410.3 MB)
............................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
-- Wrote edited dataset: ./sphere.mean.20.d02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Wrote dataset: ./radcor.20.d02.errts.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
---- done

++ have do_clean, cleaning up...

gen_epi_review.py -script @epi_review.ME18 -dsets pb00.ME18.r01.tcat+orig.HEAD
cat
cat out.ap_uvars.txt
afni_python_wrapper.py -eval data_file_to_json()
gen_ss_review_scripts.py -exit0 -init_uvars_json out.ap_uvars.json -write_uvars_json out.ss_review_uvars.json
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -f rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mean_r01+orig.BRIK rm.mean_r01+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.resam.anat+orig.BRIK rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD
if ( -e @ss_review_basic ) then
./@ss_review_basic
tee out.ss_review.ME18.txt

subject ID                : ME18
AFNI version              : AFNI_24.1.02
AFNI package              : linux_ubuntu_16_64
TR                        : 0.914
TRs removed (per run)     : 0
multiband level           : 1
slice timing pattern      : simult
num stim classes provided : 2
final anatomy dset        : anat_final.ME18+orig.HEAD
final stats dset          : stats.ME18+orig.HEAD
orig voxel counts         : 96	96	78
orig voxel resolution     : 2.395833	2.395833	2.400000
orig volume center        : -0.000031	-27.274330	-40.238594
final voxel resolution    : 2.000000	2.000000	2.000000

motion limit              : 0.3
num TRs above mot limit   : 26
average motion (per TR)   : 0.101533
average censored motion   : 0.0866364
max motion displacement   : 2.92979
max censored displacement : 2.71099
average outlier frac (TR) : 0.00156476

num runs found            : 1
num TRs per run           : 700
num TRs per run (applied) : 657
num TRs per run (censored): 43
fraction censored per run : 0.0614286
TRs total (uncensored)    : 700
TRs total                 : 657
degrees of freedom used   : 20
degrees of freedom left   : 637
final DF fraction         : 0.91

TRs censored              : 43
censor fraction           : 0.061429
num regs of interest      : 2
num TRs per stim (orig)   : 300 298
num TRs censored per stim : 37 4
fraction TRs censored     : 0.123 0.013
ave mot per sresp (orig)  : 0.149178 0.063297
ave mot per sresp (cens)  : 0.124619 0.058938

TSNR average              : 96.3088
global correlation (GCOR) : 0.0609905
anat/EPI mask Dice coef   : 0.931328
maximum F-stat (masked)   : 684.295
blur estimates (ACF)      : 0.922765 2.81257 13.075
blur estimates (FWHM)     : 0 0 0

apqc_make_tcsh.py -review_style pythonic -subj_dir . -uvar_json out.ss_review_uvars.json
++ Done making (executable) IC errts script: 
      run_instacorr_errts.tcsh
++ Done making (executable) GV errts script: 
      run_graphview_errts.tcsh
++ Done making (executable) IC pbrun script: 
      run_instacorr_pbrun.tcsh
++ Done making (executable) GV pbrun script: 
      run_graphview_pbrun.tcsh
++ APQC create: qc_00_vorig_EPI
++ APQC create: qc_01_vorig_anat
++ APQC create: qc_02_vorig_olap
++ APQC create: qc_03_ve2a_epi2anat
++ APQC create: qc_04_ve2a_mask2final
++ Found 3 stats items to use for vstat QC block
++ APQC create: qc_05_vstat_Full_Fstat
++ APQC create: qc_06_vstat_left_0_Coef
++ APQC create: qc_07_vstat_right_0_Coef
++ APQC create: qc_08_mot_enormoutlr
++ APQC create: qc_09_mot_VR6
++ APQC create: qc_10_mot_grayplot
++ APQC create: qc_11_regr_ideal
++ APQC create: qc_12_regr_stims
++ APQC create: qc_13_regr_df
++ APQC create: qc_14_regr_corr_errts
++ APQC create: qc_15_regr_tsnr_fin
++ APQC create: qc_16_radcor_rc_regress
                run: d02/1
++ APQC create: qc_17_warns_xmat
++ APQC create: qc_18_warns_cen_total
++ APQC create: qc_19_warns_cen_stim
++ APQC create: qc_20_warns_press
++ APQC create: qc_21_warns_sat_4095
++ APQC create: qc_22_warns_vlines
++ APQC create: qc_23_qsumm_ssrev
++ APQC create: copy jsons to info dir
++ APQC create: copy ss_review_basic file
++ APQC create: display ss_review_basic info

subject ID                : ME18
AFNI version              : AFNI_24.1.02
AFNI package              : linux_ubuntu_16_64
TR                        : 0.914
TRs removed (per run)     : 0
multiband level           : 1
slice timing pattern      : simult
num stim classes provided : 2
final anatomy dset        : anat_final.ME18+orig.HEAD
final stats dset          : stats.ME18+orig.HEAD
orig voxel counts         : 96	96	78
orig voxel resolution     : 2.395833	2.395833	2.400000
orig volume center        : -0.000031	-27.274330	-40.238594
final voxel resolution    : 2.000000	2.000000	2.000000

motion limit              : 0.3
num TRs above mot limit   : 26
average motion (per TR)   : 0.101533
average censored motion   : 0.0866364
max motion displacement   : 2.92979
max censored displacement : 2.71099
average outlier frac (TR) : 0.00156476

num runs found            : 1
num TRs per run           : 700
num TRs per run (applied) : 657
num TRs per run (censored): 43
fraction censored per run : 0.0614286
TRs total (uncensored)    : 700
TRs total                 : 657
degrees of freedom used   : 20
degrees of freedom left   : 637
final DF fraction         : 0.91

TRs censored              : 43
censor fraction           : 0.061429
num regs of interest      : 2
num TRs per stim (orig)   : 300 298
num TRs censored per stim : 37 4
fraction TRs censored     : 0.123 0.013
ave mot per sresp (orig)  : 0.149178 0.063297
ave mot per sresp (cens)  : 0.124619 0.058938

TSNR average              : 96.3088
global correlation (GCOR) : 0.0609905
anat/EPI mask Dice coef   : 0.931328
maximum F-stat (masked)   : 684.295
blur estimates (ACF)      : 0.922765 2.81257 13.075
blur estimates (FWHM)     : 0 0 0


# ++++++++++++++ Check output of @ss_review_basic ++++++++++++++ #
------------------------------------------------------------------
------------------------------------------------------------------

++ Done setting up QC dir: QC_ME18
   To create the APQC HTML, run either this (from any location):      
     
       apqc_make_html.py -qc_dir /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/QC_ME18

   ... or this (from the afni_proc.py results directory):

       apqc_make_html.py -qc_dir QC_ME18


apqc_make_html.py -qc_dir QC_ME18

++ Done! Wrote QC HTML.
   To view, run either this (without server):

       afni_open -b /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/QC_ME18/index.html

   ... or this (with server):

       open_apqc.py -infiles /home/cputest/Stroke/Data/ME18/func_task/afni_result/ME18.results/QC_ME18/index.html


echo \nconsider running: \n

consider running: 

echo    afni_open -b ME18.results/QC_ME18/index.html
   afni_open -b ME18.results/QC_ME18/index.html
echo 

endif
cd ..
echo execution finished: `date`
date
execution finished: 2024å¹´ 04æœˆ 18æ—¥ æ˜ŸæœŸå›› 14:08:14 CST
