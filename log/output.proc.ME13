echo auto-generated by afni_proc.py, Tue Apr 23 23:16:21 2024
auto-generated by afni_proc.py, Tue Apr 23 23:16:21 2024
echo (version 7.74, April 8, 2024)
(version 7.74, April 8, 2024)
echo execution started: `date`
date
execution started: 2024å¹´ 04æœˆ 23æ—¥ æ˜ŸæœŸäºŒ 23:16:21 CST
afni -ver
Precompiled binary linux_ubuntu_16_64: Apr  8 2024 (Version AFNI_24.1.02 'Publius Septimius Geta')
afni_history -check_date 7 Mar 2024
-- is current: afni_history as new as: 07 Mar 2024
               most recent entry is:   08 Apr 2024
if ( 0 ) then
if ( 0 > 0 ) then
set subj = ME13
endif
set output_dir = ME13.results
if ( -d ME13.results ) then
set runs = ( `count -digits 2 1 1` )
count -digits 2 1 1
mkdir -p ME13.results
mkdir ME13.results/stimuli
cp /home/cputest/Stroke/Data/ME13/func_task/unprocessed/Motor_left.txt /home/cputest/Stroke/Data/ME13/func_task/unprocessed/Motor_right.txt ME13.results/stimuli
3dcopy /home/cputest/Stroke/Data/ME13/func_task/unprocessed/T1w_acpc_dc_restore_brain.nii.gz ME13.results/T1w_acpc_dc_restore_brain
++ 3dcopy: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
3dTcat -prefix ME13.results/pb00.ME13.r01.tcat /home/cputest/Stroke/Data/ME13/func_task/unprocessed/bold_task_hand_motor.nii.gz[0..$]
++ 3dTcat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
** AFNI converts NIFTI_datatype=512 (UINT16) in file /home/cputest/Stroke/Data/ME13/func_task/unprocessed/bold_task_hand_motor.nii.gz to FLOAT32
     Warnings of this type will be muted for this session.
     Set AFNI_NIFTI_TYPE_WARN to YES to see them all, NO to see none.
++ elapsed time = 10.1 s
set tr_counts = ( 700 )
cd ME13.results
find_variance_lines.tcsh -polort 5 -nerode 2 -rdir vlines.pb00.tcat pb00.ME13.r01.tcat+orig.HEAD
tee out.vlines.pb00.tcat.txt
++ have nslices : 78
++ copying pb00.ME13.r01.tcat+orig.HEAD[0..$] to ts.0.orig.r01.nii.gz
++ 3dTcat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ elapsed time = 158.7 s
++ creating automask from first dset
++ 3dAutomask: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/ts.0.orig.r01.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/ts.0.orig.r01.nii.gz is 9.192507 degrees from plumb.
++ Loading dataset ts.0.orig.r01.nii.gz
++ Forming automask
 + Fixed clip level = 293.086273
 + Used gradual clip level = 231.466919 .. 333.386902
 + Number voxels above clip level = 118258
 + Clustering voxels ...
 + Largest cluster has 108887 voxels
 + Clustering voxels ...
 + Largest cluster has 108429 voxels
 + Filled  1032 voxels in small holes; now have 109461 voxels
 + Filled  1101 voxels in large holes; now have 110562 voxels
 + Clustering voxels ...
 + Largest cluster has 110556 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 608292 voxels
 + Mask now has 110556 voxels
++ 110556 voxels in the mask [out of 718848: 15.38%]
++ first  18 x-planes are zero [from R]
++ last   20 x-planes are zero [from L]
++ first   9 y-planes are zero [from P]
++ last   13 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    6 z-planes are zero [from S]
++ Output dataset ./mask.nii.gz
++ CPU time = 0.000000 sec

-- will apply mask mask.nii.gz
++ eroding mask.nii.gz by 2 voxels
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/tmp.mask.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/tmp.mask.nii.gz is 9.192507 degrees from plumb.
++ have 1 volumes of input to combine
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 79792 survived, 639056 were zero
++ writing result mask.nii.gz...
++ Output dataset ./mask.nii.gz

++ requiring 5 voxels in mask columns
++ 3dLocalstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/mask.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/mask.nii.gz is 9.192507 degrees from plumb.
++ Number of voxels in mask = 79792
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/mask.nii.gz is 9.192507 degrees from plumb.
++ Neighborhood comprises 157 voxels
++ Start sub-brick [0]
++ Output dataset ./tmp.mask.col.count.nii.gz
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./mask.nii.gz

-- detrend -polort 5, new eset = ts.1.det.r01.nii.gz
++ 3dTproject: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/ts.0.orig.r01.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/ts.0.orig.r01.nii.gz is 9.192507 degrees from plumb.
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 700 retained time points MINUS 6 regressors ==> 694 D.O.F. left
++ no -mask option ==> processing all 718848 voxels in dataset
++ THD_dset_to_vectim: allocated 2012774400 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 162 vectors are constant

++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/ts.1.det.r01.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/ts.1.det.r01.nii.gz is 9.192507 degrees from plumb.
++ Output dataset ./tmp.stdev.nii.gz
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./var.0.orig.r01.nii.gz
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/mask.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/mask.nii.gz is 9.192507 degrees from plumb.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/var.0.orig.r01.nii.gz is 9.192507 degrees from plumb.
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./var.1.scale.r01.nii.gz
++ 3dLocalstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/mask.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/mask.nii.gz is 9.192507 degrees from plumb.
++ Number of voxels in mask = 79648
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/var.1.scale.r01.nii.gz is 9.192507 degrees from plumb.
++ Neighborhood comprises 157 voxels
++ Start sub-brick [0]
++ Output dataset ./proj.r01.nii.gz
++ Neighborhood definition (NN=3) accepted
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/proj.r01.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/proj.r01.nii.gz is 9.192507 degrees from plumb.
++ User input stat threshold: -1
++ User input stat threshold: 0.95
++ Data volume:      [0] 'MEAN'
++ Threshold volume: [0] 'MEAN'
++ How many sides to this stat? 0
++ Looks like clustering is *not* being performed on a stat value; won't worry about sidedness, then.
++ Opt code: 2sided,-1,0.95,NN3
[7m*+ WARNING:[0m No mask being used? That *could* be OK, but thought I'd let you know...
++ Threshold volume [0] does *not* appear to be a stat!
[7m*+ WARNING:[0m No clusters found!
#** NO CLUSTERS FOUND ***

-- evaluating intersection...
++ 3dMean: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ WARNING: Have only 1 dset.
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/proj.r01.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/proj.r01.nii.gz is 9.192507 degrees from plumb.
++ Neighborhood definition (NN=3) accepted
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/proj.min.nii.gz,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:/home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vlines.pb00.tcat/proj.min.nii.gz is 9.192507 degrees from plumb.
++ User input stat threshold: -1
++ User input stat threshold: 0.95
++ Data volume:      [0] 'MEAN'
++ Threshold volume: [0] 'MEAN'
++ How many sides to this stat? 0
++ Looks like clustering is *not* being performed on a stat value; won't worry about sidedness, then.
++ Opt code: 2sided,-1,0.95,NN3
[7m*+ WARNING:[0m No mask being used? That *could* be OK, but thought I'd let you know...
++ Threshold volume [0] does *not* appear to be a stat!
[7m*+ WARNING:[0m No clusters found!
#** NO CLUSTERS FOUND ***
++ Check about making images
++ have do_clean, removing time series...


== found questionable regions across inputs: 0
   found questionable intersected regions  : 0

=============== bad_coords.inter.txt ===============

=============== bad_coords.r01.txt ===============

3drefit -Tslices 0 0.48438 0.07812 0.54688 0.14062 0.625 0.20312 0.6875 0.28125 0.75 0.34375 0.82812 0.40625 0 0.48438 0.07812 0.54688 0.14062 0.625 0.20312 0.6875 0.28125 0.75 0.34375 0.82812 0.40625 0 0.48438 0.07812 0.54688 0.14062 0.625 0.20312 0.6875 0.28125 0.75 0.34375 0.82812 0.40625 0 0.48438 0.07812 0.54688 0.14062 0.625 0.20312 0.6875 0.28125 0.75 0.34375 0.82812 0.40625 0 0.48438 0.07812 0.54688 0.14062 0.625 0.20312 0.6875 0.28125 0.75 0.34375 0.82812 0.40625 0 0.48438 0.07812 0.54688 0.14062 0.625 0.20312 0.6875 0.28125 0.75 0.34375 0.82812 0.40625 pb00.ME13.r01.tcat+orig
++ 3drefit: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset pb00.ME13.r01.tcat+orig
 + setting slice time offsets
++ 3drefit processed 1 datasets
touch out.pre_ss_warn.txt
foreach run ( 01 )
3dToutcount -automask -fraction -polort 5 -legendre pb00.ME13.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./pb00.ME13.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.ME13.r01.tcat+orig.BRIK is 9.192507 degrees from plumb.
++ 110556 voxels passed mask/clip
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D
foreach run ( 01 )
3dTto1D -method 4095_warn -input pb00.ME13.r01.tcat+orig
tee -a out.4095_all.txt
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./pb00.ME13.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.ME13.r01.tcat+orig.BRIK is 9.192507 degrees from plumb.
++ computing 4095_warn, nvox = 718848, nmask = 718848, nt = 700
++ global max = 1452.000000, global 4095 count = 0
++ max of 1452 is okay, clearing results...
end
awk /warning/ {print} out.4095_all.txt
tee out.4095_warn.txt
set minindex = `3dTstat -argmin -prefix - outcount_rall.1D\'`
3dTstat -argmin -prefix - outcount_rall.1D'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
set ovals = ( `1d_tool.py -set_run_lengths $tr_counts                       
                          -index_to_run_tr $minindex` )
1d_tool.py -set_run_lengths 700 -index_to_run_tr 376
set minoutrun = 01
set minouttr = 376
echo min outlier: run 01, TR 376
tee out.min_outlier.txt
min outlier: run 01, TR 376
foreach run ( 01 )
3dTshift -tzero 0 -quintic -prefix pb01.ME13.r01.tshift pb00.ME13.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./pb00.ME13.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.ME13.r01.tcat+orig.BRIK is 9.192507 degrees from plumb.
++ updating time offset to 0
end
3dbucket -prefix vr_base_min_outlier pb01.ME13.r01.tshift+orig[376]
++ 3dbucket: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
align_epi_anat.py -anat2epi -anat T1w_acpc_dc_restore_brain+orig -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip 3dAutomask -anat_has_skull no -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.63
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base_min_outlier+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./T1w_acpc_dc_restore_brain+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_T1w_acpc_dc_restore_brain*
#Script is running (command trimmed):
  3dcopy ./T1w_acpc_dc_restore_brain+orig ./__tt_T1w_acpc_dc_restore_brain+orig
++ 3dcopy: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
#Script is running (command trimmed):
  3dinfo ./__tt_T1w_acpc_dc_restore_brain+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/__tt_T1w_acpc_dc_restore_brain+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base_min_outlier+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/vr_base_min_outlier+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_T1w_acpc_dc_restore_brain+orig
#++ Spacing for anat to oblique epi alignment is 0.800000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base_min_outlier+orig -prefix ./__tt_T1w_acpc_dc_restore_brain_ob -newgrid 0.800000 ./__tt_T1w_acpc_dc_restore_brain+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_T1w_acpc_dc_restore_brain_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./__tt_T1w_acpc_dc_restore_brain_ob+orig.BRIK
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_min_outlier_ts ./vr_base_min_outlier+orig'[0]'
++ 3dbucket: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_min_outlier_ts_ns ./__tt_vr_base_min_outlier_ts+orig
++ 3dAutomask: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./__tt_vr_base_min_outlier_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts+orig.BRIK is 9.192507 degrees from plumb.
++ Loading dataset ./__tt_vr_base_min_outlier_ts+orig
++ Forming automask
 + Fixed clip level = 294.529633
 + Used gradual clip level = 230.771652 .. 334.239899
 + Number voxels above clip level = 117999
 + Clustering voxels ...
 + Largest cluster has 108370 voxels
 + Clustering voxels ...
 + Largest cluster has 107703 voxels
 + Filled  1433 voxels in small holes; now have 109136 voxels
 + Filled  1177 voxels in large holes; now have 110313 voxels
 + Clustering voxels ...
 + Largest cluster has 110311 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 608537 voxels
 + Mask now has 110311 voxels
++ 110311 voxels in the mask [out of 718848: 15.35%]
++ first  18 x-planes are zero [from R]
++ last   20 x-planes are zero [from L]
++ first   9 y-planes are zero [from P]
++ last   13 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    6 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_min_outlier_ts_ns+orig
#++ Applying threshold of 789.839172 on /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/__tt_vr_base_min_outlier_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_min_outlier_ts_ns_wt -a ./__tt_vr_base_min_outlier_ts_ns+orig -expr 'min(1,(a/789.839172))'
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_T1w_acpc_dc_restore_brain_ob_al_junk_wtal -weight ./__tt_vr_base_min_outlier_ts_ns_wt+orig -source ./__tt_T1w_acpc_dc_restore_brain_ob+orig -prefix ./__tt_T1w_acpc_dc_restore_brain_ob_temp_al_junk -base ./__tt_vr_base_min_outlier_ts_ns+orig -cmass -1Dmatrix_save ./T1w_acpc_dc_restore_brain_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 0.800000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns_wt+orig.BRIK is 9.192507 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 9.192507 degrees from plumb.
++ Option '-cmass' enables center-of-mass code = 7 = +xyz
++ Source dataset: ./__tt_T1w_acpc_dc_restore_brain_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ 3247414 voxels in -source_automask+2
++ Zero-pad: ybot=3 ytop=0
++ Zero-pad: zbot=9 ztop=6
++ 110311 voxels [12.5%] in weight mask
++ Number of points for matching = 110311
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
 +     - It is nothing to worry about: 3dAllineate aligns based on coordinates.
 +     - But it is always important to check the alignment visually to be sure.
++ Local correlation: blok type = 'TOHD(12.4104)'
++ base center of mass = 46.402 43.936 55.638 (index)
 + source center of mass = 111.662 159.451 125.446 (index)
 + source-target CM = -3.572 4.020 -7.906 (xyz)
 + estimated center of mass shifts = -3.572 4.020 -7.906
++ shift param auto-range: -76.6..69.5 -71.3..79.4 -78.8..63.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -13.571609 .. 6.428391  center = -3.571609
 + Range param#2 [y-shift] = -5.980293 .. 14.019707  center = 4.019707
 + Range param#3 [z-shift] = -17.906143 .. 2.093857  center = -7.906143
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -43.571609 .. 36.428391  center = -3.571609
 + Range param#2 [y-shift] = -35.980293 .. 44.019707  center = 4.019707
 + Range param#3 [z-shift] = -47.906143 .. 32.093857  center = -7.906143
 + 12 free parameters
++ Normalized (unitless) convergence radius = 0.0000081
++ Final parameter search ranges:
 +       x-shift =  -43.572 ..   36.428
 +       y-shift =  -35.980 ..   44.020
 +       z-shift =  -47.906 ..   32.094
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.8000 mm
++ OpenMP thread count = 15
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 3247414 [out of 18554980] voxels
 + base mask has 134461 [out of 883872] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=2.40
 + - Smoothing source; radius=2.40
 + !source mask fill: ubot=30.0396 usiz=88.174
 + - copying weight image
 + - using 98765 points from base image [use_all=0]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 87654 total points stored in 187 'TOHD(12.6403)' bloks (0 duplicates)
 + - number of free params = 6
 + - Test (64+101)*64 params [top5=*o+-.]:#o+-.+.-+-*[#17=-0.0409469] **[#26=-0.055103] *o-..+$
 + - best 88 costs found:
   o= 0 v=-0.055103: -10.24  10.69  -1.24  -7.50  -7.50   7.50  [grid]
   o= 1 v=-0.046965:   3.10  10.69  -1.24   7.50  -7.50  -7.50  [grid]
   o= 2 v=-0.042668: -10.24  -2.65  -1.24  -7.50 -30.00  -7.50  [grid]
   o= 3 v=-0.040947:   3.10  10.69  -1.24   7.50  -7.50   7.50  [grid]
   o= 4 v=-0.040779:   3.10  -2.65  -1.24   7.50 -30.00   7.50  [grid]
   o= 5 v=-0.040293:   3.10  -2.65  -1.24   7.50 -30.00  -7.50  [grid]
   o= 6 v=-0.038387: -10.24  -2.65  -1.24  -7.50 -30.00   7.50  [grid]
   o= 7 v=-0.038246:  -3.57   4.02  -7.91   0.00   0.00   0.00  [grid]
   o= 8 v=-0.036453:   3.10  10.69  -1.24   7.50   7.50   7.50  [grid]
   o= 9 v=-0.035889: -10.24  10.69  -1.24  -7.50  -7.50  -7.50  [grid]
   o=10 v=-0.035203:   3.10  -2.65  -1.24  30.00 -30.00   7.50  [grid]
   o=11 v=-0.034857: -10.24  10.69  -1.24 -30.00  -7.50   7.50  [grid]
   o=12 v=-0.034338: -10.24  10.69  -1.24  -7.50   7.50   7.50  [grid]
   o=13 v=-0.033924: -10.24  10.69  -1.24 -30.00   7.50   7.50  [grid]
   o=14 v=-0.033423:  -7.65  -2.21  -0.11   4.32 -22.85  18.95  [rand]
   o=15 v=-0.033066:   3.10  10.69  -1.24   7.50   7.50  -7.50  [grid]
   o=16 v=-0.033048: -10.24  -2.65  -1.24 -30.00 -30.00   7.50  [grid]
   o=17 v=-0.032607:   0.51  10.25  -0.11   4.32 -22.85  18.95  [rand]
   o=18 v=-0.031695:   3.10  10.69  -1.24  30.00  -7.50  -7.50  [grid]
   o=19 v=-0.031546: -10.24  10.69  -1.24  -7.50   7.50  -7.50  [grid]
   o=20 v=-0.030983:  -7.65  -2.21  -0.11  -4.32 -22.85  18.95  [rand]
   o=21 v=-0.030620:   3.10  10.69 -14.57   7.50   7.50  -7.50  [grid]
   o=22 v=-0.030263: -10.24  10.69 -14.57 -30.00  30.00  30.00  [grid]
   o=23 v=-0.030027: -10.24  10.69  -1.24 -30.00   7.50  -7.50  [grid]
   o=24 v=-0.029911:  -7.65  10.25  -0.11   4.32 -22.85  18.95  [rand]
   o=25 v=-0.029685: -15.17  -0.54  -4.01 -24.53 -29.49  26.10  [rand]
   o=26 v=-0.029405:  -7.65  10.25  -0.11  -4.32 -22.85  18.95  [rand]
   o=27 v=-0.029016: -10.24  10.69 -14.57 -30.00  30.00   7.50  [grid]
   o=28 v=-0.028830: -10.24  10.69 -14.57  -7.50   7.50   7.50  [grid]
   o=29 v=-0.028571: -10.24  10.69 -14.57 -30.00   7.50  30.00  [grid]
   o=30 v=-0.028412: -10.24  10.69  -1.24   7.50  -7.50   7.50  [grid]
   o=31 v=-0.028240: -10.24  10.69  -1.24 -30.00 -30.00   7.50  [grid]
   o=32 v=-0.028073: -10.24  10.69 -14.57  -7.50  30.00  -7.50  [grid]
   o=33 v=-0.027813:   0.51  10.25  -0.11  -4.32 -22.85  18.95  [rand]
   o=34 v=-0.027735: -10.24  10.69 -14.57  -7.50  -7.50 -30.00  [grid]
   o=35 v=-0.027724: -36.06  18.71 -19.71  11.16   9.40  34.39  [rand]
   o=36 v=-0.027560:   3.10  -2.65  -1.24  30.00 -30.00  -7.50  [grid]
   o=37 v=-0.026963: -10.24  10.69  -1.24   7.50 -30.00   7.50  [grid]
   o=38 v=-0.026962: -12.11  18.16 -10.06  -4.39  33.35   4.11  [rand]
   o=39 v=-0.026938:   3.10  10.69 -14.57   7.50   7.50   7.50  [grid]
   o=40 v=-0.026938:   3.10  -2.65 -14.57   7.50  -7.50  -7.50  [grid]
   o=41 v=-0.026859: -10.24  10.69  -1.24 -30.00  -7.50  30.00  [grid]
   o=42 v=-0.026835:   3.10  30.69 -14.57   7.50  30.00  -7.50  [grid]
   o=43 v=-0.026722:   0.51  10.25 -15.70  -4.32  22.85  18.95  [rand]
   o=44 v=-0.026634: -35.41  15.81  -5.16  23.31  -3.26  40.47  [rand]
   o=45 v=-0.026512:   3.10  10.69 -14.57   7.50  30.00   7.50  [grid]
   o=46 v=-0.026509: -10.46  13.10 -11.39 -42.18  25.76  19.54  [rand]
   o=47 v=-0.026310: -13.83  12.86   7.73  -7.51 -21.00  38.82  [rand]
   o=48 v=-0.026271:   3.10  -2.65  -1.24  -7.50 -30.00   7.50  [grid]
   o=49 v=-0.026056: -10.24  -2.65  -1.24 -30.00 -30.00  -7.50  [grid]
   o=50 v=-0.025921:   3.10  10.69  -1.24  -7.50   7.50   7.50  [grid]
   o=51 v=-0.025848:   0.51  -2.21  -0.11   4.32 -22.85  18.95  [rand]
   o=52 v=-0.025600:   3.10  10.69  -1.24  -7.50  -7.50   7.50  [grid]
   o=53 v=-0.025547: -10.24  30.69 -14.57  -7.50  30.00   7.50  [grid]
   o=54 v=-0.025359: -10.24  10.69 -14.57  -7.50  30.00   7.50  [grid]
   o=55 v=-0.025117: -37.90  20.60 -16.51  16.34   8.64  40.54  [rand]
   o=56 v=-0.025017: -12.11  18.16 -10.06  -4.39  33.35  -4.11  [rand]
   o=57 v=-0.024957: -10.24  -2.65 -14.57  -7.50  -7.50   7.50  [grid]
   o=58 v=-0.024770:   3.10  -2.65  -1.24  -7.50 -30.00  -7.50  [grid]
   o=59 v=-0.024758: -35.41  15.81 -10.65  23.31  -3.26  40.47  [rand]
   o=60 v=-0.024406: -18.53  -7.13   2.55 -35.95 -25.02   2.65  [rand]
   o=61 v=-0.024339:  -7.65  10.25 -15.70   4.32  22.85 -18.95  [rand]
   o=62 v=-0.024260: -10.24  30.69  -1.24  -7.50   7.50   7.50  [grid]
   o=63 v=-0.024220: -12.11  18.16  -5.75  -4.39  33.35   4.11  [rand]
   o=64 v=-0.024140:   3.10  30.69  -1.24  30.00  30.00  30.00  [grid]
   o=65 v=-0.024122:   0.51  10.25  -0.11  -4.32 -22.85 -18.95  [rand]
   o=66 v=-0.024117: -10.24  10.69  -1.24   7.50 -30.00  -7.50  [grid]
   o=67 v=-0.023955:   0.51  -2.21  -0.11   4.32 -22.85 -18.95  [rand]
   o=68 v=-0.023799: -10.24  10.69  -1.24 -30.00   7.50  30.00  [grid]
   o=69 v=-0.023785:   3.10  -2.65 -14.57  30.00  -7.50  -7.50  [grid]
   o=70 v=-0.023775: -10.46  -5.06  -4.43 -42.18 -25.76 -19.54  [rand]
   o=71 v=-0.023716:   3.10  30.69  -1.24  -7.50   7.50  30.00  [grid]
   o=72 v=-0.023710:   4.97  18.16 -10.06   4.39  33.35   4.11  [rand]
   o=73 v=-0.023616: -30.24  -2.65  -1.24 -30.00 -30.00  30.00  [grid]
   o=74 v=-0.023616: -17.60 -11.70   6.76 -24.25 -37.55   4.41  [rand]
   o=75 v=-0.023554:   3.10  10.69 -14.57   7.50   7.50  30.00  [grid]
   o=76 v=-0.023517: -17.78  13.47  -3.07 -15.99 -13.53 -29.93  [rand]
   o=77 v=-0.023468:  -7.65  10.25 -15.70  -4.32  22.85 -18.95  [rand]
   o=78 v=-0.023450: -10.24  10.69  -1.24  -7.50  -7.50  30.00  [grid]
   o=79 v=-0.023388: -10.24  -2.65  -1.24  -7.50  -7.50  -7.50  [grid]
   o=80 v=-0.023344: -10.24  10.69  -1.24 -30.00  -7.50  -7.50  [grid]
   o=81 v=-0.023326: -10.24  10.69  -1.24  -7.50 -30.00 -30.00  [grid]
   o=82 v=-0.023319:   3.10  10.69  -1.24 -30.00 -30.00 -30.00  [grid]
   o=83 v=-0.023288: -10.24  10.69  18.76  -7.50 -30.00   7.50  [grid]
   o=84 v=-0.023255:   3.10  -2.65  -1.24 -30.00 -30.00  -7.50  [grid]
   o=85 v=-0.023247:   3.10  -2.65  -1.24  30.00 -30.00  30.00  [grid]
   o=86 v=-0.023180:   0.51  -2.21  -0.11  -4.32 -22.85 -18.95  [rand]
   o=87 v=-0.023129:  10.63  13.47  -3.07  15.99 -13.53  29.93  [rand]
 + - A little optimization:*[#10562=-0.0626117] *[#10571=-0.0656234] *[#10573=-0.0668071] *[#10574=-0.0745828] *[#10575=-0.0799481] *[#10577=-0.0801022] *[#10580=-0.0839489] *[#10581=-0.0861155] *[#10583=-0.0876845] *[#10585=-0.0881126] *[#10588=-0.0912768] *[#10589=-0.0921617] *[#10590=-0.0933515] *[#10592=-0.0958281] *[#10594=-0.0969438] *[#10597=-0.0984207] *[#10600=-0.101073] *[#10603=-0.102576] *[#10604=-0.103641] *[#10606=-0.105637] *[#10607=-0.105788] *[#10609=-0.109224] *[#10610=-0.117809] *[#10611=-0.126461] *[#10612=-0.159845] *[#10616=-0.174862] *[#10617=-0.189016] *[#10622=-0.194172] *[#10625=-0.19771] *[#10628=-0.198489] *[#10632=-0.199311] *[#10636=-0.199744] *[#10637=-0.199909] *[#10638=-0.199956] *[#10641=-0.200064] *[#10642=-0.20009] .*[#10724=-0.200112] ..*[#10865=-0.200127] *[#10867=-0.200129] *[#10869=-0.200131] .....................................................................................
 + - costs of the above after a little optimization:
   o= 0 v=-0.200090:  -3.68   5.91  -2.76   0.36 -13.74   3.18  [grid]  [f=83]
   o= 1 v=-0.200112:  -3.69   5.91  -2.71   0.36 -13.75   3.20  [grid]  [f=80]
   o= 2 v=-0.067048:  -6.25  -1.72  -1.90  -2.85 -26.79  -0.41  [grid]  [f=72]
  *o= 3 v=-0.200131:  -3.65   5.91  -2.71   0.37 -13.74   3.22  [grid]  [f=71]
   o= 4 v=-0.069823:  -1.67  -2.07  -2.22   5.16 -28.03   4.27  [grid]  [f=54]
   o= 5 v=-0.071969:  -1.69  -1.38  -1.90   3.74 -26.69   3.03  [grid]  [f=66]
   o= 6 v=-0.068111:  -4.79  -3.45  -2.83  -1.33 -28.46   3.59  [grid]  [f=61]
   o= 7 v=-0.053079:  -0.77  10.01  -4.70   1.24   2.87   3.24  [grid]  [f=83]
   o= 8 v=-0.060405:   2.37  12.31  -6.02   5.48   6.22   6.61  [grid]  [f=43]
   o= 9 v=-0.200109:  -3.63   5.96  -2.70   0.39 -13.78   3.27  [grid]  [f=83]
   o=10 v=-0.043495:   2.41   0.20   2.41  27.14 -31.69   6.38  [grid]  [f=77]
   o=11 v=-0.199844:  -3.79   5.87  -2.68   0.34 -13.65   3.09  [grid]  [f=83]
   o=12 v=-0.060062:  -7.58  12.99  -5.43  -6.78   4.36   2.74  [grid]  [f=68]
   o=13 v=-0.045556: -11.36  14.32  -5.17 -31.20   7.25  11.65  [grid]  [f=60]
   o=14 v=-0.200096:  -3.61   5.86  -2.74   0.39 -13.68   3.23  [rand]  [f=83]
   o=15 v=-0.058988:   1.14  12.18  -6.27   5.57   5.98   4.38  [grid]  [f=77]
   o=16 v=-0.037787:  -9.60  -2.25  -1.31 -31.48 -27.39   6.29  [grid]  [f=39]
   o=17 v=-0.200112:  -3.65   5.94  -2.72   0.35 -13.74   3.20  [rand]  [f=83]
   o=18 v=-0.045866:   4.24  12.86   0.32  25.50 -11.30  -6.05  [grid]  [f=50]
   o=19 v=-0.061879:  -6.18  10.85  -4.77  -4.10  -0.44   5.13  [grid]  [f=69]
   o=20 v=-0.044423: -12.20   0.81   0.98  -4.44 -22.48  17.18  [rand]  [f=45]
   o=21 v=-0.060103:   1.50  12.69  -6.12   4.83   5.63   5.32  [grid]  [f=73]
   o=22 v=-0.042564: -10.08  11.34 -17.02 -27.30  23.85  24.58  [grid]  [f=64]
   o=23 v=-0.050305:  -7.09  15.07  -3.59 -19.11   8.69  -2.60  [grid]  [f=63]
   o=24 v=-0.200112:  -3.66   5.93  -2.69   0.36 -13.76   3.25  [rand]  [f=81]
   o=25 v=-0.037495: -15.02  -2.19   5.21 -25.55 -27.63  25.79  [rand]  [f=68]
   o=26 v=-0.200110:  -3.61   5.90  -2.74   0.38 -13.76   3.25  [rand]  [f=83]
   o=27 v=-0.049608:  -9.66  16.13 -11.03 -25.32  26.04  16.66  [grid]  [f=83]
   o=28 v=-0.060094:  -7.62  12.90  -5.51  -6.80   4.24   2.53  [grid]  [f=61]
   o=29 v=-0.045099:  -8.59  16.46 -10.66 -20.40  15.58  22.64  [grid]  [f=62]
   o=30 v=-0.200016:  -3.67   5.99  -2.62   0.34 -13.84   3.20  [grid]  [f=63]
   o=31 v=-0.032611: -10.31  10.86  -3.47 -31.97 -22.50   6.92  [grid]  [f=55]
   o=32 v=-0.043133:  -9.93  14.59 -13.48  -7.35  28.15  -1.30  [grid]  [f=83]
   o=33 v=-0.197663:  -3.24   6.16  -2.51   0.48 -13.95   3.44  [rand]  [f=83]
   o=34 v=-0.032839: -10.51  11.63 -13.49  -8.76  -4.64 -28.21  [grid]  [f=70]
   o=35 v=-0.034055: -36.98  13.45 -17.36   9.10   9.66  32.92  [rand]  [f=42]
   o=36 v=-0.042951:   4.60  -3.57  -4.38  25.31 -26.21  -2.81  [grid]  [f=77]
   o=37 v=-0.200119:  -3.62   5.89  -2.72   0.38 -13.73   3.26  [grid]  [f=76]
   o=38 v=-0.050291:  -5.66  19.22 -14.63  -7.41  29.18   5.88  [rand]  [f=52]
   o=39 v=-0.060500:   2.16  12.50  -6.14   4.99   6.54   6.97  [grid]  [f=60]
   o=40 v=-0.042440:  -0.35  -5.21 -15.34  14.34 -10.65  -8.62  [grid]  [f=57]
   o=41 v=-0.042407: -10.59  15.96   0.87 -33.07  -2.54  25.48  [grid]  [f=80]
   o=42 v=-0.045500:  -1.56  25.46 -12.90   1.26  33.53  -5.95  [grid]  [f=57]
   o=43 v=-0.051989:  -3.35  17.00 -12.81  -8.40  23.40  10.74  [rand]  [f=68]
   o=44 v=-0.029426: -37.91  16.78  -5.08  23.30  -3.39  40.63  [rand]  [f=36]
   o=45 v=-0.035209:   1.90   5.55 -13.72  10.35  32.89   5.18  [grid]  [f=58]
   o=46 v=-0.038880: -10.79  14.60 -13.01 -34.53  27.47  21.41  [rand]  [f=39]
   o=47 v=-0.033875: -10.30  12.28   4.98  -9.61 -24.12  37.54  [rand]  [f=37]
   o=48 v=-0.198596:  -3.64   5.85  -2.58   0.35 -13.56   2.86  [grid]  [f=83]
   o=49 v=-0.068469:  -4.26   0.19  -2.26  -5.79 -23.51   2.17  [grid]  [f=83]
   o=50 v=-0.053878:  -0.44   9.81  -4.27   1.02   3.86   3.47  [grid]  [f=83]
   o=51 v=-0.200113:  -3.67   5.87  -2.73   0.36 -13.70   3.22  [rand]  [f=81]
   o=52 v=-0.200065:  -3.69   5.87  -2.73   0.35 -13.70   3.15  [grid]  [f=58]
   o=53 v=-0.050004:  -3.40  21.15 -13.87  -4.47  31.89   1.56  [grid]  [f=71]
   o=54 v=-0.050079:  -5.59  19.40 -14.71  -8.59  29.70   7.70  [grid]  [f=65]
   o=55 v=-0.027182: -36.77  17.06 -17.42  16.11   6.39  37.24  [rand]  [f=39]
   o=56 v=-0.053765:  -4.16  18.71 -14.21  -3.22  28.80   1.70  [rand]  [f=83]
   o=57 v=-0.198475:  -3.64   5.53  -2.95   0.25 -13.51   3.26  [grid]  [f=83]
   o=58 v=-0.070713:  -2.18  -0.86  -2.66   2.39 -24.31  -0.34  [grid]  [f=83]
   o=59 v=-0.030782: -36.40  17.65  -3.53  22.45  -2.96  37.92  [rand]  [f=50]
   o=60 v=-0.045077: -11.98  -4.52  -3.90 -22.16 -26.06   9.39  [rand]  [f=83]
   o=61 v=-0.043806:  -6.79  15.71 -11.93  -3.27  24.24  -2.93  [rand]  [f=62]
   o=62 v=-0.057282:  -8.70  15.18  -2.71  -7.99  -0.78   6.01  [grid]  [f=83]
   o=63 v=-0.051915:  -6.78  20.31 -12.94 -11.30  27.44   9.89  [rand]  [f=61]
   o=64 v=-0.027458:   2.00  31.62  -0.69  29.24  31.87  29.45  [grid]  [f=54]
   o=65 v=-0.032930:   0.85   9.70   3.67  -3.43 -22.63 -17.74  [rand]  [f=56]
   o=66 v=-0.068102:  -5.16   0.02  -1.91  -5.00 -22.55   1.35  [grid]  [f=83]
   o=67 v=-0.038682:   4.23  -2.23   0.31   3.92 -23.33 -18.74  [rand]  [f=44]
   o=68 v=-0.046108:  -9.69  14.20  -6.12 -22.80   9.57  16.51  [grid]  [f=73]
   o=69 v=-0.037441:   3.27  -5.14 -14.70  22.67 -12.32 -10.82  [grid]  [f=70]
   o=70 v=-0.028727:  -9.24  -5.32  -3.12 -41.56 -26.82 -15.17  [rand]  [f=55]
   o=71 v=-0.025283:   2.87  30.74  -1.13  -6.58   8.56  30.38  [grid]  [f=49]
   o=72 v=-0.052768:  -2.85  18.79 -13.48  -1.63  28.70   1.15  [rand]  [f=58]
   o=73 v=-0.029411: -25.66  -2.89  -1.77 -28.74 -32.17  30.40  [grid]  [f=52]
   o=74 v=-0.040283: -15.53  -5.28   2.06 -22.94 -41.55   4.15  [rand]  [f=44]
   o=75 v=-0.027626:   4.13  12.98 -15.77   5.91   6.64  29.53  [grid]  [f=72]
   o=76 v=-0.024781: -16.51  12.16  -2.73 -16.52 -15.13 -31.47  [rand]  [f=39]
   o=77 v=-0.029528:  -3.54  13.91 -13.84  -4.18  24.33 -18.30  [rand]  [f=55]
   o=78 v=-0.046292: -12.90  13.40   0.62 -11.27  -5.03  23.32  [grid]  [f=80]
   o=79 v=-0.200112:  -3.67   5.88  -2.73   0.38 -13.72   3.21  [grid]  [f=83]
   o=80 v=-0.198483:  -3.61   6.19  -2.46   0.29 -14.28   3.25  [grid]  [f=83]
   o=81 v=-0.032886: -11.76  11.79  -4.60 -10.02 -25.37 -31.75  [grid]  [f=38]
   o=82 v=-0.031267:   2.41   5.28   0.08 -30.73 -31.95 -33.37  [grid]  [f=71]
   o=83 v=-0.064059:  -8.97   9.24   4.22  -4.15 -18.84   5.69  [grid]  [f=83]
   o=84 v=-0.050049:  -4.61  -6.92  -1.85 -16.61 -33.88  -8.23  [grid]  [f=70]
   o=85 v=-0.038152:  -2.89  -5.34   0.82  26.46 -29.59  27.65  [grid]  [f=64]
   o=86 v=-0.151889:  -2.74   7.42  -0.92   2.02 -14.64   2.58  [rand]  [f=83]
   o=87 v=-0.026847:   8.58  12.89  -2.54  16.41 -17.26  29.87  [rand]  [f=83]
 + - saving # 3 for use with twobest
 + - skip #37 for twobest: too close to set # 3
 + - skip #51 for twobest: too close to set # 3
 + - skip #24 for twobest: too close to set # 3
 + - skip # 1 for twobest: too close to set # 3
 + - skip #79 for twobest: too close to set # 3
 + - skip #17 for twobest: too close to set # 3
 + - skip #26 for twobest: too close to set # 3
 + - skip # 9 for twobest: too close to set # 3
 + - skip #14 for twobest: too close to set # 3
 + - skip # 0 for twobest: too close to set # 3
 + - skip #52 for twobest: too close to set # 3
 + - skip #30 for twobest: too close to set # 3
 + - skip #11 for twobest: too close to set # 3
 + - skip #48 for twobest: too close to set # 3
 + - skip #80 for twobest: too close to set # 3
 + - skip #57 for twobest: too close to set # 3
 + - skip #33 for twobest: too close to set # 3
 + - skip #86 for twobest: too close to set # 3
 + - saving # 5 for use with twobest
 + - skip #58 for twobest: too close to set # 5
 + - skip # 4 for twobest: too close to set # 5
 + - saving #49 for use with twobest
 + - skip # 6 for twobest: too close to set #58
 + - skip #66 for twobest: too close to set #49
 + - skip # 2 for twobest: too close to set #49
 + - saving #83 for use with twobest
 + - saving #19 for use with twobest
 + - saving #39 for use with twobest
 + - skip # 8 for twobest: too close to set #39
 + - skip #21 for twobest: too close to set #39
 + - saving #28 for use with twobest
 + - skip #12 for twobest: too close to set #28
 + - skip #15 for twobest: too close to set #39
 + - saving #62 for use with twobest
 + - skip #50 for twobest: too close to set #39
 + - saving #56 for use with twobest
 + - skip # 7 for twobest: too close to set #39
 + - skip #72 for twobest: too close to set #56
 + - saving #43 for use with twobest
 + - skip #63 for twobest: too close to set #43
 + - saving #23 for use with twobest
 + - skip #38 for twobest: too close to set #56
 + - skip #54 for twobest: too close to set #63
 + - saving #84 for use with twobest
 + - skip #53 for twobest: too close to set #56
 + - saving #27 for use with twobest
 + - saving #78 for use with twobest
 + - saving #68 for use with twobest
 + - saving #18 for use with twobest
 + - saving #13 for use with twobest
 + - saving #42 for use with twobest
 + - saving #29 for use with twobest
 + - saving #60 for use with twobest
 + - saving #20 for use with twobest
 + - skip #61 for twobest: too close to set #72
 + - saving #10 for use with twobest
 + - skip #32 for twobest: too close to set #61
 + - saving #36 for use with twobest
 + - saving #22 for use with twobest
 + - saving #40 for use with twobest
 + - saving #41 for use with twobest
 + - saving #74 for use with twobest
 + - saving #46 for use with twobest
 + - saving #67 for use with twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.87
 + - Smoothing source; radius=1.87
 + !source mask fill: ubot=30.0396 usiz=88.174
 + - retaining old weight image
 + - using 110311 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 98929 total points stored in 193 'TOHD(12.55)' bloks (0 duplicates)
 + - param set #1 has cost=-0.197274 [o=3 t=0]
 + -- Parameters = -3.3197 5.4250 -2.8435 0.6206 -13.5341 3.4429 1.0352 0.9841 1.0078 -0.0020 -0.0003 -0.0048
 + - param set #2 has cost=-0.061136 [o=5 t=1]
 + -- Parameters = -1.6591 -1.3511 -1.8149 3.7959 -27.0057 2.8271 1.0065 0.9990 0.9951 0.0018 -0.0000 -0.0007
 + - param set #3 has cost=-0.181678 [o=49 t=2]
 + -- Parameters = -3.1894 6.1622 -2.0278 1.4262 -14.1462 3.6881 1.0380 1.0014 0.9857 0.0260 0.0013 0.0044
 + - param set #4 has cost=-0.163547 [o=83 t=3]
 + -- Parameters = -4.0106 6.8519 -1.2377 -0.1296 -15.3192 2.3250 1.0092 1.0345 0.9711 -0.0104 0.0164 0.0017
 + - param set #5 has cost=-0.055035 [o=19 t=4]
 + -- Parameters = -4.6719 11.5307 -4.9645 -3.8299 0.2814 6.9744 1.0770 1.0061 1.0000 0.0047 0.0054 0.0070
 + - param set #6 has cost=-0.047539 [o=39 t=5]
 + -- Parameters = 2.0165 12.7804 -6.2341 4.9812 6.5930 7.0565 1.0026 1.0065 0.9985 -0.0022 0.0028 -0.0008
 + - param set #7 has cost=-0.047487 [o=28 t=6]
 + -- Parameters = -7.4151 12.7019 -5.5429 -6.5798 4.0082 2.6574 0.9947 1.0007 0.9968 0.0118 0.0008 0.0012
 + - param set #8 has cost=-0.044558 [o=62 t=7]
 + -- Parameters = -7.9462 14.9643 -3.3199 -7.5283 -0.5585 5.9416 0.9913 1.0022 1.0014 0.0019 -0.0005 0.0128
 + - param set #9 has cost=-0.041646 [o=56 t=8]
 + -- Parameters = -4.1875 18.6151 -14.2809 -3.3380 29.0421 1.9126 1.0041 1.0058 0.9939 -0.0023 0.0025 0.0001
 + - param set #10 has cost=-0.041558 [o=43 t=9]
 + -- Parameters = -3.0263 16.4973 -12.5146 -7.1835 23.4934 9.8892 1.0313 0.9945 0.9972 0.0004 -0.0008 0.0020
 + - param set #11 has cost=-0.039075 [o=23 t=10]
 + -- Parameters = -7.4160 15.1885 -3.6959 -19.1568 8.5701 -2.1412 1.0041 0.9951 1.0033 -0.0002 0.0015 0.0010
 + - param set #12 has cost=-0.050714 [o=-1 t=-1]
 + -- Parameters = -6.1439 10.1353 -5.3740 -2.7542 0.8734 3.0773 1.0141 0.9819 0.9971 -0.0027 -0.0011 0.0074
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.126 
 + --- dist(#3,#1) = 0.075 
 + --- dist(#4,#1) = 0.15 
 + --- dist(#5,#1) = 0.154 
 + --- dist(#6,#1) = 0.16 
 + --- dist(#7,#1) = 0.224 
 + --- dist(#8,#1) = 0.195 
 + --- dist(#9,#1) = 0.144 
 + --- dist(#10,#1) = 0.473 
 + --- dist(#11,#1) = 0.411 
 + --- dist(#12,#1) = 0.246 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.45
 + - Smoothing source; radius=1.45
 + !source mask fill: ubot=30.0396 usiz=88.174
 + - retaining old weight image
 + - using 110311 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 98278 total points stored in 193 'TOHD(12.495)' bloks (0 duplicates)
 + - param set #1 has cost=-0.184682 [o=3 t=0]
 + -- Parameters = -3.4876 5.3574 -2.9871 0.5288 -13.5372 3.0850 1.0306 0.9811 1.0095 -0.0028 0.0043 -0.0080
 + - param set #2 has cost=-0.182033 [o=49 t=2]
 + -- Parameters = -3.1321 5.4512 -2.9657 1.0351 -13.5314 3.8841 1.0354 0.9888 1.0074 0.0096 -0.0057 -0.0067
 + - param set #3 has cost=-0.181360 [o=83 t=3]
 + -- Parameters = -3.8265 5.5352 -2.6984 0.2532 -14.1399 2.6472 1.0342 0.9789 0.9916 -0.0107 0.0082 -0.0200
 + - param set #4 has cost=-0.049719 [o=5 t=1]
 + -- Parameters = -1.6788 -1.0961 -1.8298 4.0112 -27.0479 3.0098 1.0069 1.0006 0.9918 0.0014 0.0003 -0.0015
 + - param set #5 has cost=-0.047890 [o=19 t=4]
 + -- Parameters = -4.9635 11.5982 -4.6710 -3.7704 -0.0835 6.7560 1.0770 0.9909 1.0056 0.0061 0.0062 0.0198
 + - param set #6 has cost=-0.048917 [o=-1 t=-1]
 + -- Parameters = -4.3155 10.3423 -5.2883 -2.5025 0.7209 5.5602 1.0901 0.9790 1.0110 0.0007 0.0001 0.0109
 + - param set #7 has cost=-0.040071 [o=39 t=5]
 + -- Parameters = 2.1003 12.8627 -6.5172 5.0542 6.8799 6.9741 0.9999 1.0097 0.9992 -0.0030 0.0131 0.0013
 + - param set #8 has cost=-0.041356 [o=28 t=6]
 + -- Parameters = -6.8204 12.4414 -5.4338 -4.6235 4.2966 2.3013 1.0080 1.0005 0.9892 0.0165 0.0054 0.0145
 + - param set #9 has cost=-0.042592 [o=62 t=7]
 + -- Parameters = -9.1354 15.0945 -2.8947 -9.3558 0.6746 5.0311 0.9190 1.0388 0.9554 -0.0017 0.0017 0.0154
 + - param set #10 has cost=-0.033484 [o=56 t=8]
 + -- Parameters = -4.1288 18.5516 -14.2427 -3.5049 29.4018 1.8472 1.0342 1.0065 0.9930 -0.0024 0.0037 -0.0001
 + - param set #11 has cost=-0.034028 [o=43 t=9]
 + -- Parameters = -2.9066 16.1841 -12.5607 -7.3700 23.0450 9.0311 1.0296 1.0071 1.0094 -0.0077 0.0141 -0.0048
 + - param set #12 has cost=-0.033549 [o=23 t=10]
 + -- Parameters = -8.5414 15.1446 -3.8068 -18.5008 7.9769 -2.8228 1.0016 0.9832 0.9930 0.0005 0.0126 0.0106
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.056 
 + --- dist(#3,#1) = 0.0536 
 + --- dist(#4,#1) = 0.15 
 + --- dist(#5,#1) = 0.158 
 + --- dist(#6,#1) = 0.149 
 + --- dist(#7,#1) = 0.161 
 + --- dist(#8,#1) = 0.198 
 + --- dist(#9,#1) = 0.227 
 + --- dist(#10,#1) = 0.406 
 + --- dist(#11,#1) = 0.239 
 + --- dist(#12,#1) = 0.477 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.13
 + - Smoothing source; radius=1.13
 + !source mask fill: ubot=30.0396 usiz=88.174
 + - retaining old weight image
 + - using 110311 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 98341 total points stored in 195 'TOHD(12.4616)' bloks (0 duplicates)
 + - param set #1 has cost=-0.178841 [o=3 t=0]
 + -- Parameters = -3.5041 5.3462 -3.2403 0.5089 -13.6622 2.9894 1.0294 0.9823 1.0167 -0.0049 0.0046 -0.0141
 + - param set #2 has cost=-0.179777 [o=49 t=2]
 + -- Parameters = -3.4251 5.5422 -3.2991 0.5206 -13.8870 3.1621 1.0292 0.9856 1.0177 -0.0024 -0.0005 -0.0208
 + - param set #3 has cost=-0.179265 [o=83 t=3]
 + -- Parameters = -3.6916 5.5342 -3.2791 0.4195 -13.9785 2.6525 1.0283 0.9860 1.0179 -0.0059 0.0119 -0.0220
 + - param set #4 has cost=-0.044945 [o=5 t=1]
 + -- Parameters = -1.5075 -1.0508 -1.7075 4.0122 -27.1548 2.8151 1.0066 0.9951 0.9900 0.0000 0.0002 -0.0026
 + - param set #5 has cost=-0.045514 [o=-1 t=-1]
 + -- Parameters = -4.3662 10.3987 -5.3487 -2.4108 0.6110 5.3874 1.0894 0.9811 1.0140 0.0012 0.0001 0.0168
 + - param set #6 has cost=-0.045283 [o=19 t=4]
 + -- Parameters = -4.9361 11.5113 -4.5880 -3.4989 -0.3432 6.3012 1.0734 0.9907 1.0178 0.0179 0.0069 0.0199
 + - param set #7 has cost=-0.038716 [o=62 t=7]
 + -- Parameters = -9.0415 15.3629 -3.0640 -9.1017 0.7957 4.7308 0.9342 1.0512 0.9410 -0.0073 -0.0001 0.0139
 + - param set #8 has cost=-0.038881 [o=28 t=6]
 + -- Parameters = -6.9780 12.4766 -5.4669 -4.7962 4.7394 1.9494 1.0070 0.9978 0.9885 0.0149 0.0062 0.0226
 + - param set #9 has cost=-0.037140 [o=39 t=5]
 + -- Parameters = 1.6389 13.0162 -6.6062 4.7870 6.4286 6.7110 0.9984 1.0082 1.0152 -0.0068 0.0019 0.0078
 + - param set #10 has cost=-0.030597 [o=43 t=9]
 + -- Parameters = -2.8759 16.1826 -12.6315 -7.3315 22.7896 9.0346 1.0290 1.0063 1.0126 -0.0077 0.0150 -0.0050
 + - param set #11 has cost=-0.030667 [o=23 t=10]
 + -- Parameters = -8.9311 15.2079 -3.1825 -17.4772 8.6037 -4.0523 1.0190 0.9756 0.9717 -0.0040 0.0206 0.0120
 + - param set #12 has cost=-0.029281 [o=56 t=8]
 + -- Parameters = -4.1669 18.5636 -14.2124 -3.5294 29.4290 1.8213 1.0380 1.0061 0.9924 -0.0028 0.0040 0.0000
 + - sorting parameter sets by cost
 + - scanning for distances from #1
 + --- dist(#2,#1) = 0.0557 
 + --- dist(#3,#1) = 0.03 
 + --- dist(#4,#1) = 0.169 
 + --- dist(#5,#1) = 0.183 
 + --- dist(#6,#1) = 0.147 
 + --- dist(#7,#1) = 0.207 
 + --- dist(#8,#1) = 0.163 
 + --- dist(#9,#1) = 0.226 
 + --- dist(#10,#1) = 0.25 
 + --- dist(#11,#1) = 0.408 
 + --- dist(#12,#1) = 0.481 
 + - Total coarse refinement net CPU time = 0.0 s; 3960 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=30.0396 usiz=88.174
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 98398 total points stored in 195 'TOHD(12.4506)' bloks (0 duplicates)
 + - cost(#1)=-0.179224 * [o=49 t=2]
 + -- Parameters = -3.4251 5.5422 -3.2991 0.5206 -13.8870 3.1621 1.0292 0.9856 1.0177 -0.0024 -0.0005 -0.0208
 + - cost(#2)=-0.178658   [o=83 t=3]
 + -- Parameters = -3.6916 5.5342 -3.2791 0.4195 -13.9785 2.6525 1.0283 0.9860 1.0179 -0.0059 0.0119 -0.0220
 + - cost(#3)=-0.178218   [o=3 t=0]
 + -- Parameters = -3.5041 5.3462 -3.2403 0.5089 -13.6622 2.9894 1.0294 0.9823 1.0167 -0.0049 0.0046 -0.0141
 + - cost(#4)=-0.044977   [o=-1 t=-1]
 + -- Parameters = -4.3662 10.3987 -5.3487 -2.4108 0.6110 5.3874 1.0894 0.9811 1.0140 0.0012 0.0001 0.0168
 + - cost(#5)=-0.044624   [o=19 t=4]
 + -- Parameters = -4.9361 11.5113 -4.5880 -3.4989 -0.3432 6.3012 1.0734 0.9907 1.0178 0.0179 0.0069 0.0199
 + - cost(#6)=-0.044753   [o=5 t=1]
 + -- Parameters = -1.5075 -1.0508 -1.7075 4.0122 -27.1548 2.8151 1.0066 0.9951 0.9900 0.0000 0.0002 -0.0026
 + - cost(#7)=-0.038694   [o=28 t=6]
 + -- Parameters = -6.9780 12.4766 -5.4669 -4.7962 4.7394 1.9494 1.0070 0.9978 0.9885 0.0149 0.0062 0.0226
 + - cost(#8)=-0.037479   [o=62 t=7]
 + -- Parameters = -9.0415 15.3629 -3.0640 -9.1017 0.7957 4.7308 0.9342 1.0512 0.9410 -0.0073 -0.0001 0.0139
 + - cost(#9)=-0.036862   [o=39 t=5]
 + -- Parameters = 1.6389 13.0162 -6.6062 4.7870 6.4286 6.7110 0.9984 1.0082 1.0152 -0.0068 0.0019 0.0078
 + - cost(#10)=-0.029870   [o=23 t=10]
 + -- Parameters = -8.9311 15.2079 -3.1825 -17.4772 8.6037 -4.0523 1.0190 0.9756 0.9717 -0.0040 0.0206 0.0120
 + - cost(#11)=-0.030361   [o=43 t=9]
 + -- Parameters = -2.8759 16.1826 -12.6315 -7.3315 22.7896 9.0346 1.0290 1.0063 1.0126 -0.0077 0.0150 -0.0050
 + - cost(#12)=-0.028741   [o=56 t=8]
 + -- Parameters = -4.1669 18.5636 -14.2124 -3.5294 29.4290 1.8213 1.0380 1.0061 0.9924 -0.0028 0.0040 0.0000
 + - cost(#13)=-0.023905   [o=-2 t=-2]
 + -- Parameters = -3.5716 4.0197 -7.9061 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.179489 * [o=49 t=2]
 + -- Parameters = -3.4040 5.5553 -3.3124 0.6068 -13.9489 3.2233 1.0290 0.9864 1.0191 -0.0019 -0.0001 -0.0224
 + - cost(#2)=-0.178947   [o=83 t=3]
 + -- Parameters = -3.6994 5.6452 -3.2680 0.3922 -14.0766 2.7177 1.0281 0.9884 1.0194 -0.0057 0.0105 -0.0231
 + - cost(#3)=-0.178593   [o=3 t=0]
 + -- Parameters = -3.5358 5.4504 -3.2715 0.4795 -13.7076 2.9807 1.0288 0.9851 1.0176 -0.0047 0.0044 -0.0157
 + - cost(#4)=-0.044988   [o=-1 t=-1]
 + -- Parameters = -4.3806 10.3904 -5.3355 -2.3941 0.6142 5.4452 1.0898 0.9813 1.0141 0.0012 0.0001 0.0167
 + - cost(#5)=-0.044669   [o=19 t=4]
 + -- Parameters = -4.9479 11.4428 -4.6142 -3.5271 -0.3136 6.2876 1.0744 0.9917 1.0176 0.0181 0.0072 0.0200
 + - cost(#6)=-0.045269   [o=5 t=1]
 + -- Parameters = -1.6735 -0.9784 -1.6156 4.1671 -27.0891 2.6286 1.0043 0.9915 0.9847 0.0014 0.0006 -0.0139
 + - cost(#7)=-0.038789   [o=28 t=6]
 + -- Parameters = -6.9425 12.4074 -5.3702 -4.7523 4.8285 1.7652 1.0075 0.9996 0.9867 0.0147 0.0057 0.0226
 + - cost(#8)=-0.037610   [o=62 t=7]
 + -- Parameters = -8.8897 15.2225 -3.1229 -8.8406 0.9370 4.8650 0.9411 1.0579 0.9415 -0.0090 -0.0061 0.0164
 + - cost(#9)=-0.037011   [o=39 t=5]
 + -- Parameters = 1.6624 13.1653 -6.6561 4.6243 6.3367 6.7172 0.9970 1.0076 1.0136 -0.0163 0.0032 0.0059
 + - cost(#10)=-0.031754   [o=23 t=10]
 + -- Parameters = -7.8232 14.6219 -3.1109 -15.8441 9.0434 -5.3442 1.0489 0.9743 0.9598 -0.0019 0.0182 0.0137
 + - cost(#11)=-0.030395   [o=43 t=9]
 + -- Parameters = -2.8763 16.1537 -12.5964 -7.3154 22.7459 8.9344 1.0289 1.0064 1.0134 -0.0081 0.0150 -0.0051
 + - cost(#12)=-0.028922   [o=56 t=8]
 + -- Parameters = -4.2416 18.5678 -13.9509 -3.5795 29.5200 1.8459 1.0412 1.0066 0.9934 -0.0112 0.0045 -0.0000
 + - cost(#13)=-0.176816   [o=-2 t=-2]
 + -- Parameters = -3.3718 5.2074 -3.1620 0.6166 -13.2847 3.2808 1.0300 0.9812 1.0134 -0.0019 0.0003 -0.0053
 + - case #1 [o=49 t=2] is now the best
 + - Initial  cost = -0.179489
 + - Initial fine Parameters = -3.4040 5.5553 -3.3124 0.6068 -13.9489 3.2233 1.0290 0.9864 1.0191 -0.0019 -0.0001 -0.0224
 + - Finalish cost = -0.180279 ; 420 funcs
 + - ini Finalish Parameters = -3.4374 5.8706 -3.3520 0.6305 -14.5682 3.1976 1.0295 0.9909 1.0202 -0.0012 0.0000 -0.0353
 + - Final    cost = -0.180279 ; 267 funcs
 + Final fine fit Parameters:
       x-shift= -3.4375   y-shift=  5.8705   z-shift= -3.3522  ...  enorm=  7.5840 mm
       z-angle=  0.6304   x-angle=-14.5680   y-angle=  3.1976  ...  total= 14.9090 deg
       x-scale=  1.0295   y-scale=  0.9909   z-scale=  1.0202  ...  vol3D=  1.0406=(1.0134)^3 [base smaller than source]
     y/x-shear= -0.0012 z/x-shear=  0.0000 z/y-shear= -0.0353
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -3.4375 5.8705 -3.3522 0.6304 -14.5680 3.1976 1.0295 0.9909 1.0202 -0.0012 0.0000 -0.0353
++ Unloading unneeded data
++ Output dataset ./__tt_T1w_acpc_dc_restore_brain_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./T1w_acpc_dc_restore_brain_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 26.0
++ ###########################################################
++ #   PLEASE check results VISUALLY for alignment quality   #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./T1w_acpc_dc_restore_brain_al_junk_e2a_only_mat.aff12.1D ./__tt_T1w_acpc_dc_restore_brain_obla2e_mat.1D -I > ./T1w_acpc_dc_restore_brain_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_min_outlier_ts_ns+orig -1Dmatrix_apply ./T1w_acpc_dc_restore_brain_al_junk_mat.aff12.1D -prefix ./T1w_acpc_dc_restore_brain_al_junk -input ./__tt_T1w_acpc_dc_restore_brain+orig -master BASE -mast_dxyz 0.800000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./__tt_vr_base_min_outlier_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_min_outlier_ts_ns+orig.BRIK is 9.192507 degrees from plumb.
++ Source dataset: ./__tt_T1w_acpc_dc_restore_brain+orig.HEAD
++ Base dataset:   ./__tt_vr_base_min_outlier_ts_ns+orig.HEAD
++ Loading datasets into memory
++ base center of mass = 46.402 40.936 46.638 (index)
 + source center of mass = 111.662 129.431 103.859 (index)
 + source-target CM = -3.572 21.846 5.784 (xyz)
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =   -3.572   21.846    5.784
 +  shift search range is +/- =   73.061   73.061   59.321
 +                                  4.9%    29.9%     9.7%
 + Range param#4 [z-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000  center = 0.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000  center = 0.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000  center = 0.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000  center = 0.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000  center = 0.000000
++ Final parameter search ranges:
 +       x-shift =  -40.000 ..   40.000
 +       y-shift =  -40.000 ..   40.000
 +       z-shift =  -40.000 ..   40.000
 +       z-angle =  -45.000 ..   45.000
 +       x-angle =  -45.000 ..   45.000
 +       y-angle =  -45.000 ..   45.000
 +       x-scale =    0.711 ..    1.406
 +       y-scale =    0.711 ..    1.406
 +       z-scale =    0.711 ..    1.406
 +     y/x-shear =   -0.111 ..    0.111
 +     z/x-shear =   -0.111 ..    0.111
 +     z/y-shear =   -0.111 ..    0.111
++ changing output grid spacing to 0.8000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 1.0280 0.0031 -0.0556 -24.6128 0.0029 0.9823 0.0871 -5.9434 0.0557 -0.0669 1.0216 -33.7818
++ Unloading unneeded data
++ Output dataset ./T1w_acpc_dc_restore_brain_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.4
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat T1w_acpc_dc_restore_brain+orig \
 -suffix _al_junk -epi vr_base_min_outlier+orig -epi_base 0 -epi_strip \
 3dAutomask -anat_has_skull no -giant_move -volreg off -tshift off" \
 ./T1w_acpc_dc_restore_brain_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base_min_outlier*
#Script is running:
  \rm -f ./__tt_T1w_acpc_dc_restore_brain*

# Finished alignment successfully

foreach run ( 01 )
3dvolreg -verbose -zpad 1 -base vr_base_min_outlier+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.ME13.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 9.192507 degrees from plumb.
++ Reading in base dataset ./vr_base_min_outlier+orig.BRIK
++ Oblique dataset:./pb01.ME13.r01.tshift+orig.BRIK is 9.192507 degrees from plumb.
++ Reading input dataset ./pb01.ME13.r01.tshift+orig.BRIK
++ Edging: x=5 y=5 z=4
++ Creating mask for -maxdisp
 + Automask has 125327 voxels
 + 14015 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 700 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.209  pitch=-0.818  yaw=-0.290  dS=-0.874  dL=-0.277  dP=-0.051
++ Mean: roll=-0.020  pitch=+0.114  yaw=-0.010  dS=+0.108  dL=-0.017  dP=+0.117
++ Max : roll=+0.163  pitch=+1.239  yaw=+0.286  dS=+1.517  dL=+0.197  dP=+0.627
++ Max displacements (mm) for each sub-brick:
 2.71(0.00) 2.87(0.22) 2.75(0.12) 2.96(0.23) 2.97(0.12) 2.87(0.13) 2.92(0.07) 3.03(0.11) 2.95(0.08) 2.94(0.04) 2.98(0.05) 2.95(0.07) 2.93(0.04) 2.95(0.05) 3.04(0.12) 2.94(0.14) 2.83(0.16) 2.80(0.15) 2.76(0.06) 2.77(0.06) 2.46(0.34) 2.46(0.10) 2.36(0.17) 2.33(0.08) 2.43(0.11) 2.39(0.06) 2.39(0.04) 2.42(0.06) 2.41(0.07) 2.34(0.09) 2.37(0.06) 2.39(0.03) 2.32(0.09) 2.35(0.03) 2.37(0.08) 2.32(0.07) 2.26(0.10) 2.30(0.06) 2.30(0.03) 2.26(0.05) 2.24(0.03) 2.26(0.04) 2.24(0.07) 2.21(0.03) 2.25(0.04) 2.28(0.03) 2.22(0.07) 2.18(0.05) 2.20(0.09) 2.22(0.08) 2.21(0.06) 2.25(0.07) 2.22(0.05) 2.15(0.09) 2.22(0.07) 2.32(0.10) 2.28(0.06) 2.20(0.09) 2.25(0.06) 2.26(0.07) 2.16(0.11) 2.14(0.08) 2.23(0.11) 2.29(0.06) 2.24(0.08) 2.21(0.07) 2.29(0.10) 2.31(0.09) 2.19(0.13) 2.20(0.05) 2.28(0.10) 2.22(0.07) 2.18(0.06) 2.24(0.07) 2.23(0.06) 2.19(0.05) 2.23(0.06) 2.22(0.03) 2.12(0.12) 2.14(0.06) 2.16(0.07) 2.14(0.07) 2.09(0.06) 2.15(0.07) 2.17(0.04) 2.18(0.11) 2.16(0.04) 2.19(0.07) 2.16(0.06) 2.13(0.04) 2.19(0.09) 2.21(0.04) 2.15(0.07) 2.17(0.03) 2.21(0.07) 2.21(0.05) 2.18(0.06) 2.18(0.05) 2.20(0.05) 2.10(0.11) 2.05(0.06) 2.12(0.08) 2.13(0.06) 2.12(0.09) 2.14(0.04) 2.11(0.11) 2.13(0.06) 2.09(0.05) 2.10(0.07) 2.14(0.05) 2.14(0.08) 2.10(0.05) 2.13(0.06) 2.20(0.08) 2.17(0.07) 2.10(0.08) 2.10(0.06) 2.14(0.05) 2.12(0.07) 2.17(0.09) 2.22(0.06) 2.23(0.02) 2.15(0.09) 2.11(0.06) 2.18(0.07) 2.15(0.05) 2.10(0.07) 2.12(0.07) 2.16(0.04) 2.10(0.06) 2.05(0.07) 2.11(0.07) 2.11(0.04) 2.04(0.08) 2.03(0.04) 2.10(0.08) 2.07(0.05) 2.02(0.06) 2.06(0.06) 2.07(0.04) 1.99(0.10) 2.01(0.05) 2.05(0.06) 1.98(0.08) 1.97(0.04) 2.03(0.06) 2.00(0.07) 1.91(0.10) 1.90(0.10) 1.91(0.09) 1.87(0.05) 1.91(0.06) 1.96(0.07) 1.83(0.16) 1.85(0.05) 1.99(0.17) 1.94(0.06) 1.86(0.09) 1.85(0.07) 1.93(0.10) 1.93(0.08) 1.91(0.06) 1.95(0.05) 2.01(0.09) 1.95(0.07) 1.90(0.06) 1.95(0.06) 2.01(0.10) 1.94(0.11) 1.85(0.11) 1.89(0.07) 1.93(0.11) 1.89(0.07) 1.86(0.07) 1.91(0.07) 1.84(0.07) 1.78(0.09) 1.77(0.04) 1.77(0.06) 1.78(0.07) 1.73(0.07) 1.72(0.05) 1.76(0.06) 1.71(0.06) 1.67(0.06) 1.70(0.05) 1.72(0.06) 1.66(0.08) 1.63(0.07) 1.65(0.06) 1.64(0.05) 1.58(0.07) 1.57(0.04) 1.60(0.05) 1.51(0.09) 1.40(0.12) 1.23(0.22) 1.26(0.06) 1.23(0.10) 1.23(0.04) 1.32(0.10) 1.32(0.05) 1.28(0.08) 1.40(0.13) 1.44(0.05) 1.39(0.05) 1.32(0.09) 1.29(0.09) 1.34(0.08) 1.35(0.12) 1.18(0.19) 1.12(0.10) 1.18(0.06) 1.20(0.05) 1.14(0.07) 1.07(0.08) 1.12(0.06) 1.21(0.10) 1.12(0.09) 1.05(0.09) 1.10(0.06) 1.11(0.05) 1.00(0.14) 1.02(0.07) 1.05(0.08) 1.05(0.13) 0.56(0.55) 0.46(0.11) 0.67(0.24) 0.72(0.07) 0.66(0.07) 0.65(0.20) 0.94(0.32) 0.90(0.14) 0.83(0.10) 0.70(0.14) 0.68(0.09) 0.71(0.08) 0.66(0.05) 0.70(0.06) 0.75(0.11) 0.88(0.16) 0.87(0.09) 0.80(0.11) 0.64(0.18) 0.57(0.09) 0.64(0.06) 0.73(0.11) 0.76(0.09) 0.67(0.09) 0.62(0.09) 0.64(0.07) 0.70(0.08) 0.63(0.10) 0.60(0.07) 0.67(0.08) 0.72(0.07) 0.69(0.06) 0.64(0.05) 0.66(0.06) 0.72(0.06) 0.71(0.07) 0.64(0.07) 0.66(0.05) 0.68(0.05) 0.62(0.07) 0.60(0.07) 0.64(0.05) 0.62(0.06) 0.57(0.06) 0.57(0.07) 0.63(0.06) 0.56(0.07) 0.55(0.04) 0.54(0.07) 0.49(0.08) 0.46(0.06) 0.46(0.05) 0.48(0.04) 0.50(0.06) 0.45(0.06) 0.44(0.08) 0.47(0.05) 0.47(0.02) 0.42(0.07) 0.40(0.06) 0.46(0.08) 0.46(0.05) 0.39(0.07) 0.39(0.03) 0.45(0.07) 0.41(0.04) 0.29(0.12) 0.29(0.08) 0.37(0.10) 0.36(0.11) 0.32(0.06) 0.35(0.07) 0.38(0.04) 0.34(0.06) 0.33(0.05) 0.39(0.06) 0.42(0.10) 0.37(0.06) 0.39(0.08) 0.48(0.11) 0.43(0.06) 0.39(0.05) 0.53(0.14) 0.56(0.11) 0.45(0.12) 0.47(0.08) 0.55(0.08) 0.48(0.08) 0.41(0.08) 0.45(0.06) 0.52(0.07) 0.49(0.06) 0.41(0.09) 0.43(0.06) 0.46(0.05) 0.41(0.06) 0.37(0.06) 0.42(0.08) 0.43(0.07) 0.35(0.09) 0.34(0.08) 0.39(0.06) 0.37(0.07) 0.34(0.06) 0.35(0.08) 0.38(0.04) 0.34(0.07) 0.27(0.11) 0.34(0.09) 0.35(0.06) 0.30(0.06) 0.29(0.08) 0.31(0.03) 0.30(0.06) 0.20(0.11) 0.18(0.11) 0.23(0.08) 0.25(0.14) 0.18(0.08) 0.21(0.06) 0.36(0.15) 0.32(0.10) 0.24(0.09) 0.25(0.06) 0.31(0.07) 0.26(0.07) 0.21(0.06) 0.22(0.07) 0.30(0.08) 0.28(0.07) 0.23(0.06) 0.20(0.08) 0.26(0.07) 0.26(0.06) 0.19(0.08) 0.23(0.05) 0.29(0.08) 0.25(0.05) 0.19(0.07) 0.22(0.04) 0.23(0.04) 0.15(0.09) 0.13(0.06) 0.20(0.08) 0.13(0.07) 0.07(0.08) 0.04(0.06) 0.07(0.05) 0.08(0.03) 0.04(0.06) 0.00(0.04) 0.05(0.05) 0.09(0.05) 0.02(0.09) 0.04(0.05) 0.06(0.05) 0.05(0.07) 0.03(0.07) 0.06(0.07) 0.03(0.07) 0.05(0.04) 0.07(0.11) 0.15(0.12) 0.16(0.05) 0.08(0.09) 0.15(0.11) 0.18(0.10) 0.22(0.05) 0.16(0.07) 0.11(0.14) 0.13(0.04) 0.12(0.09) 0.08(0.07) 0.07(0.10) 0.10(0.04) 0.08(0.08) 0.08(0.03) 0.14(0.09) 0.16(0.05) 0.09(0.08) 0.12(0.04) 0.18(0.09) 0.19(0.04) 0.12(0.07) 0.13(0.05) 0.20(0.08) 0.17(0.05) 0.12(0.07) 0.17(0.07) 0.24(0.07) 0.24(0.05) 0.15(0.10) 0.18(0.04) 0.20(0.06) 0.19(0.05) 0.15(0.04) 0.20(0.07) 0.25(0.07) 0.19(0.08) 0.19(0.05) 0.26(0.09) 0.25(0.06) 0.23(0.06) 0.59(0.37) 0.98(0.39) 0.89(0.15) 0.94(0.08) 0.92(0.06) 1.09(0.16) 1.07(0.06) 1.07(0.09) 1.12(0.11) 1.05(0.10) 1.07(0.08) 1.07(0.05) 1.01(0.08) 0.92(0.14) 0.99(0.11) 1.08(0.18) 1.02(0.07) 0.95(0.07) 0.96(0.07) 1.00(0.06) 0.99(0.05) 0.94(0.06) 0.98(0.05) 1.04(0.07) 1.02(0.06) 0.97(0.08) 1.04(0.09) 1.07(0.08) 1.04(0.05) 1.01(0.06) 1.08(0.09) 1.13(0.08) 1.10(0.05) 1.05(0.07) 1.08(0.05) 1.05(0.05) 1.29(0.24) 1.52(0.25) 1.49(0.09) 1.48(0.13) 1.48(0.04) 1.58(0.13) 1.63(0.08) 1.60(0.04) 1.50(0.11) 1.53(0.07) 1.64(0.14) 1.62(0.09) 1.57(0.06) 1.62(0.08) 1.61(0.06) 1.58(0.05) 1.62(0.05) 1.68(0.08) 1.66(0.09) 1.59(0.09) 1.69(0.12) 1.74(0.06) 1.65(0.11) 1.64(0.06) 1.69(0.09) 1.68(0.04) 1.64(0.06) 1.65(0.08) 1.72(0.09) 1.70(0.07) 1.64(0.07) 1.69(0.06) 1.69(0.04) 1.65(0.06) 1.65(0.03) 1.72(0.08) 1.71(0.04) 1.68(0.03) 1.74(0.14) 1.78(0.22) 1.82(0.18) 1.87(0.12) 1.83(0.07) 1.83(0.05) 1.89(0.09) 1.89(0.06) 1.88(0.06) 1.83(0.09) 1.89(0.09) 1.92(0.10) 1.88(0.07) 1.84(0.09) 1.86(0.06) 1.89(0.10) 1.87(0.06) 1.85(0.08) 1.92(0.09) 1.95(0.09) 1.89(0.08) 1.88(0.09) 1.94(0.08) 1.93(0.08) 1.87(0.08) 1.94(0.08) 1.98(0.06) 1.93(0.06) 1.88(0.07) 1.95(0.08) 2.01(0.10) 2.00(0.03) 1.92(0.09) 1.97(0.06) 2.01(0.06) 2.00(0.05) 1.91(0.10) 1.94(0.06) 2.02(0.08) 2.01(0.05) 1.93(0.08) 1.97(0.05) 2.05(0.08) 2.07(0.06) 1.98(0.09) 1.99(0.04) 2.05(0.06) 2.06(0.05) 2.00(0.07) 1.99(0.03) 2.06(0.09) 2.08(0.07) 2.03(0.07) 2.01(0.05) 2.10(0.09) 2.12(0.06) 2.06(0.08) 2.05(0.05) 2.12(0.08) 2.13(0.04) 2.11(0.03) 2.06(0.05) 2.09(0.07) 2.13(0.06) 2.13(0.07) 2.10(0.04) 2.14(0.07) 2.18(0.05) 2.16(0.05) 2.10(0.06) 2.16(0.06) 2.21(0.06) 2.19(0.05) 2.14(0.06) 2.20(0.08) 2.23(0.08) 2.15(0.09) 2.17(0.06) 2.24(0.11) 2.23(0.06) 2.18(0.07) 2.18(0.10) 2.25(0.07) 2.29(0.11) 2.21(0.08) 2.21(0.08) 2.26(0.06) 2.28(0.08) 2.21(0.07) 2.22(0.06) 2.28(0.07) 2.30(0.06) 2.26(0.05) 2.24(0.03) 2.29(0.07) 2.33(0.08) 2.30(0.04) 2.24(0.06) 2.30(0.07) 2.37(0.10) 2.39(0.07) 2.31(0.09) 2.41(0.10) 2.82(0.42) 2.98(0.16) 2.88(0.13) 2.77(0.10) 2.87(0.11) 2.88(0.09) 2.78(0.11) 2.75(0.12) 2.81(0.07) 2.82(0.09) 2.78(0.05) 2.78(0.09) 2.84(0.07) 2.85(0.09) 2.77(0.08) 2.81(0.06) 2.88(0.09) 2.84(0.06) 2.75(0.09) 2.80(0.06) 2.88(0.10) 2.84(0.05) 2.75(0.08) 2.81(0.09) 2.82(0.07) 2.77(0.07) 2.73(0.10) 2.81(0.08) 2.83(0.08) 2.78(0.07) 2.75(0.10) 2.83(0.09) 2.73(0.10) 2.62(0.12) 2.65(0.06) 2.70(0.07) 2.61(0.12) 2.49(0.12) 2.51(0.07) 2.61(0.10) 2.62(0.06) 2.53(0.09) 2.53(0.06) 2.61(0.09) 2.60(0.07) 2.52(0.09) 2.60(0.08) 2.66(0.12) 2.61(0.06) 2.59(0.08) 2.65(0.07) 2.66(0.08) 2.57(0.11) 2.57(0.08) 2.65(0.10) 2.68(0.11) 2.62(0.09) 2.58(0.08) 2.66(0.09) 2.69(0.08) 2.62(0.08) 2.58(0.08) 2.65(0.07) 2.71(0.09) 2.64(0.08) 2.60(0.10) 2.69(0.09) 2.70(0.08) 2.62(0.08) 2.64(0.07) 2.70(0.08) 2.70(0.11) 2.62(0.10) 2.66(0.06) 2.73(0.08) 2.72(0.06) 2.66(0.08) 2.72(0.10) 2.75(0.08) 2.70(0.10) 2.67(0.05) 2.58(0.14) 2.40(0.19) 2.49(0.12) 2.57(0.09) 2.61(0.06) 2.61(0.06) 2.59(0.03) 2.64(0.06) 2.69(0.06) 2.67(0.04) 2.59(0.09) 2.64(0.07) 2.67(0.07)
++ Max displacement in automask = 3.04 (mm) at sub-brick 14
++ Max delta displ  in automask = 0.55 (mm) at sub-brick 226
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.ME13.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE T1w_acpc_dc_restore_brain_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base T1w_acpc_dc_restore_brain+orig -input pb01.ME13.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./pb01.ME13.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.ME13.r01.tshift+orig.BRIK is 9.192507 degrees from plumb.
++ Source dataset: ./pb01.ME13.r01.tshift+orig.HEAD
++ Base dataset:   ./T1w_acpc_dc_restore_brain+orig.HEAD
++ Loading datasets into memory
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =    3.446  -24.515  -15.961
 +  shift search range is +/- =   58.037   69.593   58.037
 +                                  5.9%    35.2%    27.5%
++ master dataset for output = base
++ changing output grid spacing to 2.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 700 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..150..151..152..153..154..155..156..157..158..159..160..161..162..163..164..165..166..167..168..169..170..171..172..173..174..175..176..177..178..179..180..181..182..183..184..185..186..187..188..189..190..191..192..193..194..195..196..197..198..199..200..201..202..203..204..205..206..207..208..209..210..211..212..213..214..215..216..217..218..219..220..221..222..223..224..225..226..227..228..229..230..231..232..233..234..235..236..237..238..239..240..241..242..243..244..245..246..247..248..249..250..251..252..253..254..255..256..257..258..259..260..261..262..263..264..265..266..267..268..269..270..271..272..273..274..275..276..277..278..279..280..281..282..283..284..285..286..287..288..289..290..291..292..293..294..295..296..297..298..299..300..301..302..303..304..305..306..307..308..309..310..311..312..313..314..315..316..317..318..319..320..321..322..323..324..325..326..327..328..329..330..331..332..333..334..335..336..337..338..339..340..341..342..343..344..345..346..347..348..349..350..351..352..353..354..355..356..357..358..359..360..361..362..363..364..365..366..367..368..369..370..371..372..373..374..375..376..377..378..379..380..381..382..383..384..385..386..387..388..389..390..391..392..393..394..395..396..397..398..399..400..401..402..403..404..405..406..407..408..409..410..411..412..413..414..415..416..417..418..419..420..421..422..423..424..425..426..427..428..429..430..431..432..433..434..435..436..437..438..439..440..441..442..443..444..445..446..447..448..449..450..451..452..453..454..455..456..457..458..459..460..461..462..463..464..465..466..467..468..469..470..471..472..473..474..475..476..477..478..479..480..481..482..483..484..485..486..487..488..489..490..491..492..493..494..495..496..497..498..499..500..501..502..503..504..505..506..507..508..509..510..511..512..513..514..515..516..517..518..519..520..521..522..523..524..525..526..527..528..529..530..531..532..533..534..535..536..537..538..539..540..541..542..543..544..545..546..547..548..549..550..551..552..553..554..555..556..557..558..559..560..561..562..563..564..565..566..567..568..569..570..571..572..573..574..575..576..577..578..579..580..581..582..583..584..585..586..587..588..589..590..591..592..593..594..595..596..597..598..599..600..601..602..603..604..605..606..607..608..609..610..611..612..613..614..615..616..617..618..619..620..621..622..623..624..625..626..627..628..629..630..631..632..633..634..635..636..637..638..639..640..641..642..643..644..645..646..647..648..649..650..651..652..653..654..655..656..657..658..659..660..661..662..663..664..665..666..667..668..669..670..671..672..673..674..675..676..677..678..679..680..681..682..683..684..685..686..687..688..689..690..691..692..693..694..695..696..697..698..699
++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 192.0
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dAllineate -base T1w_acpc_dc_restore_brain+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 2 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 9.192507 degrees from plumb.
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be TERRIBLY large!
[7m*+ WARNING:[0m   - at least one is more than 50% of search range
 +        -cmass x y z shifts =    6.202  -37.571  -25.315
 +  shift search range is +/- =   58.037   69.593   58.037
 +                                 10.7%    54.0%    43.6%
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 190.3
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D
3dcopy rm.epi.min.r01+orig mask_epi_extents
++ 3dcopy: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
foreach run ( 01 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.ME13.r01.volreg
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.ME13.r01.volreg+orig.BRIK
end
cat_matvec -ONELINE T1w_acpc_dc_restore_brain_al_junk_mat.aff12.1D -I
3dAllineate -base T1w_acpc_dc_restore_brain+orig -input vr_base_min_outlier+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 2 -prefix final_epi_vr_base_min_outlier
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset,
  such as ./vr_base_min_outlier+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base_min_outlier+orig.BRIK is 9.192507 degrees from plumb.
++ Source dataset: ./vr_base_min_outlier+orig.HEAD
++ Base dataset:   ./T1w_acpc_dc_restore_brain+orig.HEAD
++ Loading datasets into memory
[7m*+ WARNING:[0m center of mass shifts (-cmass) are turned off, but would be large
[7m*+ WARNING:[0m   - at least one is more than 20% of search range
 +        -cmass x y z shifts =    3.431  -24.502  -15.940
 +  shift search range is +/- =   58.037   69.593   58.037
 +                                  5.9%    35.2%    27.5%
++ master dataset for output = base
++ changing output grid spacing to 2.0000 mm
++ OpenMP thread count = 15
++ ========== Applying transformation to 1 sub-bricks ==========
++ Output dataset ./final_epi_vr_base_min_outlier+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
 +  
++ ***********************************************************
[7m*+ WARNING:[0m -cmass was turned off, but might have been needed :(
 +           Please check your results - PLEASE PLEASE PLEASE
++ ***********************************************************
3dcopy T1w_acpc_dc_restore_brain+orig anat_final.ME13
++ 3dcopy: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
3dAllineate -base final_epi_vr_base_min_outlier+orig -allcostX -input anat_final.ME13+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.ME13+orig.HEAD
++ Base dataset:   ./final_epi_vr_base_min_outlier+orig.HEAD
++ Loading datasets into memory
++ Local correlation: blok type = 'TOHD(10.354)'
 +        -cmass x y z shifts =   -0.332   -0.098   -0.319
 +  shift search range is +/- =   71.262   75.756   66.126
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 15
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.196298
   sp   = 0.315615
   mi   = 3.3109
   crM  = 0.0481052
   nmi  = 0.865979
   je   = 3.3109
   hel  = -0.103418
   crA  = 0.222708
   crU  = 0.261353
   lss  = 0.803702
   lpc  = 0.239111
   lpa  = 0.760889
   lpc+ = 0.421991
   lpa+ = 0.943768
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 6.0
++ ###########################################################
foreach run ( 01 )
3dmerge -1blur_fwhm 4.0 -doall -prefix pb03.ME13.r01.blur pb02.ME13.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2410.3 MB)

-- Wrote edited dataset: ./pb03.ME13.r01.blur+orig.BRIK

end
foreach run ( 01 )
3dAutomask -prefix rm.mask_r01 pb03.ME13.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.ME13.r01.blur+orig
++ Forming automask
 + Fixed clip level = 289.722107
 + Used gradual clip level = 248.576782 .. 329.831299
 + Number voxels above clip level = 206546
 + Clustering voxels ...
 + Largest cluster has 198848 voxels
 + Clustering voxels ...
 + Largest cluster has 198802 voxels
 + Filled   193 voxels in small holes; now have 198995 voxels
 + Filled   906 voxels in large holes; now have 199901 voxels
 + Clustering voxels ...
 + Largest cluster has 199900 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 702729 voxels
 + Mask now has 199900 voxels
++ 199900 voxels in the mask [out of 902629: 22.15%]
++ first   9 x-planes are zero [from R]
++ last    9 x-planes are zero [from L]
++ first  12 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last   16 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD -union -prefix full_mask.ME13
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ have 1 volumes of input to combine
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 199900 survived, 702729 were zero
++ writing result full_mask.ME13...
3dresample -master full_mask.ME13+orig -input T1w_acpc_dc_restore_brain+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.ME13
++ no -frac option: defaulting to -union
++ processing 1 input dataset(s), NN=2...
++ padding all datasets by 5 (for dilations)
++ have 1 volumes of input to combine
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 205482 survived, 697147 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.ME13...
3dmask_tool -input full_mask.ME13+orig mask_anat.ME13+orig -inter -prefix mask_epi_anat.ME13
++ processing 2 input dataset(s), NN=2...
++ padding all datasets by 0 (for dilations)
++ have 2 volumes of input to combine
++ frac 1 over 2 volumes gives min count 2
++ voxel limits: 21866 clipped, 191758 survived, 689005 were zero
++ writing result mask_epi_anat.ME13...
3dABoverlap -no_automask full_mask.ME13+orig mask_anat.ME13+orig
tee out.mask_ae_overlap.txt
++ 3dABoverlap: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
#A=./full_mask.ME13+orig.BRIK  B=./mask_anat.ME13+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
199900       205482       213624       191758       8142         13724         4.0730      6.6789     0.9868     1.0180     1.0111
3ddot -dodice full_mask.ME13+orig mask_anat.ME13+orig
tee out.mask_ae_dice.txt
0.946061	
foreach run ( 01 )
3dTstat -prefix rm.mean_r01 pb03.ME13.r01.blur+orig
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+orig.BRIK
3dcalc -a pb03.ME13.r01.blur+orig -b rm.mean_r01+orig -c mask_epi_extents+orig -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb04.ME13.r01.scale
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.ME13.r01.scale+orig.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 1 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 1 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile motion_demean.1D -set_nruns 1 -split_into_pad_runs mot_demean
1d_tool.py -infile motion_deriv.1D -set_nruns 1 -split_into_pad_runs mot_deriv
1d_tool.py -infile dfile_rall.1D -set_nruns 1 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_ME13
total number of censored TRs (simple form) = 0
1d_tool.py -infile motion_ME13_censor.1D -show_trs_uncensored space
set ktrs = 1dcat out.keep_trs_rall.txt
3dDeconvolve -input pb04.ME13.r01.scale+orig.HEAD -censor motion_ME13_censor.1D -ortvec mot_demean.r01.1D mot_demean_r01 -ortvec mot_deriv.r01.1D mot_deriv_r01 -polort 5 -float -num_stimts 2 -stim_times 1 stimuli/Motor_left.txt BLOCK(24,1) -stim_label 1 left -stim_times 2 stimuli/Motor_right.txt BLOCK(24,1) -stim_label 2 right -jobs 8 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -errts errts.ME13 -bucket stats.ME13
++ 3dDeconvolve extending num_stimts from 2 to 14 due to -ortvec
++ 3dDeconvolve: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ loading dataset pb04.ME13.r01.scale+orig.HEAD
++ STAT automask has 788967 voxels (out of 902629 = 87.4%)
++ Skipping check for initial transients
++ Input polort=5; Longest run=639.8 s; Recommended minimum polort=5 ++ OK ++
++ -stim_times using TR=0.914 s for stimulus timing conversion
++ -stim_times using TR=0.914 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ ** -stim_times NOTE ** guessing GLOBAL times if 1 time per line; LOCAL otherwise
++ ** GUESSED ** -stim_times 1 using LOCAL times
++ ** GUESSED ** -stim_times 2 using LOCAL times
++ Number of time points: 700 (no censoring)
 + Number of parameters:  20 [18 baseline ; 2 signal]
++ total shared memory needed = 2,552,634,812 bytes (about 2.6 billion)
++ mmap() memory allocated: 2,552,634,812 bytes (about 2.6 billion)
++ Memory required for output bricks = 2,552,634,812 bytes (about 2.6 billion)
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D -input pb04.ME13.r01.scale+orig.HEAD \
 -fout -tout -Rbuck stats.ME13_REML -Rvar stats.ME13_REMLvar \
 -Rerrts errts.ME13_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (700x20):  10.3649  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (700x2):  1  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (700x18):  10.2591  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (700x12):  7.32242  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (700x6):  1.00778  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.36454e-14  ++ VERY GOOD ++
++ Matrix setup time = 1.27 s
++ Voxels in dataset: 902629
++ Voxels per job:    112828
++ Job #1: processing voxels 112828 to 225655; elapsed time=8.518
++ Job #2: processing voxels 225656 to 338483; elapsed time=8.550
++ Job #3: processing voxels 338484 to 451311; elapsed time=8.580
++ Job #4: processing voxels 451312 to 564139; elapsed time=8.611
++ Job #5: processing voxels 564140 to 676967; elapsed time=8.642
++ Job #6: processing voxels 676968 to 789795; elapsed time=8.674
++ Job #7: processing voxels 789796 to 902628; elapsed time=8.705
++ Job #0: processing voxels 0 to 112827; elapsed time=8.715
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345++ Job #2 finished; elapsed time=30.286
6++ Job #4 finished; elapsed time=30.491
++ Job #7 finished; elapsed time=30.508
++ Job #6 finished; elapsed time=30.546
++ Job #1 finished; elapsed time=30.564
++ Job #5 finished; elapsed time=30.670
7++ Job #3 finished; elapsed time=30.980
89.
++ Job #0 waiting for children to finish; elapsed time=31.854
++ Job #0 now finishing up; elapsed time=31.854
++ Smallest FDR q [0 Full_Fstat] = 9.26386e-14
++ Smallest FDR q [2 left#0_Tstat] = 2.08723e-13
++ Smallest FDR q [3 left_Fstat] = 2.08722e-13
++ Smallest FDR q [5 right#0_Tstat] = 2.11195e-13
++ Smallest FDR q [6 right_Fstat] = 2.11195e-13
++ Wrote bucket dataset into ./stats.ME13+orig.BRIK
 + created 5 FDR curves in bucket header
++ Wrote 3D+time dataset into ./errts.ME13+orig.BRIK
++ Program finished; elapsed time=68.151
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  medium:      -0.474      -0.399  ( 7 vs.  8)     right#0  vs.  mot_demean_r01[0]#0
  medium:       0.432       0.363  ( 5 vs.  6)  Run#1Pol#5  vs.  left#0
  medium:      -0.414       0.000  ( 6 vs.  7)      left#0  vs.  right#0
  medium:      -0.402      -0.338  ( 7 vs. 10)     right#0  vs.  mot_demean_r01[2]#0

1d_tool.py -show_df_info -infile X.xmat.1D
tee out.df_info.txt

initial DF                   : 700 : 100.0%

DF used for regs of interest :   2 :   0.3%
DF used for censoring        :   0 :   0.0%
DF used for polort           :   6 :   0.9%
DF used for motion           :  12 :   1.7%
total DF used                :  20 :   2.9%

final DF                     : 680 :  97.1%

3dTcat -prefix all_runs.ME13 pb04.ME13.r01.scale+orig.HEAD
++ 3dTcat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ elapsed time = 4.8 s
3dTstat -mean -prefix rm.signal.all all_runs.ME13+orig[1dcat out.keep_trs_rall.txt]
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.ME13+orig[1dcat out.keep_trs_rall.txt]
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -expr a/b -prefix TSNR.ME13
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.ME13+orig.BRIK
compute_ROI_stats.tcsh -out_dir tsnr_stats_regress -stats_file tsnr_stats_regress/stats_auto_brain.txt -dset_ROI mask_epi_anat.ME13+orig -dset_data TSNR.ME13+orig -rset_label brain -rval_list 1
++ writing stats text to tsnr_stats_regress/stats_auto_brain.txt

dset: brain (mask_epi_anat.ME13), Nroi: 1
-----------------------------------------

   ROI   Nvox  Nzer  Dvox   Tmin  T25%  Tmed  T75%  Tmax     X      Y      Z    ROI_name
   ---   ----  ----  ----   ----  ----  ----  ----  ----   -----  -----  -----  --------
     1 191758     0  24.8     13    73   101   126   280   -15.6   31.6   24.4  NONE

3dTnorm -norm2 -prefix rm.errts.unit errts.ME13+orig
++ 3dTnorm: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask mask_epi_anat.ME13+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
+++ 191758 voxels survive the mask
3dTstat -sos -prefix - mean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.0149039
3dmaskave -quiet -mask mask_epi_anat.ME13+orig errts.ME13+orig
++ 3dmaskave: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
+++ 191758 voxels survive the mask
3dTcorr1D -prefix corr_brain errts.ME13+orig mean.errts.1D
++ 3dTcorr1D: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
 + reading dataset file errts.ME13+orig
 + reading 1D file mean.errts.1D
 + loading dataset ./errts.ME13+orig.BRIK into memory
++ Start correlations: 902629 voxels X 1 time series(700); 1 threads
[7m*+ WARNING:[0m THD_Tcorr1D: 113654 voxels skipped because were constant in time
++ Wrote dataset: ./corr_brain+orig.BRIK
3dcalc -a all_runs.ME13+orig -b errts.ME13+orig -expr a-b -prefix fitts.ME13
++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./fitts.ME13+orig.BRIK
1dcat X.nocensor.xmat.1D[6]
1dcat X.nocensor.xmat.1D[7]
1d_tool.py -infile X.nocensor.xmat.1D -write_xstim X.stim.xmat.1D
3dTstat -sum -prefix sum_ideal.1D X.stim.xmat.1D
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
touch blur_est.ME13.1D
mkdir files_ACF
touch blur.epits.1D
foreach run ( 01 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..699 ==  ) continue
3dFWHMx -detrend -mask full_mask.ME13+orig -ACF files_ACF/out.3dFWHMx.ACF.epits.r01.1D all_runs.ME13+orig[0..699]
++ 3dFWHMx: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 199900
++ detrending start: 49 baseline funcs, 700 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 14.45 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.epits.r01.1D
++ 1dplot: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.epits.r01.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset has 1 sub-brick ==> -tdiff is turned off
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits FWHM blurs: 0 0 0 0
average epits FWHM blurs: 0 0 0 0
echo 0 0 0 0   # epits FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.epits.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.epits.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset has 1 sub-brick ==> -tdiff is turned off
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average epits ACF blurs: 0.949174 2.82762 16.8841 6.82359
average epits ACF blurs: 0.949174 2.82762 16.8841 6.82359
echo 0.949174 2.82762 16.8841 6.82359   # epits ACF blur estimates
touch blur.errts.1D
foreach run ( 01 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..699 ==  ) continue
3dFWHMx -detrend -mask full_mask.ME13+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.ME13+orig[0..699]
++ 3dFWHMx: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 199900
++ detrending start: 49 baseline funcs, 700 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 14.40 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RWC et al.
pnmtopng: 43 colors found
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset has 1 sub-brick ==> -tdiff is turned off
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 0 0 0 0
average errts FWHM blurs: 0 0 0 0
echo 0 0 0 0   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset has 1 sub-brick ==> -tdiff is turned off
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.958605 2.82463 20.3913 6.79713
average errts ACF blurs: 0.958605 2.82463 20.3913 6.79713
echo 0.958605 2.82463 20.3913 6.79713   # errts ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.ME13.1D
3dClustSim -both -mask full_mask.ME13+orig -acf 0.958605 2.82463 20.3913 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 199900 voxels in mask (22.15% of total)
++ Kernel function radius = 14.83 mm
++ ACF(0.96,2.82,20.39) => FWHM=6.80 => 91x109x91 pads to 120x128x120
 + Kernel image dimensions 57 x 60 x 37
++ Startup clock time = 0.2 s
++ Using 15 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.01234567!
++ Clock time now = 349.9 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.ME13+orig
++ 3drefit: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.ME13+orig
 + atrcopy
++ applying attributes
++ 3drefit processed 1 datasets
@radial_correlate -nfirst 0 -polort 5 -do_clean yes -rdir radcor.pb05.regress -mask full_mask.ME13+orig all_runs.ME13+orig.HEAD errts.ME13+orig.HEAD
++ 3dTcat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ elapsed time = 4.6 s
++ 3dTcat: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ elapsed time = 4.7 s
++ 3dcopy: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
-- detrend -polort 5, new eset = det.d01
++ 3dTproject: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 700 retained time points MINUS 6 regressors ==> 694 D.O.F. left
++ no -mask option ==> processing all 902629 voxels in dataset
++ THD_dset_to_vectim: allocated 2527361200 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 113654 vectors are constant

-- running correlation on dataset all_runs.ME13+orig.HEAD ...

++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.emasked.d01+orig.BRIK
++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2410.3 MB)

-- Wrote edited dataset: ./sphere.mean.20.d01+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Wrote dataset: ./radcor.20.d01.all_runs.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
---- done

-- detrend -polort 5, new eset = det.d02
++ 3dTproject: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: Cox the Algebraic (Linear)
++ Setting up regressors
++ 1 Blocks * 6 polynomials -- 6 polort regressors
++ 700 retained time points MINUS 6 regressors ==> 694 D.O.F. left
++ no -mask option ==> processing all 902629 voxels in dataset
++ THD_dset_to_vectim: allocated 2527361200 bytes
[7m*+ WARNING:[0m 3dTproject input data :: 113654 vectors are constant

-- running correlation on dataset errts.ME13+orig.HEAD ...

++ 3dcalc: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.emasked.d02+orig.BRIK
++ merge blur: rad 20, FWHM 40
++ 3dmerge: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (2410.3 MB)

-- Wrote edited dataset: ./sphere.mean.20.d02+orig.BRIK

++ 3dTcorrelate: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
++ Wrote dataset: ./radcor.20.d02.errts.corr+orig.BRIK
++ 3dbucket: AFNI version=AFNI_24.1.02 (Apr  8 2024) [64-bit]
---- done

++ have do_clean, cleaning up...

gen_epi_review.py -script @epi_review.ME13 -dsets pb00.ME13.r01.tcat+orig.HEAD
cat
cat out.ap_uvars.txt
afni_python_wrapper.py -eval data_file_to_json()
gen_ss_review_scripts.py -exit0 -init_uvars_json out.ap_uvars.json -write_uvars_json out.ss_review_uvars.json
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -f rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mean_r01+orig.BRIK rm.mean_r01+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.resam.anat+orig.BRIK rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD
if ( -e @ss_review_basic ) then
./@ss_review_basic
tee out.ss_review.ME13.txt

subject ID                : ME13
AFNI version              : AFNI_24.1.02
AFNI package              : linux_ubuntu_16_64
TR                        : 0.914
TRs removed (per run)     : 0
multiband level           : 1
slice timing pattern      : simult
num stim classes provided : 2
final anatomy dset        : anat_final.ME13+orig.HEAD
final stats dset          : stats.ME13+orig.HEAD
orig voxel counts         : 96	96	78
orig voxel resolution     : 2.395833	2.395833	2.400000
orig volume center        : 5.531868	-15.116238	-14.227501
final voxel resolution    : 2.000000	2.000000	2.000000

motion limit              : 0.3
num TRs above mot limit   : 0
average motion (per TR)   : 0.0480321
average censored motion   : 0.0480321
max motion displacement   : 3.28714
max censored displacement : 3.28714
average outlier frac (TR) : 0.000262628

num runs found            : 1
num TRs per run           : 700
num TRs per run (applied) : 700
num TRs per run (censored): 0
fraction censored per run : 0
TRs total (uncensored)    : 700
TRs total                 : 700
degrees of freedom used   : 20
degrees of freedom left   : 680
final DF fraction         : 0.971429

TRs censored              : 0
censor fraction           : 0.000000
num regs of interest      : 2
num TRs per stim (orig)   : 300 297
num TRs censored per stim : 0 0
fraction TRs censored     : 0.000 0.000
ave mot per sresp (orig)  : 0.046197 0.048903
ave mot per sresp (cens)  : 0.046197 0.048903

TSNR average              : 102.03
global correlation (GCOR) : 0.0149039
anat/EPI mask Dice coef   : 0.946061
maximum F-stat (masked)   : 1000
blur estimates (ACF)      : 0.958605 2.82463 20.3913
blur estimates (FWHM)     : 0 0 0

apqc_make_tcsh.py -review_style pythonic -subj_dir . -uvar_json out.ss_review_uvars.json
++ Done making (executable) IC errts script: 
      run_instacorr_errts.tcsh
++ Done making (executable) GV errts script: 
      run_graphview_errts.tcsh
++ Done making (executable) IC pbrun script: 
      run_instacorr_pbrun.tcsh
++ Done making (executable) GV pbrun script: 
      run_graphview_pbrun.tcsh
++ APQC create: qc_00_vorig_EPI
++ APQC create: qc_01_vorig_anat
++ APQC create: qc_02_vorig_olap
++ APQC create: qc_03_ve2a_epi2anat
++ APQC create: qc_04_ve2a_mask2final
++ Found 3 stats items to use for vstat QC block
++ APQC create: qc_05_vstat_Full_Fstat
++ APQC create: qc_06_vstat_left_0_Coef
++ APQC create: qc_07_vstat_right_0_Coef
++ APQC create: qc_08_mot_enormoutlr
++ APQC create: qc_09_mot_VR6
++ APQC create: qc_10_mot_grayplot
++ APQC create: qc_11_regr_ideal
++ APQC create: qc_12_regr_stims
++ APQC create: qc_13_regr_df
++ APQC create: qc_14_regr_corr_errts
++ APQC create: qc_15_regr_tsnr_fin
++ APQC create: qc_16_radcor_rc_regress
                run: d02/1
++ APQC create: qc_17_warns_xmat
++ APQC create: qc_18_warns_cen_total
++ APQC create: qc_19_warns_cen_stim
++ APQC create: qc_20_warns_press
++ APQC create: qc_21_warns_sat_4095
++ APQC create: qc_22_warns_vlines
++ APQC create: qc_23_qsumm_ssrev
++ APQC create: copy jsons to info dir
++ APQC create: copy ss_review_basic file
++ APQC create: display ss_review_basic info

subject ID                : ME13
AFNI version              : AFNI_24.1.02
AFNI package              : linux_ubuntu_16_64
TR                        : 0.914
TRs removed (per run)     : 0
multiband level           : 1
slice timing pattern      : simult
num stim classes provided : 2
final anatomy dset        : anat_final.ME13+orig.HEAD
final stats dset          : stats.ME13+orig.HEAD
orig voxel counts         : 96	96	78
orig voxel resolution     : 2.395833	2.395833	2.400000
orig volume center        : 5.531868	-15.116238	-14.227501
final voxel resolution    : 2.000000	2.000000	2.000000

motion limit              : 0.3
num TRs above mot limit   : 0
average motion (per TR)   : 0.0480321
average censored motion   : 0.0480321
max motion displacement   : 3.28714
max censored displacement : 3.28714
average outlier frac (TR) : 0.000262628

num runs found            : 1
num TRs per run           : 700
num TRs per run (applied) : 700
num TRs per run (censored): 0
fraction censored per run : 0
TRs total (uncensored)    : 700
TRs total                 : 700
degrees of freedom used   : 20
degrees of freedom left   : 680
final DF fraction         : 0.971429

TRs censored              : 0
censor fraction           : 0.000000
num regs of interest      : 2
num TRs per stim (orig)   : 300 297
num TRs censored per stim : 0 0
fraction TRs censored     : 0.000 0.000
ave mot per sresp (orig)  : 0.046197 0.048903
ave mot per sresp (cens)  : 0.046197 0.048903

TSNR average              : 102.03
global correlation (GCOR) : 0.0149039
anat/EPI mask Dice coef   : 0.946061
maximum F-stat (masked)   : 1000
blur estimates (ACF)      : 0.958605 2.82463 20.3913
blur estimates (FWHM)     : 0 0 0


# ++++++++++++++ Check output of @ss_review_basic ++++++++++++++ #
------------------------------------------------------------------
------------------------------------------------------------------

++ Done setting up QC dir: QC_ME13
   To create the APQC HTML, run either this (from any location):      
     
       apqc_make_html.py -qc_dir /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/QC_ME13

   ... or this (from the afni_proc.py results directory):

       apqc_make_html.py -qc_dir QC_ME13


apqc_make_html.py -qc_dir QC_ME13

++ Done! Wrote QC HTML.
   To view, run either this (without server):

       afni_open -b /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/QC_ME13/index.html

   ... or this (with server):

       open_apqc.py -infiles /home/cputest/Stroke/Data/ME13/func_task/afni_result/ME13.results/QC_ME13/index.html


echo \nconsider running: \n

consider running: 

echo    afni_open -b ME13.results/QC_ME13/index.html
   afni_open -b ME13.results/QC_ME13/index.html
echo 

endif
cd ..
echo execution finished: `date`
date
execution finished: 2024å¹´ 04æœˆ 23æ—¥ æ˜ŸæœŸäºŒ 23:58:07 CST
